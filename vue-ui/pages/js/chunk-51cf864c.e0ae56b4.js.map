{"version":3,"sources":["webpack:///./node_modules/ol/featureloader.js","webpack:///./node_modules/ol/source/vector.js","webpack:///./node_modules/ol/feature.js","webpack:///./node_modules/ol/geom/linestring.js","webpack:///./node_modules/ol/style/image.js","webpack:///./node_modules/core-js/modules/web.dom-collections.for-each.js","webpack:///./node_modules/ol/format/jsonfeature.js","webpack:///./node_modules/ol/format/geojson.js","webpack:///./node_modules/core-js/internals/array-for-each.js","webpack:///./node_modules/ol/style/circle.js","webpack:///./node_modules/ol/style/fill.js","webpack:///./node_modules/ol/style/style.js","webpack:///./node_modules/ol/format/formattype.js","webpack:///./node_modules/ol/loadingstrategy.js","webpack:///./node_modules/ol/format/feature.js","webpack:///./node_modules/ol/geom/geometrycollection.js","webpack:///./node_modules/ol/style/regularshape.js","webpack:///./node_modules/core-js/internals/array-method-is-strict.js","webpack:///./node_modules/ol/geom/flat/interpolate.js","webpack:///./node_modules/ol/geom/multipoint.js","webpack:///./node_modules/ol/source/vectoreventtype.js","webpack:///./node_modules/ol/geom/multilinestring.js","webpack:///./node_modules/ol/xml.js","webpack:///./node_modules/ol/geom/flat/center.js","webpack:///./node_modules/ol/geom/multipolygon.js","webpack:///./node_modules/ol/layer/vector.js"],"names":["_ol_featureloader_","url","format","success","failure","extent","resolution","projection","xhr","XMLHttpRequest","open","getType","ARRAY_BUFFER","responseType","onload","event","status","source","type","JSON","TEXT","responseText","XML","responseXML","parse","call","this","readFeatures","featureProjection","readProjection","getLastExtent","bind","onerror","send","loadFeaturesXhr","features","dataProjection","addFeatures","nullFunction","_ol_source_Vector_","opt_options","options","attributions","logo","undefined","state","READY","wrapX","loader_","format_","overlaps_","overlaps","url_","loader","assert","strategy_","strategy","all","collection","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","nullGeometryFeatures_","idIndex_","undefIdIndex_","featureChangeKeys_","featuresCollection_","getArray","Array","isArray","addFeaturesInternal","bindFeaturesCollection_","inherits","prototype","addFeature","feature","addFeatureInternal","changed","featureKey","getUid","toString","addToIndex_","setupChangeEvents_","geometry","getGeometry","getExtent","insert","dispatchEvent","Event","ADDFEATURE","listen","CHANGE","handleFeatureChange_","PROPERTYCHANGE","valid","id","getId","i","length","extents","newFeatures","geometryFeatures","push","load","modifyingCollection","evt","REMOVEFEATURE","remove","ADD","REMOVE","removeFeature","clear","opt_fast","featureId","keys","forEach","unlistenByKey","removeFeatureInternal","clearEvent","CLEAR","forEachFeature","callback","opt_this","forEachFeatureAtCoordinateDirect","coordinate","forEachFeatureInExtent","intersectsCoordinate","forEachInExtent","forEachFeatureIntersectingExtent","intersectsExtent","result","getFeaturesCollection","getFeatures","getAll","isEmpty","extend","getValues","getFeaturesAtCoordinate","getFeaturesInExtent","getInExtent","getClosestFeatureToCoordinate","opt_filter","x","y","closestFeature","closestPoint","NaN","minSquaredDistance","Infinity","filter","TRUE","previousMinSquaredDistance","closestPointXY","minDistance","Math","sqrt","opt_extent","getFeatureById","getFormat","getOverlaps","getResolutions","getUrl","update","sid","removeFromIdIndex_","CHANGEFEATURE","loadFeatures","ii","loadedExtentsRtree","extentsToLoad","extentToLoad","alreadyLoaded","object","containsExtent","slice","removeLoadedExtent","obj","equals","removed","setLoader","opt_feature","_ol_Feature_","opt_geometryOrProperties","id_","geometryName_","style_","styleFunction_","geometryChangeKey_","getChangeEventType","handleGeometryChanged_","setGeometry","properties","setProperties","clone","getProperties","setGeometryName","getGeometryName","style","getStyle","setStyle","get","getStyleFunction","handleGeometryChange_","set","createStyleFunction","setId","name","unlisten","styleFunction","styles","_ol_geom_LineString_","coordinates","opt_layout","flatMidpoint_","flatMidpointRevision_","maxDelta_","maxDeltaRevision_","setCoordinates","appendCoordinate","flatCoordinates","lineString","setFlatCoordinates","layout","closestSquaredDistanceXY","getRevision","getMaxSquaredDelta","stride","getClosestPoint","forEachSegment","getCoordinateAtM","m","opt_extrapolate","XYM","XYZM","extrapolate","lineStringCoordinateAtM","getCoordinates","getCoordinateAt","fraction","opt_dest","getLength","getFlatMidpoint","getSimplifiedGeometryInternal","squaredTolerance","simplifiedFlatCoordinates","douglasPeucker","simplifiedLineString","XY","LINE_STRING","setLayout","setFlatCoordinatesInternal","_ol_style_Image_","opacity_","opacity","rotateWithView_","rotateWithView","rotation_","rotation","scale_","scale","snapToPixel_","snapToPixel","getOpacity","getRotateWithView","getRotation","getScale","getSnapToPixel","getAnchor","getImage","pixelRatio","getHitDetectionImage","getImageState","getImageSize","getHitDetectionImageSize","getOrigin","getSize","setOpacity","setRotateWithView","setRotation","setScale","setSnapToPixel","listenImageChange","listener","thisArg","unlistenImageChange","global","DOMIterables","DOMTokenListPrototype","createNonEnumerableProperty","handlePrototype","CollectionPrototype","error","COLLECTION_NAME","_ol_format_JSONFeature_","getObject_","readFeature","readFeatureFromObject","getReadOptions","readFeaturesFromObject","readGeometry","readGeometryFromObject","readProjectionFromObject","writeFeature","stringify","writeFeatureObject","writeFeatures","writeFeaturesObject","writeGeometry","writeGeometryObject","_ol_format_GeoJSON_","defaultDataProjection","defaultFeatureProjection","geometryName","extractGeometryName_","extractGeometryName","readGeometry_","geometryReader","GEOMETRY_READERS_","transformWithOptions","readGeometryCollectionGeometry_","geometries","map","readPointGeometry_","readLineStringGeometry_","readMultiLineStringGeometry_","readMultiPointGeometry_","readMultiPolygonGeometry_","readPolygonGeometry_","writeGeometry_","geometryWriter","GEOMETRY_WRITERS_","writeEmptyGeometryCollectionGeometry_","writeGeometryCollectionGeometry_","getGeometriesArray","assign","writeLineStringGeometry_","writeMultiLineStringGeometry_","writeMultiPointGeometry_","writeMultiPolygonGeometry_","right","rightHanded","writePointGeometry_","writePolygonGeometry_","geoJSONFeature","geometry_name","geoJSONObject","geoJSONFeatureCollection","geoJSONFeatures","crs","adaptOptions","objects","$forEach","arrayMethodIsStrict","STRICT_METHOD","module","exports","callbackfn","arguments","_ol_style_Circle_","points","fill","radius","stroke","atlasManager","getFill","getStroke","getRadius","atlasManager_","setRadius","radius_","render_","_ol_style_Fill_","color_","color","checksum_","getColor","setColor","getChecksum","CanvasPattern","CanvasGradient","asString","_ol_style_Style_","geometry_","geometryFunction_","defaultGeometryFunction","fill_","image_","image","renderer_","renderer","stroke_","text_","text","zIndex_","zIndex","getText","getZIndex","getRenderer","setRenderer","getGeometryFunction","setFill","setImage","setStroke","setText","setZIndex","createFunction","default_","defaultFunction","width","createDefaultEditing","white","blue","POLYGON","MULTI_POLYGON","MULTI_LINE_STRING","CIRCLE","concat","POINT","MULTI_POINT","GEOMETRY_COLLECTION","_ol_format_FormatType_","_ol_loadingstrategy_","tileGrid","z","getZForResolution","tileRange","getTileRangeForExtentAndZ","tileCoord","minX","maxX","minY","maxY","getTileCoordExtent","_ol_format_Feature_","write","transformed","equivalent","transform","transformExtent","decimals","power","pow","round","applyTransform","_ol_geom_GeometryCollection_","opt_geometries","geometries_","listenGeometriesChange_","cloneGeometries_","clonedGeometries","unlistenGeometriesChange_","geometryCollection","setGeometries","containsXY","computeExtent","createOrUpdateEmpty","getGeometries","getSimplifiedGeometry","simplifiedGeometryRevision","simplifiedGeometryCache","simplifiedGeometryMaxMinSquaredTolerance","key","hasOwnProperty","simplifiedGeometries","simplified","simplifiedGeometry","simplifiedGeometryCollection","setGeometriesArray","rotate","angle","anchor","sx","opt_sy","opt_anchor","getCenter","transformFn","translate","deltaX","deltaY","disposeInternal","_ol_style_RegularShape_","checksums_","canvas_","hitDetectionCanvas_","origin_","points_","radius1","radius2_","radius2","angle_","anchor_","size_","imageSize_","hitDetectionImageSize_","getPoints","getRadius2","getAngle","LOADED","imageSize","strokeStyle","lineCap","lineJoin","miterLimit","lineDash","lineDashOffset","strokeWidth","defaultStrokeStyle","asColorLike","getWidth","defaultLineWidth","getLineDash","getLineDashOffset","CANVAS_LINE_DASH","getLineJoin","defaultLineJoin","getLineCap","defaultLineCap","getMiterLimit","defaultMiterLimit","size","renderOptions","context","createCanvasContext2D","canvas","draw_","createHitDetectionCanvas_","renderHitDetectionCallback","hasCustomHitDetectionImage","drawHitDetectionCanvas_","info","add","offsetX","offsetY","hitImage","height","angle0","radiusC","setTransform","beginPath","arc","PI","lineTo","cos","sin","defaultFillStyle","fillStyle","lineWidth","setLineDash","closePath","strokeChecksum","fillChecksum","recalculate","checksum","fails","METHOD_NAME","argument","method","_ol_geom_flat_interpolate_","offset","end","pointX","pointY","n","x1","y1","cumulativeLengths","x2","y2","target","index","binarySearch","t","o","lerp","lo","hi","mid","m0","m1","ends","interpolate","_ol_geom_MultiPoint_","appendPoint","point","getFlatCoordinates","multiPoint","j","squaredDistance","getPoint","_ol_source_VectorEventType_","_ol_geom_MultiLineString_","ends_","appendLineString","multiLineString","getsMaxSquaredDelta","getsClosestPoint","opt_interpolate","lineStringsCoordinateAtM","coordinatess","getEnds","getLineString","getLineStrings","lineStrings","getFlatMidpoints","midpoints","midpoint","simplifiedEnds","douglasPeuckers","simplifiedMultiLineString","setLineStrings","getLayout","_ol_xml_","DOCUMENT","document","implementation","createDocument","createElementNS","namespaceURI","qualifiedName","getAllTextContent","node","normalizeWhitespace","getAllTextContent_","join","accumulator","nodeType","Node","CDATA_SECTION_NODE","TEXT_NODE","String","nodeValue","replace","firstChild","nextSibling","isDocument","value","Document","isNode","getAttributeNS","setAttributeNS","xml","DOMParser","parseFromString","makeArrayExtender","valueReader","objectStack","array","makeArrayPusher","makeReplacer","makeObjectPropertyPusher","opt_property","property","localName","makeObjectPropertySetter","makeChildAppender","nodeWriter","parent","parentNode","appendChild","makeArraySerializer","serializersNS","nodeFactory","serializers","makeSimpleNodeFactory","serialize","opt_nodeName","opt_namespaceURI","fixedNodeName","nodeName","OBJECT_PROPERTY_NODE_FACTORY","makeSequence","orderedKeys","sequence","makeStructureNS","namespaceURIs","structure","opt_structureNS","structureNS","parseNode","parsersNS","firstElementChild","nextElementSibling","parsers","parser","pushParseAndPop","pop","values","opt_keys","pushSerializeAndPop","_ol_geom_flat_center_","endss","flatCenters","createEmpty","createOrUpdateFromFlatCoordinates","_ol_geom_MultiPolygon_","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","orientedRevision_","orientedFlatCoordinates_","appendPolygon","polygon","multiPolygon","len","newEndss","getssMaxSquaredDelta","getssClosestPoint","getOrientedFlatCoordinates","linearRingssContainsXY","getArea","linearRingss","opt_right","orientLinearRingss","coordinatesss","getEndss","getFlatInteriorPoints","getInteriorPoints","interiorPoints","linearRingssAreOriented","simplifiedEndss","quantizess","simplifiedMultiPolygon","getPolygon","prevEnds","getPolygons","jj","polygons","lastEnds","setPolygons","_ol_layer_Vector_","baseOptions","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","updateWhileAnimating_","updateWhileInteracting_","renderMode_","renderMode","VECTOR","getDeclutter","setDeclutter","getRenderBuffer","getRenderOrder","Property_","RENDER_ORDER","getSource","getUpdateWhileAnimating","getUpdateWhileInteracting","setRenderOrder","renderOrder","getRenderMode"],"mappings":"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","file":"js/chunk-51cf864c.e0ae56b4.js","sourcesContent":["import _ol_ from './index.js';\nimport _ol_format_FormatType_ from './format/formattype.js';\nimport _ol_xml_ from './xml.js';\nvar _ol_featureloader_ = {};\n\n\n/**\n * @param {string|ol.FeatureUrlFunction} url Feature URL service.\n * @param {ol.format.Feature} format Feature format.\n * @param {function(this:ol.VectorTile, Array.<ol.Feature>, ol.proj.Projection, ol.Extent)|function(this:ol.source.Vector, Array.<ol.Feature>)} success\n *     Function called with the loaded features and optionally with the data\n *     projection. Called with the vector tile or source as `this`.\n * @param {function(this:ol.VectorTile)|function(this:ol.source.Vector)} failure\n *     Function called when loading failed. Called with the vector tile or\n *     source as `this`.\n * @return {ol.FeatureLoader} The feature loader.\n */\n_ol_featureloader_.loadFeaturesXhr = function(url, format, success, failure) {\n  return (\n    /**\n     * @param {ol.Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {ol.proj.Projection} projection Projection.\n     * @this {ol.source.Vector|ol.VectorTile}\n     */\n    function(extent, resolution, projection) {\n      var xhr = new XMLHttpRequest();\n      xhr.open('GET',\n          typeof url === 'function' ? url(extent, resolution, projection) : url,\n          true);\n      if (format.getType() == _ol_format_FormatType_.ARRAY_BUFFER) {\n        xhr.responseType = 'arraybuffer';\n      }\n      /**\n       * @param {Event} event Event.\n       * @private\n       */\n      xhr.onload = function(event) {\n        // status will be 0 for file:// urls\n        if (!xhr.status || xhr.status >= 200 && xhr.status < 300) {\n          var type = format.getType();\n          /** @type {Document|Node|Object|string|undefined} */\n          var source;\n          if (type == _ol_format_FormatType_.JSON ||\n                type == _ol_format_FormatType_.TEXT) {\n            source = xhr.responseText;\n          } else if (type == _ol_format_FormatType_.XML) {\n            source = xhr.responseXML;\n            if (!source) {\n              source = _ol_xml_.parse(xhr.responseText);\n            }\n          } else if (type == _ol_format_FormatType_.ARRAY_BUFFER) {\n            source = /** @type {ArrayBuffer} */ (xhr.response);\n          }\n          if (source) {\n            success.call(this, format.readFeatures(source,\n                {featureProjection: projection}),\n            format.readProjection(source), format.getLastExtent());\n          } else {\n            failure.call(this);\n          }\n        } else {\n          failure.call(this);\n        }\n      }.bind(this);\n      /**\n       * @private\n       */\n      xhr.onerror = function() {\n        failure.call(this);\n      }.bind(this);\n      xhr.send();\n    }\n  );\n};\n\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|ol.FeatureUrlFunction} url Feature URL service.\n * @param {ol.format.Feature} format Feature format.\n * @return {ol.FeatureLoader} The feature loader.\n * @api\n */\n_ol_featureloader_.xhr = function(url, format) {\n  return _ol_featureloader_.loadFeaturesXhr(url, format,\n      /**\n       * @param {Array.<ol.Feature>} features The loaded features.\n       * @param {ol.proj.Projection} dataProjection Data projection.\n       * @this {ol.source.Vector}\n       */\n      function(features, dataProjection) {\n        this.addFeatures(features);\n      }, /* FIXME handle error */ _ol_.nullFunction);\n};\nexport default _ol_featureloader_;\n","// FIXME bulk feature upload - suppress events\n// FIXME make change-detection more refined (notably, geometry hint)\n\nimport _ol_ from '../index.js';\nimport _ol_Collection_ from '../collection.js';\nimport _ol_CollectionEventType_ from '../collectioneventtype.js';\nimport _ol_ObjectEventType_ from '../objecteventtype.js';\nimport _ol_array_ from '../array.js';\nimport _ol_asserts_ from '../asserts.js';\nimport _ol_events_ from '../events.js';\nimport _ol_events_Event_ from '../events/event.js';\nimport _ol_events_EventType_ from '../events/eventtype.js';\nimport _ol_extent_ from '../extent.js';\nimport _ol_featureloader_ from '../featureloader.js';\nimport _ol_functions_ from '../functions.js';\nimport _ol_loadingstrategy_ from '../loadingstrategy.js';\nimport _ol_obj_ from '../obj.js';\nimport _ol_source_Source_ from '../source/source.js';\nimport _ol_source_State_ from '../source/state.js';\nimport _ol_source_VectorEventType_ from '../source/vectoreventtype.js';\nimport _ol_structs_RBush_ from '../structs/rbush.js';\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link ol.source.VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @constructor\n * @extends {ol.source.Source}\n * @fires ol.source.Vector.Event\n * @param {olx.source.VectorOptions=} opt_options Vector source options.\n * @api\n */\nvar _ol_source_Vector_ = function(opt_options) {\n\n  var options = opt_options || {};\n\n  _ol_source_Source_.call(this, {\n    attributions: options.attributions,\n    logo: options.logo,\n    projection: undefined,\n    state: _ol_source_State_.READY,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true\n  });\n\n  /**\n   * @private\n   * @type {ol.FeatureLoader}\n   */\n  this.loader_ = _ol_.nullFunction;\n\n  /**\n   * @private\n   * @type {ol.format.Feature|undefined}\n   */\n  this.format_ = options.format;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.overlaps_ = options.overlaps == undefined ? true : options.overlaps;\n\n  /**\n   * @private\n   * @type {string|ol.FeatureUrlFunction|undefined}\n   */\n  this.url_ = options.url;\n\n  if (options.loader !== undefined) {\n    this.loader_ = options.loader;\n  } else if (this.url_ !== undefined) {\n    _ol_asserts_.assert(this.format_, 7); // `format` must be set when `url` is set\n    // create a XHR feature loader for \"url\" and \"format\"\n    this.loader_ = _ol_featureloader_.xhr(this.url_, /** @type {ol.format.Feature} */ (this.format_));\n  }\n\n  /**\n   * @private\n   * @type {ol.LoadingStrategy}\n   */\n  this.strategy_ = options.strategy !== undefined ? options.strategy :\n    _ol_loadingstrategy_.all;\n\n  var useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n  /**\n   * @private\n   * @type {ol.structs.RBush.<ol.Feature>}\n   */\n  this.featuresRtree_ = useSpatialIndex ? new _ol_structs_RBush_() : null;\n\n  /**\n   * @private\n   * @type {ol.structs.RBush.<{extent: ol.Extent}>}\n   */\n  this.loadedExtentsRtree_ = new _ol_structs_RBush_();\n\n  /**\n   * @private\n   * @type {Object.<string, ol.Feature>}\n   */\n  this.nullGeometryFeatures_ = {};\n\n  /**\n   * A lookup of features by id (the return from feature.getId()).\n   * @private\n   * @type {Object.<string, ol.Feature>}\n   */\n  this.idIndex_ = {};\n\n  /**\n   * A lookup of features without id (keyed by ol.getUid(feature)).\n   * @private\n   * @type {Object.<string, ol.Feature>}\n   */\n  this.undefIdIndex_ = {};\n\n  /**\n   * @private\n   * @type {Object.<string, Array.<ol.EventsKey>>}\n   */\n  this.featureChangeKeys_ = {};\n\n  /**\n   * @private\n   * @type {ol.Collection.<ol.Feature>}\n   */\n  this.featuresCollection_ = null;\n\n  var collection, features;\n  if (options.features instanceof _ol_Collection_) {\n    collection = options.features;\n    features = collection.getArray();\n  } else if (Array.isArray(options.features)) {\n    features = options.features;\n  }\n  if (!useSpatialIndex && collection === undefined) {\n    collection = new _ol_Collection_(features);\n  }\n  if (features !== undefined) {\n    this.addFeaturesInternal(features);\n  }\n  if (collection !== undefined) {\n    this.bindFeaturesCollection_(collection);\n  }\n\n};\n\n_ol_.inherits(_ol_source_Vector_, _ol_source_Source_);\n\n\n/**\n * Add a single feature to the source.  If you want to add a batch of features\n * at once, call {@link ol.source.Vector#addFeatures source.addFeatures()}\n * instead. A feature will not be added to the source if feature with\n * the same id is already there. The reason for this behavior is to avoid\n * feature duplication when using bbox or tile loading strategies.\n * @param {ol.Feature} feature Feature to add.\n * @api\n */\n_ol_source_Vector_.prototype.addFeature = function(feature) {\n  this.addFeatureInternal(feature);\n  this.changed();\n};\n\n\n/**\n * Add a feature without firing a `change` event.\n * @param {ol.Feature} feature Feature.\n * @protected\n */\n_ol_source_Vector_.prototype.addFeatureInternal = function(feature) {\n  var featureKey = _ol_.getUid(feature).toString();\n\n  if (!this.addToIndex_(featureKey, feature)) {\n    return;\n  }\n\n  this.setupChangeEvents_(featureKey, feature);\n\n  var geometry = feature.getGeometry();\n  if (geometry) {\n    var extent = geometry.getExtent();\n    if (this.featuresRtree_) {\n      this.featuresRtree_.insert(extent, feature);\n    }\n  } else {\n    this.nullGeometryFeatures_[featureKey] = feature;\n  }\n\n  this.dispatchEvent(\n      new _ol_source_Vector_.Event(_ol_source_VectorEventType_.ADDFEATURE, feature));\n};\n\n\n/**\n * @param {string} featureKey Unique identifier for the feature.\n * @param {ol.Feature} feature The feature.\n * @private\n */\n_ol_source_Vector_.prototype.setupChangeEvents_ = function(featureKey, feature) {\n  this.featureChangeKeys_[featureKey] = [\n    _ol_events_.listen(feature, _ol_events_EventType_.CHANGE,\n        this.handleFeatureChange_, this),\n    _ol_events_.listen(feature, _ol_ObjectEventType_.PROPERTYCHANGE,\n        this.handleFeatureChange_, this)\n  ];\n};\n\n\n/**\n * @param {string} featureKey Unique identifier for the feature.\n * @param {ol.Feature} feature The feature.\n * @return {boolean} The feature is \"valid\", in the sense that it is also a\n *     candidate for insertion into the Rtree.\n * @private\n */\n_ol_source_Vector_.prototype.addToIndex_ = function(featureKey, feature) {\n  var valid = true;\n  var id = feature.getId();\n  if (id !== undefined) {\n    if (!(id.toString() in this.idIndex_)) {\n      this.idIndex_[id.toString()] = feature;\n    } else {\n      valid = false;\n    }\n  } else {\n    _ol_asserts_.assert(!(featureKey in this.undefIdIndex_),\n        30); // The passed `feature` was already added to the source\n    this.undefIdIndex_[featureKey] = feature;\n  }\n  return valid;\n};\n\n\n/**\n * Add a batch of features to the source.\n * @param {Array.<ol.Feature>} features Features to add.\n * @api\n */\n_ol_source_Vector_.prototype.addFeatures = function(features) {\n  this.addFeaturesInternal(features);\n  this.changed();\n};\n\n\n/**\n * Add features without firing a `change` event.\n * @param {Array.<ol.Feature>} features Features.\n * @protected\n */\n_ol_source_Vector_.prototype.addFeaturesInternal = function(features) {\n  var featureKey, i, length, feature;\n\n  var extents = [];\n  var newFeatures = [];\n  var geometryFeatures = [];\n\n  for (i = 0, length = features.length; i < length; i++) {\n    feature = features[i];\n    featureKey = _ol_.getUid(feature).toString();\n    if (this.addToIndex_(featureKey, feature)) {\n      newFeatures.push(feature);\n    }\n  }\n\n  for (i = 0, length = newFeatures.length; i < length; i++) {\n    feature = newFeatures[i];\n    featureKey = _ol_.getUid(feature).toString();\n    this.setupChangeEvents_(featureKey, feature);\n\n    var geometry = feature.getGeometry();\n    if (geometry) {\n      var extent = geometry.getExtent();\n      extents.push(extent);\n      geometryFeatures.push(feature);\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n  }\n  if (this.featuresRtree_) {\n    this.featuresRtree_.load(extents, geometryFeatures);\n  }\n\n  for (i = 0, length = newFeatures.length; i < length; i++) {\n    this.dispatchEvent(new _ol_source_Vector_.Event(\n        _ol_source_VectorEventType_.ADDFEATURE, newFeatures[i]));\n  }\n};\n\n\n/**\n * @param {!ol.Collection.<ol.Feature>} collection Collection.\n * @private\n */\n_ol_source_Vector_.prototype.bindFeaturesCollection_ = function(collection) {\n  var modifyingCollection = false;\n  _ol_events_.listen(this, _ol_source_VectorEventType_.ADDFEATURE,\n      function(evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      });\n  _ol_events_.listen(this, _ol_source_VectorEventType_.REMOVEFEATURE,\n      function(evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      });\n  _ol_events_.listen(collection, _ol_CollectionEventType_.ADD,\n      function(evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(/** @type {ol.Feature} */ (evt.element));\n          modifyingCollection = false;\n        }\n      }, this);\n  _ol_events_.listen(collection, _ol_CollectionEventType_.REMOVE,\n      function(evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(/** @type {ol.Feature} */ (evt.element));\n          modifyingCollection = false;\n        }\n      }, this);\n  this.featuresCollection_ = collection;\n};\n\n\n/**\n * Remove all features from the source.\n * @param {boolean=} opt_fast Skip dispatching of {@link removefeature} events.\n * @api\n */\n_ol_source_Vector_.prototype.clear = function(opt_fast) {\n  if (opt_fast) {\n    for (var featureId in this.featureChangeKeys_) {\n      var keys = this.featureChangeKeys_[featureId];\n      keys.forEach(_ol_events_.unlistenByKey);\n    }\n    if (!this.featuresCollection_) {\n      this.featureChangeKeys_ = {};\n      this.idIndex_ = {};\n      this.undefIdIndex_ = {};\n    }\n  } else {\n    if (this.featuresRtree_) {\n      this.featuresRtree_.forEach(this.removeFeatureInternal, this);\n      for (var id in this.nullGeometryFeatures_) {\n        this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n      }\n    }\n  }\n  if (this.featuresCollection_) {\n    this.featuresCollection_.clear();\n  }\n\n  if (this.featuresRtree_) {\n    this.featuresRtree_.clear();\n  }\n  this.loadedExtentsRtree_.clear();\n  this.nullGeometryFeatures_ = {};\n\n  var clearEvent = new _ol_source_Vector_.Event(_ol_source_VectorEventType_.CLEAR);\n  this.dispatchEvent(clearEvent);\n  this.changed();\n};\n\n\n/**\n * Iterate through all features on the source, calling the provided callback\n * with each one.  If the callback returns any \"truthy\" value, iteration will\n * stop and the function will return the same value.\n *\n * @param {function(this: T, ol.Feature): S} callback Called with each feature\n *     on the source.  Return a truthy value to stop iteration.\n * @param {T=} opt_this The object to use as `this` in the callback.\n * @return {S|undefined} The return value from the last call to the callback.\n * @template T,S\n * @api\n */\n_ol_source_Vector_.prototype.forEachFeature = function(callback, opt_this) {\n  if (this.featuresRtree_) {\n    return this.featuresRtree_.forEach(callback, opt_this);\n  } else if (this.featuresCollection_) {\n    return this.featuresCollection_.forEach(callback, opt_this);\n  }\n};\n\n\n/**\n * Iterate through all features whose geometries contain the provided\n * coordinate, calling the callback with each feature.  If the callback returns\n * a \"truthy\" value, iteration will stop and the function will return the same\n * value.\n *\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {function(this: T, ol.Feature): S} callback Called with each feature\n *     whose goemetry contains the provided coordinate.\n * @param {T=} opt_this The object to use as `this` in the callback.\n * @return {S|undefined} The return value from the last call to the callback.\n * @template T,S\n */\n_ol_source_Vector_.prototype.forEachFeatureAtCoordinateDirect = function(coordinate, callback, opt_this) {\n  var extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n  return this.forEachFeatureInExtent(extent, function(feature) {\n    var geometry = feature.getGeometry();\n    if (geometry.intersectsCoordinate(coordinate)) {\n      return callback.call(opt_this, feature);\n    } else {\n      return undefined;\n    }\n  });\n};\n\n\n/**\n * Iterate through all features whose bounding box intersects the provided\n * extent (note that the feature's geometry may not intersect the extent),\n * calling the callback with each feature.  If the callback returns a \"truthy\"\n * value, iteration will stop and the function will return the same value.\n *\n * If you are interested in features whose geometry intersects an extent, call\n * the {@link ol.source.Vector#forEachFeatureIntersectingExtent\n * source.forEachFeatureIntersectingExtent()} method instead.\n *\n * When `useSpatialIndex` is set to false, this method will loop through all\n * features, equivalent to {@link ol.source.Vector#forEachFeature}.\n *\n * @param {ol.Extent} extent Extent.\n * @param {function(this: T, ol.Feature): S} callback Called with each feature\n *     whose bounding box intersects the provided extent.\n * @param {T=} opt_this The object to use as `this` in the callback.\n * @return {S|undefined} The return value from the last call to the callback.\n * @template T,S\n * @api\n */\n_ol_source_Vector_.prototype.forEachFeatureInExtent = function(extent, callback, opt_this) {\n  if (this.featuresRtree_) {\n    return this.featuresRtree_.forEachInExtent(extent, callback, opt_this);\n  } else if (this.featuresCollection_) {\n    return this.featuresCollection_.forEach(callback, opt_this);\n  }\n};\n\n\n/**\n * Iterate through all features whose geometry intersects the provided extent,\n * calling the callback with each feature.  If the callback returns a \"truthy\"\n * value, iteration will stop and the function will return the same value.\n *\n * If you only want to test for bounding box intersection, call the\n * {@link ol.source.Vector#forEachFeatureInExtent\n * source.forEachFeatureInExtent()} method instead.\n *\n * @param {ol.Extent} extent Extent.\n * @param {function(this: T, ol.Feature): S} callback Called with each feature\n *     whose geometry intersects the provided extent.\n * @param {T=} opt_this The object to use as `this` in the callback.\n * @return {S|undefined} The return value from the last call to the callback.\n * @template T,S\n * @api\n */\n_ol_source_Vector_.prototype.forEachFeatureIntersectingExtent = function(extent, callback, opt_this) {\n  return this.forEachFeatureInExtent(extent,\n      /**\n       * @param {ol.Feature} feature Feature.\n       * @return {S|undefined} The return value from the last call to the callback.\n       * @template S\n       */\n      function(feature) {\n        var geometry = feature.getGeometry();\n        if (geometry.intersectsExtent(extent)) {\n          var result = callback.call(opt_this, feature);\n          if (result) {\n            return result;\n          }\n        }\n      });\n};\n\n\n/**\n * Get the features collection associated with this source. Will be `null`\n * unless the source was configured with `useSpatialIndex` set to `false`, or\n * with an {@link ol.Collection} as `features`.\n * @return {ol.Collection.<ol.Feature>} The collection of features.\n * @api\n */\n_ol_source_Vector_.prototype.getFeaturesCollection = function() {\n  return this.featuresCollection_;\n};\n\n\n/**\n * Get all features on the source in random order.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\n_ol_source_Vector_.prototype.getFeatures = function() {\n  var features;\n  if (this.featuresCollection_) {\n    features = this.featuresCollection_.getArray();\n  } else if (this.featuresRtree_) {\n    features = this.featuresRtree_.getAll();\n    if (!_ol_obj_.isEmpty(this.nullGeometryFeatures_)) {\n      _ol_array_.extend(\n          features, _ol_obj_.getValues(this.nullGeometryFeatures_));\n    }\n  }\n  return /** @type {Array.<ol.Feature>} */ (features);\n};\n\n\n/**\n * Get all features whose geometry intersects the provided coordinate.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\n_ol_source_Vector_.prototype.getFeaturesAtCoordinate = function(coordinate) {\n  var features = [];\n  this.forEachFeatureAtCoordinateDirect(coordinate, function(feature) {\n    features.push(feature);\n  });\n  return features;\n};\n\n\n/**\n * Get all features in the provided extent.  Note that this returns an array of\n * all features intersecting the given extent in random order (so it may include\n * features whose geometries do not intersect the extent).\n *\n * This method is not available when the source is configured with\n * `useSpatialIndex` set to `false`.\n * @param {ol.Extent} extent Extent.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\n_ol_source_Vector_.prototype.getFeaturesInExtent = function(extent) {\n  return this.featuresRtree_.getInExtent(extent);\n};\n\n\n/**\n * Get the closest feature to the provided coordinate.\n *\n * This method is not available when the source is configured with\n * `useSpatialIndex` set to `false`.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {function(ol.Feature):boolean=} opt_filter Feature filter function.\n *     The filter function will receive one argument, the {@link ol.Feature feature}\n *     and it should return a boolean value. By default, no filtering is made.\n * @return {ol.Feature} Closest feature.\n * @api\n */\n_ol_source_Vector_.prototype.getClosestFeatureToCoordinate = function(coordinate, opt_filter) {\n  // Find the closest feature using branch and bound.  We start searching an\n  // infinite extent, and find the distance from the first feature found.  This\n  // becomes the closest feature.  We then compute a smaller extent which any\n  // closer feature must intersect.  We continue searching with this smaller\n  // extent, trying to find a closer feature.  Every time we find a closer\n  // feature, we update the extent being searched so that any even closer\n  // feature must intersect it.  We continue until we run out of features.\n  var x = coordinate[0];\n  var y = coordinate[1];\n  var closestFeature = null;\n  var closestPoint = [NaN, NaN];\n  var minSquaredDistance = Infinity;\n  var extent = [-Infinity, -Infinity, Infinity, Infinity];\n  var filter = opt_filter ? opt_filter : _ol_functions_.TRUE;\n  this.featuresRtree_.forEachInExtent(extent,\n      /**\n       * @param {ol.Feature} feature Feature.\n       */\n      function(feature) {\n        if (filter(feature)) {\n          var geometry = feature.getGeometry();\n          var previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance = geometry.closestPointXY(\n              x, y, closestPoint, minSquaredDistance);\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            var minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      });\n  return closestFeature;\n};\n\n\n/**\n * Get the extent of the features currently in the source.\n *\n * This method is not available when the source is configured with\n * `useSpatialIndex` set to `false`.\n * @param {ol.Extent=} opt_extent Destination extent. If provided, no new extent\n *     will be created. Instead, that extent's coordinates will be overwritten.\n * @return {ol.Extent} Extent.\n * @api\n */\n_ol_source_Vector_.prototype.getExtent = function(opt_extent) {\n  return this.featuresRtree_.getExtent(opt_extent);\n};\n\n\n/**\n * Get a feature by its identifier (the value returned by feature.getId()).\n * Note that the index treats string and numeric identifiers as the same.  So\n * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n *\n * @param {string|number} id Feature identifier.\n * @return {ol.Feature} The feature (or `null` if not found).\n * @api\n */\n_ol_source_Vector_.prototype.getFeatureById = function(id) {\n  var feature = this.idIndex_[id.toString()];\n  return feature !== undefined ? feature : null;\n};\n\n\n/**\n * Get the format associated with this source.\n *\n * @return {ol.format.Feature|undefined} The feature format.\n * @api\n */\n_ol_source_Vector_.prototype.getFormat = function() {\n  return this.format_;\n};\n\n\n/**\n * @return {boolean} The source can have overlapping geometries.\n */\n_ol_source_Vector_.prototype.getOverlaps = function() {\n  return this.overlaps_;\n};\n\n\n/**\n * @override\n */\n_ol_source_Vector_.prototype.getResolutions = function() {};\n\n\n/**\n * Get the url associated with this source.\n *\n * @return {string|ol.FeatureUrlFunction|undefined} The url.\n * @api\n */\n_ol_source_Vector_.prototype.getUrl = function() {\n  return this.url_;\n};\n\n\n/**\n * @param {ol.events.Event} event Event.\n * @private\n */\n_ol_source_Vector_.prototype.handleFeatureChange_ = function(event) {\n  var feature = /** @type {ol.Feature} */ (event.target);\n  var featureKey = _ol_.getUid(feature).toString();\n  var geometry = feature.getGeometry();\n  if (!geometry) {\n    if (!(featureKey in this.nullGeometryFeatures_)) {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n  } else {\n    var extent = geometry.getExtent();\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.update(extent, feature);\n      }\n    }\n  }\n  var id = feature.getId();\n  if (id !== undefined) {\n    var sid = id.toString();\n    if (featureKey in this.undefIdIndex_) {\n      delete this.undefIdIndex_[featureKey];\n      this.idIndex_[sid] = feature;\n    } else {\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    }\n  } else {\n    if (!(featureKey in this.undefIdIndex_)) {\n      this.removeFromIdIndex_(feature);\n      this.undefIdIndex_[featureKey] = feature;\n    }\n  }\n  this.changed();\n  this.dispatchEvent(new _ol_source_Vector_.Event(\n      _ol_source_VectorEventType_.CHANGEFEATURE, feature));\n};\n\n\n/**\n * @return {boolean} Is empty.\n */\n_ol_source_Vector_.prototype.isEmpty = function() {\n  return this.featuresRtree_.isEmpty() &&\n      _ol_obj_.isEmpty(this.nullGeometryFeatures_);\n};\n\n\n/**\n * @param {ol.Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {ol.proj.Projection} projection Projection.\n */\n_ol_source_Vector_.prototype.loadFeatures = function(\n    extent, resolution, projection) {\n  var loadedExtentsRtree = this.loadedExtentsRtree_;\n  var extentsToLoad = this.strategy_(extent, resolution);\n  var i, ii;\n  for (i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n    var extentToLoad = extentsToLoad[i];\n    var alreadyLoaded = loadedExtentsRtree.forEachInExtent(extentToLoad,\n        /**\n         * @param {{extent: ol.Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function(object) {\n          return _ol_extent_.containsExtent(object.extent, extentToLoad);\n        });\n    if (!alreadyLoaded) {\n      this.loader_.call(this, extentToLoad, resolution, projection);\n      loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n    }\n  }\n};\n\n\n/**\n * Remove an extent from the list of loaded extents.\n * @param {ol.Extent} extent Extent.\n * @api\n */\n_ol_source_Vector_.prototype.removeLoadedExtent = function(extent) {\n  var loadedExtentsRtree = this.loadedExtentsRtree_;\n  var obj;\n  loadedExtentsRtree.forEachInExtent(extent, function(object) {\n    if (_ol_extent_.equals(object.extent, extent)) {\n      obj = object;\n      return true;\n    }\n  });\n  if (obj) {\n    loadedExtentsRtree.remove(obj);\n  }\n};\n\n\n/**\n * Remove a single feature from the source.  If you want to remove all features\n * at once, use the {@link ol.source.Vector#clear source.clear()} method\n * instead.\n * @param {ol.Feature} feature Feature to remove.\n * @api\n */\n_ol_source_Vector_.prototype.removeFeature = function(feature) {\n  var featureKey = _ol_.getUid(feature).toString();\n  if (featureKey in this.nullGeometryFeatures_) {\n    delete this.nullGeometryFeatures_[featureKey];\n  } else {\n    if (this.featuresRtree_) {\n      this.featuresRtree_.remove(feature);\n    }\n  }\n  this.removeFeatureInternal(feature);\n  this.changed();\n};\n\n\n/**\n * Remove feature without firing a `change` event.\n * @param {ol.Feature} feature Feature.\n * @protected\n */\n_ol_source_Vector_.prototype.removeFeatureInternal = function(feature) {\n  var featureKey = _ol_.getUid(feature).toString();\n  this.featureChangeKeys_[featureKey].forEach(_ol_events_.unlistenByKey);\n  delete this.featureChangeKeys_[featureKey];\n  var id = feature.getId();\n  if (id !== undefined) {\n    delete this.idIndex_[id.toString()];\n  } else {\n    delete this.undefIdIndex_[featureKey];\n  }\n  this.dispatchEvent(new _ol_source_Vector_.Event(\n      _ol_source_VectorEventType_.REMOVEFEATURE, feature));\n};\n\n\n/**\n * Remove a feature from the id index.  Called internally when the feature id\n * may have changed.\n * @param {ol.Feature} feature The feature.\n * @return {boolean} Removed the feature from the index.\n * @private\n */\n_ol_source_Vector_.prototype.removeFromIdIndex_ = function(feature) {\n  var removed = false;\n  for (var id in this.idIndex_) {\n    if (this.idIndex_[id] === feature) {\n      delete this.idIndex_[id];\n      removed = true;\n      break;\n    }\n  }\n  return removed;\n};\n\n\n/**\n * Set the new loader of the source. The next loadFeatures call will use the\n * new loader.\n * @param {ol.FeatureLoader} loader The loader to set.\n * @api\n */\n_ol_source_Vector_.prototype.setLoader = function(loader) {\n  this.loader_ = loader;\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link ol.source.Vector} instances are instances of this\n * type.\n *\n * @constructor\n * @extends {ol.events.Event}\n * @implements {oli.source.Vector.Event}\n * @param {string} type Type.\n * @param {ol.Feature=} opt_feature Feature.\n */\n_ol_source_Vector_.Event = function(type, opt_feature) {\n\n  _ol_events_Event_.call(this, type);\n\n  /**\n   * The feature being added or removed.\n   * @type {ol.Feature|undefined}\n   * @api\n   */\n  this.feature = opt_feature;\n\n};\n_ol_.inherits(_ol_source_Vector_.Event, _ol_events_Event_);\nexport default _ol_source_Vector_;\n","import _ol_asserts_ from './asserts.js';\nimport _ol_events_ from './events.js';\nimport _ol_events_EventType_ from './events/eventtype.js';\nimport _ol_ from './index.js';\nimport _ol_Object_ from './object.js';\nimport _ol_geom_Geometry_ from './geom/geometry.js';\nimport _ol_style_Style_ from './style/style.js';\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link ol.Object} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n * var feature = new ol.Feature({\n *   geometry: new ol.geom.Polygon(polyCoords),\n *   labelPoint: new ol.geom.Point(labelCoords),\n *   name: 'My Polygon'\n * });\n *\n * // get the polygon geometry\n * var poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * var point = feature.getGeometry();\n * ```\n *\n * @constructor\n * @extends {ol.Object}\n * @param {ol.geom.Geometry|Object.<string, *>=} opt_geometryOrProperties\n *     You may pass a Geometry object directly, or an object literal\n *     containing properties.  If you pass an object literal, you may\n *     include a Geometry associated with a `geometry` key.\n * @api\n */\nvar _ol_Feature_ = function(opt_geometryOrProperties) {\n\n  _ol_Object_.call(this);\n\n  /**\n   * @private\n   * @type {number|string|undefined}\n   */\n  this.id_ = undefined;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.geometryName_ = 'geometry';\n\n  /**\n   * User provided style.\n   * @private\n   * @type {ol.style.Style|Array.<ol.style.Style>|\n   *     ol.FeatureStyleFunction}\n   */\n  this.style_ = null;\n\n  /**\n   * @private\n   * @type {ol.FeatureStyleFunction|undefined}\n   */\n  this.styleFunction_ = undefined;\n\n  /**\n   * @private\n   * @type {?ol.EventsKey}\n   */\n  this.geometryChangeKey_ = null;\n\n  _ol_events_.listen(\n      this, _ol_Object_.getChangeEventType(this.geometryName_),\n      this.handleGeometryChanged_, this);\n\n  if (opt_geometryOrProperties !== undefined) {\n    if (opt_geometryOrProperties instanceof _ol_geom_Geometry_ ||\n        !opt_geometryOrProperties) {\n      var geometry = opt_geometryOrProperties;\n      this.setGeometry(geometry);\n    } else {\n      /** @type {Object.<string, *>} */\n      var properties = opt_geometryOrProperties;\n      this.setProperties(properties);\n    }\n  }\n};\n\n_ol_.inherits(_ol_Feature_, _ol_Object_);\n\n\n/**\n * Clone this feature. If the original feature has a geometry it\n * is also cloned. The feature id is not set in the clone.\n * @return {ol.Feature} The clone.\n * @api\n */\n_ol_Feature_.prototype.clone = function() {\n  var clone = new _ol_Feature_(this.getProperties());\n  clone.setGeometryName(this.getGeometryName());\n  var geometry = this.getGeometry();\n  if (geometry) {\n    clone.setGeometry(geometry.clone());\n  }\n  var style = this.getStyle();\n  if (style) {\n    clone.setStyle(style);\n  }\n  return clone;\n};\n\n\n/**\n * Get the feature's default geometry.  A feature may have any number of named\n * geometries.  The \"default\" geometry (the one that is rendered by default) is\n * set when calling {@link ol.Feature#setGeometry}.\n * @return {ol.geom.Geometry|undefined} The default geometry for the feature.\n * @api\n * @observable\n */\n_ol_Feature_.prototype.getGeometry = function() {\n  return /** @type {ol.geom.Geometry|undefined} */ (\n    this.get(this.geometryName_));\n};\n\n\n/**\n * Get the feature identifier.  This is a stable identifier for the feature and\n * is either set when reading data from a remote source or set explicitly by\n * calling {@link ol.Feature#setId}.\n * @return {number|string|undefined} Id.\n * @api\n */\n_ol_Feature_.prototype.getId = function() {\n  return this.id_;\n};\n\n\n/**\n * Get the name of the feature's default geometry.  By default, the default\n * geometry is named `geometry`.\n * @return {string} Get the property name associated with the default geometry\n *     for this feature.\n * @api\n */\n_ol_Feature_.prototype.getGeometryName = function() {\n  return this.geometryName_;\n};\n\n\n/**\n * Get the feature's style. Will return what was provided to the\n * {@link ol.Feature#setStyle} method.\n * @return {ol.style.Style|Array.<ol.style.Style>|\n *     ol.FeatureStyleFunction|ol.StyleFunction} The feature style.\n * @api\n */\n_ol_Feature_.prototype.getStyle = function() {\n  return this.style_;\n};\n\n\n/**\n * Get the feature's style function.\n * @return {ol.FeatureStyleFunction|undefined} Return a function\n * representing the current style of this feature.\n * @api\n */\n_ol_Feature_.prototype.getStyleFunction = function() {\n  return this.styleFunction_;\n};\n\n\n/**\n * @private\n */\n_ol_Feature_.prototype.handleGeometryChange_ = function() {\n  this.changed();\n};\n\n\n/**\n * @private\n */\n_ol_Feature_.prototype.handleGeometryChanged_ = function() {\n  if (this.geometryChangeKey_) {\n    _ol_events_.unlistenByKey(this.geometryChangeKey_);\n    this.geometryChangeKey_ = null;\n  }\n  var geometry = this.getGeometry();\n  if (geometry) {\n    this.geometryChangeKey_ = _ol_events_.listen(geometry,\n        _ol_events_EventType_.CHANGE, this.handleGeometryChange_, this);\n  }\n  this.changed();\n};\n\n\n/**\n * Set the default geometry for the feature.  This will update the property\n * with the name returned by {@link ol.Feature#getGeometryName}.\n * @param {ol.geom.Geometry|undefined} geometry The new geometry.\n * @api\n * @observable\n */\n_ol_Feature_.prototype.setGeometry = function(geometry) {\n  this.set(this.geometryName_, geometry);\n};\n\n\n/**\n * Set the style for the feature.  This can be a single style object, an array\n * of styles, or a function that takes a resolution and returns an array of\n * styles. If it is `null` the feature has no style (a `null` style).\n * @param {ol.style.Style|Array.<ol.style.Style>|\n *     ol.FeatureStyleFunction|ol.StyleFunction} style Style for this feature.\n * @api\n * @fires ol.events.Event#event:change\n */\n_ol_Feature_.prototype.setStyle = function(style) {\n  this.style_ = style;\n  this.styleFunction_ = !style ?\n    undefined : _ol_Feature_.createStyleFunction(style);\n  this.changed();\n};\n\n\n/**\n * Set the feature id.  The feature id is considered stable and may be used when\n * requesting features or comparing identifiers returned from a remote source.\n * The feature id can be used with the {@link ol.source.Vector#getFeatureById}\n * method.\n * @param {number|string|undefined} id The feature id.\n * @api\n * @fires ol.events.Event#event:change\n */\n_ol_Feature_.prototype.setId = function(id) {\n  this.id_ = id;\n  this.changed();\n};\n\n\n/**\n * Set the property name to be used when getting the feature's default geometry.\n * When calling {@link ol.Feature#getGeometry}, the value of the property with\n * this name will be returned.\n * @param {string} name The property name of the default geometry.\n * @api\n */\n_ol_Feature_.prototype.setGeometryName = function(name) {\n  _ol_events_.unlisten(\n      this, _ol_Object_.getChangeEventType(this.geometryName_),\n      this.handleGeometryChanged_, this);\n  this.geometryName_ = name;\n  _ol_events_.listen(\n      this, _ol_Object_.getChangeEventType(this.geometryName_),\n      this.handleGeometryChanged_, this);\n  this.handleGeometryChanged_();\n};\n\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of ol.style.Style or single style objects wrapped\n * in a new feature style function.\n * @param {ol.FeatureStyleFunction|!Array.<ol.style.Style>|!ol.style.Style} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {ol.FeatureStyleFunction} A style function.\n */\n_ol_Feature_.createStyleFunction = function(obj) {\n  var styleFunction;\n\n  if (typeof obj === 'function') {\n    if (obj.length == 2) {\n      styleFunction = function(resolution) {\n        return /** @type {ol.StyleFunction} */ (obj)(this, resolution);\n      };\n    } else {\n      styleFunction = obj;\n    }\n  } else {\n    /**\n     * @type {Array.<ol.style.Style>}\n     */\n    var styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      _ol_asserts_.assert(obj instanceof _ol_style_Style_,\n          41); // Expected an `ol.style.Style` or an array of `ol.style.Style`\n      styles = [obj];\n    }\n    styleFunction = function() {\n      return styles;\n    };\n  }\n  return styleFunction;\n};\nexport default _ol_Feature_;\n","import _ol_ from '../index.js';\nimport _ol_array_ from '../array.js';\nimport _ol_extent_ from '../extent.js';\nimport _ol_geom_GeometryLayout_ from '../geom/geometrylayout.js';\nimport _ol_geom_GeometryType_ from '../geom/geometrytype.js';\nimport _ol_geom_SimpleGeometry_ from '../geom/simplegeometry.js';\nimport _ol_geom_flat_closest_ from '../geom/flat/closest.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport _ol_geom_flat_interpolate_ from '../geom/flat/interpolate.js';\nimport _ol_geom_flat_intersectsextent_ from '../geom/flat/intersectsextent.js';\nimport _ol_geom_flat_length_ from '../geom/flat/length.js';\nimport _ol_geom_flat_segments_ from '../geom/flat/segments.js';\nimport _ol_geom_flat_simplify_ from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<ol.Coordinate>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nvar _ol_geom_LineString_ = function(coordinates, opt_layout) {\n\n  _ol_geom_SimpleGeometry_.call(this);\n\n  /**\n   * @private\n   * @type {ol.Coordinate}\n   */\n  this.flatMidpoint_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.flatMidpointRevision_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\n_ol_.inherits(_ol_geom_LineString_, _ol_geom_SimpleGeometry_);\n\n\n/**\n * Append the passed coordinate to the coordinates of the linestring.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @api\n */\n_ol_geom_LineString_.prototype.appendCoordinate = function(coordinate) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = coordinate.slice();\n  } else {\n    _ol_array_.extend(this.flatCoordinates, coordinate);\n  }\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.LineString} Clone.\n * @override\n * @api\n */\n_ol_geom_LineString_.prototype.clone = function() {\n  var lineString = new _ol_geom_LineString_(null);\n  lineString.setFlatCoordinates(this.layout, this.flatCoordinates.slice());\n  return lineString;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_geom_LineString_.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance <\n      _ol_extent_.closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(_ol_geom_flat_closest_.getMaxSquaredDelta(\n        this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return _ol_geom_flat_closest_.getClosestPoint(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * Iterate over each segment, calling the provided callback.\n * If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n *\n * @param {function(this: S, ol.Coordinate, ol.Coordinate): T} callback Function\n *     called for each segment.\n * @param {S=} opt_this The object to be used as the value of 'this'\n *     within callback.\n * @return {T|boolean} Value.\n * @template T,S\n * @api\n */\n_ol_geom_LineString_.prototype.forEachSegment = function(callback, opt_this) {\n  return _ol_geom_flat_segments_.forEach(this.flatCoordinates, 0,\n      this.flatCoordinates.length, this.stride, callback, opt_this);\n};\n\n\n/**\n * Returns the coordinate at `m` using linear interpolation, or `null` if no\n * such coordinate exists.\n *\n * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n * M will return the first coordinate and Ms greater than the last M will\n * return the last coordinate.\n *\n * @param {number} m M.\n * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n * @return {ol.Coordinate} Coordinate.\n * @api\n */\n_ol_geom_LineString_.prototype.getCoordinateAtM = function(m, opt_extrapolate) {\n  if (this.layout != _ol_geom_GeometryLayout_.XYM &&\n      this.layout != _ol_geom_GeometryLayout_.XYZM) {\n    return null;\n  }\n  var extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n  return _ol_geom_flat_interpolate_.lineStringCoordinateAtM(this.flatCoordinates, 0,\n      this.flatCoordinates.length, this.stride, m, extrapolate);\n};\n\n\n/**\n * Return the coordinates of the linestring.\n * @return {Array.<ol.Coordinate>} Coordinates.\n * @override\n * @api\n */\n_ol_geom_LineString_.prototype.getCoordinates = function() {\n  return _ol_geom_flat_inflate_.coordinates(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n};\n\n\n/**\n * Return the coordinate at the provided fraction along the linestring.\n * The `fraction` is a number between 0 and 1, where 0 is the start of the\n * linestring and 1 is the end.\n * @param {number} fraction Fraction.\n * @param {ol.Coordinate=} opt_dest Optional coordinate whose values will\n *     be modified. If not provided, a new coordinate will be returned.\n * @return {ol.Coordinate} Coordinate of the interpolated point.\n * @api\n */\n_ol_geom_LineString_.prototype.getCoordinateAt = function(fraction, opt_dest) {\n  return _ol_geom_flat_interpolate_.lineString(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      fraction, opt_dest);\n};\n\n\n/**\n * Return the length of the linestring on projected plane.\n * @return {number} Length (on projected plane).\n * @api\n */\n_ol_geom_LineString_.prototype.getLength = function() {\n  return _ol_geom_flat_length_.lineString(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n};\n\n\n/**\n * @return {Array.<number>} Flat midpoint.\n */\n_ol_geom_LineString_.prototype.getFlatMidpoint = function() {\n  if (this.flatMidpointRevision_ != this.getRevision()) {\n    this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n    this.flatMidpointRevision_ = this.getRevision();\n  }\n  return this.flatMidpoint_;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_geom_LineString_.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  var simplifiedFlatCoordinates = [];\n  simplifiedFlatCoordinates.length = _ol_geom_flat_simplify_.douglasPeucker(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      squaredTolerance, simplifiedFlatCoordinates, 0);\n  var simplifiedLineString = new _ol_geom_LineString_(null);\n  simplifiedLineString.setFlatCoordinates(\n      _ol_geom_GeometryLayout_.XY, simplifiedFlatCoordinates);\n  return simplifiedLineString;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_geom_LineString_.prototype.getType = function() {\n  return _ol_geom_GeometryType_.LINE_STRING;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_geom_LineString_.prototype.intersectsExtent = function(extent) {\n  return _ol_geom_flat_intersectsextent_.lineString(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      extent);\n};\n\n\n/**\n * Set the coordinates of the linestring.\n * @param {Array.<ol.Coordinate>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\n_ol_geom_LineString_.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(_ol_geom_GeometryLayout_.XY, null);\n  } else {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = _ol_geom_flat_deflate_.coordinates(\n        this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n */\n_ol_geom_LineString_.prototype.setFlatCoordinates = function(layout, flatCoordinates) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.changed();\n};\nexport default _ol_geom_LineString_;\n","/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link ol.style.Icon}, {@link ol.style.Circle} and\n * {@link ol.style.RegularShape}.\n *\n * @constructor\n * @abstract\n * @param {ol.StyleImageOptions} options Options.\n * @api\n */\nvar _ol_style_Image_ = function(options) {\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.opacity_ = options.opacity;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.rotateWithView_ = options.rotateWithView;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.rotation_ = options.rotation;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.scale_ = options.scale;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.snapToPixel_ = options.snapToPixel;\n\n};\n\n\n/**\n * Get the symbolizer opacity.\n * @return {number} Opacity.\n * @api\n */\n_ol_style_Image_.prototype.getOpacity = function() {\n  return this.opacity_;\n};\n\n\n/**\n * Determine whether the symbolizer rotates with the map.\n * @return {boolean} Rotate with map.\n * @api\n */\n_ol_style_Image_.prototype.getRotateWithView = function() {\n  return this.rotateWithView_;\n};\n\n\n/**\n * Get the symoblizer rotation.\n * @return {number} Rotation.\n * @api\n */\n_ol_style_Image_.prototype.getRotation = function() {\n  return this.rotation_;\n};\n\n\n/**\n * Get the symbolizer scale.\n * @return {number} Scale.\n * @api\n */\n_ol_style_Image_.prototype.getScale = function() {\n  return this.scale_;\n};\n\n\n/**\n * Determine whether the symbolizer should be snapped to a pixel.\n * @return {boolean} The symbolizer should snap to a pixel.\n * @api\n */\n_ol_style_Image_.prototype.getSnapToPixel = function() {\n  return this.snapToPixel_;\n};\n\n\n/**\n * Get the anchor point in pixels. The anchor determines the center point for the\n * symbolizer.\n * @abstract\n * @return {Array.<number>} Anchor.\n */\n_ol_style_Image_.prototype.getAnchor = function() {};\n\n\n/**\n * Get the image element for the symbolizer.\n * @abstract\n * @param {number} pixelRatio Pixel ratio.\n * @return {HTMLCanvasElement|HTMLVideoElement|Image} Image element.\n */\n_ol_style_Image_.prototype.getImage = function(pixelRatio) {};\n\n\n/**\n * @abstract\n * @param {number} pixelRatio Pixel ratio.\n * @return {HTMLCanvasElement|HTMLVideoElement|Image} Image element.\n */\n_ol_style_Image_.prototype.getHitDetectionImage = function(pixelRatio) {};\n\n\n/**\n * @abstract\n * @return {ol.ImageState} Image state.\n */\n_ol_style_Image_.prototype.getImageState = function() {};\n\n\n/**\n * @abstract\n * @return {ol.Size} Image size.\n */\n_ol_style_Image_.prototype.getImageSize = function() {};\n\n\n/**\n * @abstract\n * @return {ol.Size} Size of the hit-detection image.\n */\n_ol_style_Image_.prototype.getHitDetectionImageSize = function() {};\n\n\n/**\n * Get the origin of the symbolizer.\n * @abstract\n * @return {Array.<number>} Origin.\n */\n_ol_style_Image_.prototype.getOrigin = function() {};\n\n\n/**\n * Get the size of the symbolizer (in pixels).\n * @abstract\n * @return {ol.Size} Size.\n */\n_ol_style_Image_.prototype.getSize = function() {};\n\n\n/**\n * Set the opacity.\n *\n * @param {number} opacity Opacity.\n * @api\n */\n_ol_style_Image_.prototype.setOpacity = function(opacity) {\n  this.opacity_ = opacity;\n};\n\n\n/**\n * Set whether to rotate the style with the view.\n *\n * @param {boolean} rotateWithView Rotate with map.\n */\n_ol_style_Image_.prototype.setRotateWithView = function(rotateWithView) {\n  this.rotateWithView_ = rotateWithView;\n};\n\n\n/**\n * Set the rotation.\n *\n * @param {number} rotation Rotation.\n * @api\n */\n_ol_style_Image_.prototype.setRotation = function(rotation) {\n  this.rotation_ = rotation;\n};\n\n\n/**\n * Set the scale.\n *\n * @param {number} scale Scale.\n * @api\n */\n_ol_style_Image_.prototype.setScale = function(scale) {\n  this.scale_ = scale;\n};\n\n\n/**\n * Set whether to snap the image to the closest pixel.\n *\n * @param {boolean} snapToPixel Snap to pixel?\n */\n_ol_style_Image_.prototype.setSnapToPixel = function(snapToPixel) {\n  this.snapToPixel_ = snapToPixel;\n};\n\n\n/**\n * @abstract\n * @param {function(this: T, ol.events.Event)} listener Listener function.\n * @param {T} thisArg Value to use as `this` when executing `listener`.\n * @return {ol.EventsKey|undefined} Listener key.\n * @template T\n */\n_ol_style_Image_.prototype.listenImageChange = function(listener, thisArg) {};\n\n\n/**\n * Load not yet loaded URI.\n * @abstract\n */\n_ol_style_Image_.prototype.load = function() {};\n\n\n/**\n * @abstract\n * @param {function(this: T, ol.events.Event)} listener Listener function.\n * @param {T} thisArg Value to use as `this` when executing `listener`.\n * @template T\n */\n_ol_style_Image_.prototype.unlistenImageChange = function(listener, thisArg) {};\nexport default _ol_style_Image_;\n","var global = require('../internals/global');\nvar DOMIterables = require('../internals/dom-iterables');\nvar DOMTokenListPrototype = require('../internals/dom-token-list-prototype');\nvar forEach = require('../internals/array-for-each');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\n\nvar handlePrototype = function (CollectionPrototype) {\n  // some Chrome versions have non-configurable methods on DOMTokenList\n  if (CollectionPrototype && CollectionPrototype.forEach !== forEach) try {\n    createNonEnumerableProperty(CollectionPrototype, 'forEach', forEach);\n  } catch (error) {\n    CollectionPrototype.forEach = forEach;\n  }\n};\n\nfor (var COLLECTION_NAME in DOMIterables) {\n  if (DOMIterables[COLLECTION_NAME]) {\n    handlePrototype(global[COLLECTION_NAME] && global[COLLECTION_NAME].prototype);\n  }\n}\n\nhandlePrototype(DOMTokenListPrototype);\n","import _ol_ from '../index.js';\nimport _ol_format_Feature_ from '../format/feature.js';\nimport _ol_format_FormatType_ from '../format/formattype.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for JSON feature formats.\n *\n * @constructor\n * @abstract\n * @extends {ol.format.Feature}\n */\nvar _ol_format_JSONFeature_ = function() {\n  _ol_format_Feature_.call(this);\n};\n\n_ol_.inherits(_ol_format_JSONFeature_, _ol_format_Feature_);\n\n\n/**\n * @param {Document|Node|Object|string} source Source.\n * @private\n * @return {Object} Object.\n */\n_ol_format_JSONFeature_.prototype.getObject_ = function(source) {\n  if (typeof source === 'string') {\n    var object = JSON.parse(source);\n    return object ? /** @type {Object} */ (object) : null;\n  } else if (source !== null) {\n    return source;\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_format_JSONFeature_.prototype.getType = function() {\n  return _ol_format_FormatType_.JSON;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_format_JSONFeature_.prototype.readFeature = function(source, opt_options) {\n  return this.readFeatureFromObject(\n      this.getObject_(source), this.getReadOptions(source, opt_options));\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_format_JSONFeature_.prototype.readFeatures = function(source, opt_options) {\n  return this.readFeaturesFromObject(\n      this.getObject_(source), this.getReadOptions(source, opt_options));\n};\n\n\n/**\n * @abstract\n * @param {Object} object Object.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @protected\n * @return {ol.Feature} Feature.\n */\n_ol_format_JSONFeature_.prototype.readFeatureFromObject = function(object, opt_options) {};\n\n\n/**\n * @abstract\n * @param {Object} object Object.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @protected\n * @return {Array.<ol.Feature>} Features.\n */\n_ol_format_JSONFeature_.prototype.readFeaturesFromObject = function(object, opt_options) {};\n\n\n/**\n * @inheritDoc\n */\n_ol_format_JSONFeature_.prototype.readGeometry = function(source, opt_options) {\n  return this.readGeometryFromObject(\n      this.getObject_(source), this.getReadOptions(source, opt_options));\n};\n\n\n/**\n * @abstract\n * @param {Object} object Object.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @protected\n * @return {ol.geom.Geometry} Geometry.\n */\n_ol_format_JSONFeature_.prototype.readGeometryFromObject = function(object, opt_options) {};\n\n\n/**\n * @inheritDoc\n */\n_ol_format_JSONFeature_.prototype.readProjection = function(source) {\n  return this.readProjectionFromObject(this.getObject_(source));\n};\n\n\n/**\n * @abstract\n * @param {Object} object Object.\n * @protected\n * @return {ol.proj.Projection} Projection.\n */\n_ol_format_JSONFeature_.prototype.readProjectionFromObject = function(object) {};\n\n\n/**\n * @inheritDoc\n */\n_ol_format_JSONFeature_.prototype.writeFeature = function(feature, opt_options) {\n  return JSON.stringify(this.writeFeatureObject(feature, opt_options));\n};\n\n\n/**\n * @abstract\n * @param {ol.Feature} feature Feature.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {Object} Object.\n */\n_ol_format_JSONFeature_.prototype.writeFeatureObject = function(feature, opt_options) {};\n\n\n/**\n * @inheritDoc\n */\n_ol_format_JSONFeature_.prototype.writeFeatures = function(features, opt_options) {\n  return JSON.stringify(this.writeFeaturesObject(features, opt_options));\n};\n\n\n/**\n * @abstract\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {Object} Object.\n */\n_ol_format_JSONFeature_.prototype.writeFeaturesObject = function(features, opt_options) {};\n\n\n/**\n * @inheritDoc\n */\n_ol_format_JSONFeature_.prototype.writeGeometry = function(geometry, opt_options) {\n  return JSON.stringify(this.writeGeometryObject(geometry, opt_options));\n};\n\n\n/**\n * @abstract\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {Object} Object.\n */\n_ol_format_JSONFeature_.prototype.writeGeometryObject = function(geometry, opt_options) {};\nexport default _ol_format_JSONFeature_;\n","// TODO: serialize dataProjection as crs member when writing\n// see https://github.com/openlayers/openlayers/issues/2078\n\nimport _ol_ from '../index.js';\nimport _ol_asserts_ from '../asserts.js';\nimport _ol_Feature_ from '../feature.js';\nimport _ol_format_Feature_ from '../format/feature.js';\nimport _ol_format_JSONFeature_ from '../format/jsonfeature.js';\nimport _ol_geom_GeometryCollection_ from '../geom/geometrycollection.js';\nimport _ol_geom_LineString_ from '../geom/linestring.js';\nimport _ol_geom_MultiLineString_ from '../geom/multilinestring.js';\nimport _ol_geom_MultiPoint_ from '../geom/multipoint.js';\nimport _ol_geom_MultiPolygon_ from '../geom/multipolygon.js';\nimport _ol_geom_Point_ from '../geom/point.js';\nimport _ol_geom_Polygon_ from '../geom/polygon.js';\nimport _ol_obj_ from '../obj.js';\nimport _ol_proj_ from '../proj.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GeoJSON format.\n *\n * @constructor\n * @extends {ol.format.JSONFeature}\n * @param {olx.format.GeoJSONOptions=} opt_options Options.\n * @api\n */\nvar _ol_format_GeoJSON_ = function(opt_options) {\n\n  var options = opt_options ? opt_options : {};\n\n  _ol_format_JSONFeature_.call(this);\n\n  /**\n   * @inheritDoc\n   */\n  this.defaultDataProjection = _ol_proj_.get(\n      options.defaultDataProjection ?\n        options.defaultDataProjection : 'EPSG:4326');\n\n\n  if (options.featureProjection) {\n    this.defaultFeatureProjection = _ol_proj_.get(options.featureProjection);\n  }\n\n  /**\n   * Name of the geometry attribute for features.\n   * @type {string|undefined}\n   * @private\n   */\n  this.geometryName_ = options.geometryName;\n\n  /**\n   * Look for the geometry name in the feature GeoJSON\n   * @type {boolean|undefined}\n   * @private\n   */\n  this.extractGeometryName_ = options.extractGeometryName;\n\n};\n\n_ol_.inherits(_ol_format_GeoJSON_, _ol_format_JSONFeature_);\n\n\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @private\n * @return {ol.geom.Geometry} Geometry.\n */\n_ol_format_GeoJSON_.readGeometry_ = function(object, opt_options) {\n  if (!object) {\n    return null;\n  }\n  var geometryReader = _ol_format_GeoJSON_.GEOMETRY_READERS_[object.type];\n  return (\n    /** @type {ol.geom.Geometry} */ _ol_format_Feature_.transformWithOptions(\n        geometryReader(object), false, opt_options)\n  );\n};\n\n\n/**\n * @param {GeoJSONGeometryCollection} object Object.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @private\n * @return {ol.geom.GeometryCollection} Geometry collection.\n */\n_ol_format_GeoJSON_.readGeometryCollectionGeometry_ = function(\n    object, opt_options) {\n  var geometries = object.geometries.map(\n      /**\n       * @param {GeoJSONGeometry} geometry Geometry.\n       * @return {ol.geom.Geometry} geometry Geometry.\n       */\n      function(geometry) {\n        return _ol_format_GeoJSON_.readGeometry_(geometry, opt_options);\n      });\n  return new _ol_geom_GeometryCollection_(geometries);\n};\n\n\n/**\n * @param {GeoJSONGeometry} object Object.\n * @private\n * @return {ol.geom.Point} Point.\n */\n_ol_format_GeoJSON_.readPointGeometry_ = function(object) {\n  return new _ol_geom_Point_(object.coordinates);\n};\n\n\n/**\n * @param {GeoJSONGeometry} object Object.\n * @private\n * @return {ol.geom.LineString} LineString.\n */\n_ol_format_GeoJSON_.readLineStringGeometry_ = function(object) {\n  return new _ol_geom_LineString_(object.coordinates);\n};\n\n\n/**\n * @param {GeoJSONGeometry} object Object.\n * @private\n * @return {ol.geom.MultiLineString} MultiLineString.\n */\n_ol_format_GeoJSON_.readMultiLineStringGeometry_ = function(object) {\n  return new _ol_geom_MultiLineString_(object.coordinates);\n};\n\n\n/**\n * @param {GeoJSONGeometry} object Object.\n * @private\n * @return {ol.geom.MultiPoint} MultiPoint.\n */\n_ol_format_GeoJSON_.readMultiPointGeometry_ = function(object) {\n  return new _ol_geom_MultiPoint_(object.coordinates);\n};\n\n\n/**\n * @param {GeoJSONGeometry} object Object.\n * @private\n * @return {ol.geom.MultiPolygon} MultiPolygon.\n */\n_ol_format_GeoJSON_.readMultiPolygonGeometry_ = function(object) {\n  return new _ol_geom_MultiPolygon_(object.coordinates);\n};\n\n\n/**\n * @param {GeoJSONGeometry} object Object.\n * @private\n * @return {ol.geom.Polygon} Polygon.\n */\n_ol_format_GeoJSON_.readPolygonGeometry_ = function(object) {\n  return new _ol_geom_Polygon_(object.coordinates);\n};\n\n\n/**\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @private\n * @return {GeoJSONGeometry|GeoJSONGeometryCollection} GeoJSON geometry.\n */\n_ol_format_GeoJSON_.writeGeometry_ = function(geometry, opt_options) {\n  var geometryWriter = _ol_format_GeoJSON_.GEOMETRY_WRITERS_[geometry.getType()];\n  return geometryWriter(/** @type {ol.geom.Geometry} */ (\n    _ol_format_Feature_.transformWithOptions(geometry, true, opt_options)),\n  opt_options);\n};\n\n\n/**\n * @param {ol.geom.Geometry} geometry Geometry.\n * @private\n * @return {GeoJSONGeometryCollection} Empty GeoJSON geometry collection.\n */\n_ol_format_GeoJSON_.writeEmptyGeometryCollectionGeometry_ = function(geometry) {\n  return /** @type {GeoJSONGeometryCollection} */ ({\n    type: 'GeometryCollection',\n    geometries: []\n  });\n};\n\n\n/**\n * @param {ol.geom.GeometryCollection} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @private\n * @return {GeoJSONGeometryCollection} GeoJSON geometry collection.\n */\n_ol_format_GeoJSON_.writeGeometryCollectionGeometry_ = function(\n    geometry, opt_options) {\n  var geometries = geometry.getGeometriesArray().map(function(geometry) {\n    var options = _ol_obj_.assign({}, opt_options);\n    delete options.featureProjection;\n    return _ol_format_GeoJSON_.writeGeometry_(geometry, options);\n  });\n  return /** @type {GeoJSONGeometryCollection} */ ({\n    type: 'GeometryCollection',\n    geometries: geometries\n  });\n};\n\n\n/**\n * @param {ol.geom.LineString} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @private\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\n_ol_format_GeoJSON_.writeLineStringGeometry_ = function(geometry, opt_options) {\n  return /** @type {GeoJSONGeometry} */ ({\n    type: 'LineString',\n    coordinates: geometry.getCoordinates()\n  });\n};\n\n\n/**\n * @param {ol.geom.MultiLineString} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @private\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\n_ol_format_GeoJSON_.writeMultiLineStringGeometry_ = function(geometry, opt_options) {\n  return /** @type {GeoJSONGeometry} */ ({\n    type: 'MultiLineString',\n    coordinates: geometry.getCoordinates()\n  });\n};\n\n\n/**\n * @param {ol.geom.MultiPoint} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @private\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\n_ol_format_GeoJSON_.writeMultiPointGeometry_ = function(geometry, opt_options) {\n  return /** @type {GeoJSONGeometry} */ ({\n    type: 'MultiPoint',\n    coordinates: geometry.getCoordinates()\n  });\n};\n\n\n/**\n * @param {ol.geom.MultiPolygon} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @private\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\n_ol_format_GeoJSON_.writeMultiPolygonGeometry_ = function(geometry, opt_options) {\n  var right;\n  if (opt_options) {\n    right = opt_options.rightHanded;\n  }\n  return /** @type {GeoJSONGeometry} */ ({\n    type: 'MultiPolygon',\n    coordinates: geometry.getCoordinates(right)\n  });\n};\n\n\n/**\n * @param {ol.geom.Point} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @private\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\n_ol_format_GeoJSON_.writePointGeometry_ = function(geometry, opt_options) {\n  return /** @type {GeoJSONGeometry} */ ({\n    type: 'Point',\n    coordinates: geometry.getCoordinates()\n  });\n};\n\n\n/**\n * @param {ol.geom.Polygon} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @private\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\n_ol_format_GeoJSON_.writePolygonGeometry_ = function(geometry, opt_options) {\n  var right;\n  if (opt_options) {\n    right = opt_options.rightHanded;\n  }\n  return /** @type {GeoJSONGeometry} */ ({\n    type: 'Polygon',\n    coordinates: geometry.getCoordinates(right)\n  });\n};\n\n\n/**\n * @const\n * @private\n * @type {Object.<string, function(GeoJSONObject): ol.geom.Geometry>}\n */\n_ol_format_GeoJSON_.GEOMETRY_READERS_ = {\n  'Point': _ol_format_GeoJSON_.readPointGeometry_,\n  'LineString': _ol_format_GeoJSON_.readLineStringGeometry_,\n  'Polygon': _ol_format_GeoJSON_.readPolygonGeometry_,\n  'MultiPoint': _ol_format_GeoJSON_.readMultiPointGeometry_,\n  'MultiLineString': _ol_format_GeoJSON_.readMultiLineStringGeometry_,\n  'MultiPolygon': _ol_format_GeoJSON_.readMultiPolygonGeometry_,\n  'GeometryCollection': _ol_format_GeoJSON_.readGeometryCollectionGeometry_\n};\n\n\n/**\n * @const\n * @private\n * @type {Object.<string, function(ol.geom.Geometry, olx.format.WriteOptions=): (GeoJSONGeometry|GeoJSONGeometryCollection)>}\n */\n_ol_format_GeoJSON_.GEOMETRY_WRITERS_ = {\n  'Point': _ol_format_GeoJSON_.writePointGeometry_,\n  'LineString': _ol_format_GeoJSON_.writeLineStringGeometry_,\n  'Polygon': _ol_format_GeoJSON_.writePolygonGeometry_,\n  'MultiPoint': _ol_format_GeoJSON_.writeMultiPointGeometry_,\n  'MultiLineString': _ol_format_GeoJSON_.writeMultiLineStringGeometry_,\n  'MultiPolygon': _ol_format_GeoJSON_.writeMultiPolygonGeometry_,\n  'GeometryCollection': _ol_format_GeoJSON_.writeGeometryCollectionGeometry_,\n  'Circle': _ol_format_GeoJSON_.writeEmptyGeometryCollectionGeometry_\n};\n\n\n/**\n * Read a feature from a GeoJSON Feature source.  Only works for Feature or\n * geometry types.  Use {@link ol.format.GeoJSON#readFeatures} to read\n * FeatureCollection source. If feature at source has an id, it will be used\n * as Feature id by calling {@link ol.Feature#setId} internally.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.Feature} Feature.\n * @api\n */\n_ol_format_GeoJSON_.prototype.readFeature;\n\n\n/**\n * Read all features from a GeoJSON source.  Works for all GeoJSON types.\n * If the source includes only geometries, features will be created with those\n * geometries.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\n_ol_format_GeoJSON_.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\n_ol_format_GeoJSON_.prototype.readFeatureFromObject = function(\n    object, opt_options) {\n  /**\n   * @type {GeoJSONFeature}\n   */\n  var geoJSONFeature = null;\n  if (object.type === 'Feature') {\n    geoJSONFeature = /** @type {GeoJSONFeature} */ (object);\n  } else {\n    geoJSONFeature = /** @type {GeoJSONFeature} */ ({\n      type: 'Feature',\n      geometry: /** @type {GeoJSONGeometry|GeoJSONGeometryCollection} */ (object)\n    });\n  }\n\n  var geometry = _ol_format_GeoJSON_.readGeometry_(geoJSONFeature.geometry, opt_options);\n  var feature = new _ol_Feature_();\n  if (this.geometryName_) {\n    feature.setGeometryName(this.geometryName_);\n  } else if (this.extractGeometryName_ && geoJSONFeature.geometry_name !== undefined) {\n    feature.setGeometryName(geoJSONFeature.geometry_name);\n  }\n  feature.setGeometry(geometry);\n  if (geoJSONFeature.id !== undefined) {\n    feature.setId(geoJSONFeature.id);\n  }\n  if (geoJSONFeature.properties) {\n    feature.setProperties(geoJSONFeature.properties);\n  }\n  return feature;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_format_GeoJSON_.prototype.readFeaturesFromObject = function(\n    object, opt_options) {\n  var geoJSONObject = /** @type {GeoJSONObject} */ (object);\n  /** @type {Array.<ol.Feature>} */\n  var features = null;\n  if (geoJSONObject.type === 'FeatureCollection') {\n    var geoJSONFeatureCollection = /** @type {GeoJSONFeatureCollection} */\n        (object);\n    features = [];\n    var geoJSONFeatures = geoJSONFeatureCollection.features;\n    var i, ii;\n    for (i = 0, ii = geoJSONFeatures.length; i < ii; ++i) {\n      features.push(this.readFeatureFromObject(geoJSONFeatures[i],\n          opt_options));\n    }\n  } else {\n    features = [this.readFeatureFromObject(object, opt_options)];\n  }\n  return features;\n};\n\n\n/**\n * Read a geometry from a GeoJSON source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.geom.Geometry} Geometry.\n * @api\n */\n_ol_format_GeoJSON_.prototype.readGeometry;\n\n\n/**\n * @inheritDoc\n */\n_ol_format_GeoJSON_.prototype.readGeometryFromObject = function(\n    object, opt_options) {\n  return _ol_format_GeoJSON_.readGeometry_(\n      /** @type {GeoJSONGeometry} */ (object), opt_options);\n};\n\n\n/**\n * Read the projection from a GeoJSON source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @return {ol.proj.Projection} Projection.\n * @api\n */\n_ol_format_GeoJSON_.prototype.readProjection;\n\n\n/**\n * @inheritDoc\n */\n_ol_format_GeoJSON_.prototype.readProjectionFromObject = function(object) {\n  var geoJSONObject = /** @type {GeoJSONObject} */ (object);\n  var crs = geoJSONObject.crs;\n  var projection;\n  if (crs) {\n    if (crs.type == 'name') {\n      projection = _ol_proj_.get(crs.properties.name);\n    } else {\n      _ol_asserts_.assert(false, 36); // Unknown SRS type\n    }\n  } else {\n    projection = this.defaultDataProjection;\n  }\n  return /** @type {ol.proj.Projection} */ (projection);\n};\n\n\n/**\n * Encode a feature as a GeoJSON Feature string.\n *\n * @function\n * @param {ol.Feature} feature Feature.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {string} GeoJSON.\n * @override\n * @api\n */\n_ol_format_GeoJSON_.prototype.writeFeature;\n\n\n/**\n * Encode a feature as a GeoJSON Feature object.\n *\n * @param {ol.Feature} feature Feature.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {GeoJSONFeature} Object.\n * @override\n * @api\n */\n_ol_format_GeoJSON_.prototype.writeFeatureObject = function(feature, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n\n  var object = /** @type {GeoJSONFeature} */ ({\n    'type': 'Feature'\n  });\n  var id = feature.getId();\n  if (id !== undefined) {\n    object.id = id;\n  }\n  var geometry = feature.getGeometry();\n  if (geometry) {\n    object.geometry =\n        _ol_format_GeoJSON_.writeGeometry_(geometry, opt_options);\n  } else {\n    object.geometry = null;\n  }\n  var properties = feature.getProperties();\n  delete properties[feature.getGeometryName()];\n  if (!_ol_obj_.isEmpty(properties)) {\n    object.properties = properties;\n  } else {\n    object.properties = null;\n  }\n  return object;\n};\n\n\n/**\n * Encode an array of features as GeoJSON.\n *\n * @function\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {string} GeoJSON.\n * @api\n */\n_ol_format_GeoJSON_.prototype.writeFeatures;\n\n\n/**\n * Encode an array of features as a GeoJSON object.\n *\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {GeoJSONFeatureCollection} GeoJSON Object.\n * @override\n * @api\n */\n_ol_format_GeoJSON_.prototype.writeFeaturesObject = function(features, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  var objects = [];\n  var i, ii;\n  for (i = 0, ii = features.length; i < ii; ++i) {\n    objects.push(this.writeFeatureObject(features[i], opt_options));\n  }\n  return /** @type {GeoJSONFeatureCollection} */ ({\n    type: 'FeatureCollection',\n    features: objects\n  });\n};\n\n\n/**\n * Encode a geometry as a GeoJSON string.\n *\n * @function\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {string} GeoJSON.\n * @api\n */\n_ol_format_GeoJSON_.prototype.writeGeometry;\n\n\n/**\n * Encode a geometry as a GeoJSON object.\n *\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry|GeoJSONGeometryCollection} Object.\n * @override\n * @api\n */\n_ol_format_GeoJSON_.prototype.writeGeometryObject = function(geometry,\n    opt_options) {\n  return _ol_format_GeoJSON_.writeGeometry_(geometry,\n      this.adaptOptions(opt_options));\n};\nexport default _ol_format_GeoJSON_;\n","'use strict';\nvar $forEach = require('../internals/array-iteration').forEach;\nvar arrayMethodIsStrict = require('../internals/array-method-is-strict');\n\nvar STRICT_METHOD = arrayMethodIsStrict('forEach');\n\n// `Array.prototype.forEach` method implementation\n// https://tc39.es/ecma262/#sec-array.prototype.foreach\nmodule.exports = !STRICT_METHOD ? function forEach(callbackfn /* , thisArg */) {\n  return $forEach(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n// eslint-disable-next-line es/no-array-prototype-foreach -- safe\n} : [].forEach;\n","import _ol_ from '../index.js';\nimport _ol_style_RegularShape_ from '../style/regularshape.js';\n\n/**\n * @classdesc\n * Set circle style for vector features.\n *\n * @constructor\n * @param {olx.style.CircleOptions=} opt_options Options.\n * @extends {ol.style.RegularShape}\n * @api\n */\nvar _ol_style_Circle_ = function(opt_options) {\n\n  var options = opt_options || {};\n\n  _ol_style_RegularShape_.call(this, {\n    points: Infinity,\n    fill: options.fill,\n    radius: options.radius,\n    snapToPixel: options.snapToPixel,\n    stroke: options.stroke,\n    atlasManager: options.atlasManager\n  });\n\n};\n\n_ol_.inherits(_ol_style_Circle_, _ol_style_RegularShape_);\n\n\n/**\n * Clones the style.  If an atlasmanager was provided to the original style it will be used in the cloned style, too.\n * @return {ol.style.Circle} The cloned style.\n * @override\n * @api\n */\n_ol_style_Circle_.prototype.clone = function() {\n  var style = new _ol_style_Circle_({\n    fill: this.getFill() ? this.getFill().clone() : undefined,\n    stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n    radius: this.getRadius(),\n    snapToPixel: this.getSnapToPixel(),\n    atlasManager: this.atlasManager_\n  });\n  style.setOpacity(this.getOpacity());\n  style.setScale(this.getScale());\n  return style;\n};\n\n\n/**\n * Set the circle radius.\n *\n * @param {number} radius Circle radius.\n * @api\n */\n_ol_style_Circle_.prototype.setRadius = function(radius) {\n  this.radius_ = radius;\n  this.render_(this.atlasManager_);\n};\nexport default _ol_style_Circle_;\n","import _ol_ from '../index.js';\nimport _ol_color_ from '../color.js';\n\n/**\n * @classdesc\n * Set fill style for vector features.\n *\n * @constructor\n * @param {olx.style.FillOptions=} opt_options Options.\n * @api\n */\nvar _ol_style_Fill_ = function(opt_options) {\n\n  var options = opt_options || {};\n\n  /**\n   * @private\n   * @type {ol.Color|ol.ColorLike}\n   */\n  this.color_ = options.color !== undefined ? options.color : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.checksum_ = undefined;\n};\n\n\n/**\n * Clones the style. The color is not cloned if it is an {@link ol.ColorLike}.\n * @return {ol.style.Fill} The cloned style.\n * @api\n */\n_ol_style_Fill_.prototype.clone = function() {\n  var color = this.getColor();\n  return new _ol_style_Fill_({\n    color: (color && color.slice) ? color.slice() : color || undefined\n  });\n};\n\n\n/**\n * Get the fill color.\n * @return {ol.Color|ol.ColorLike} Color.\n * @api\n */\n_ol_style_Fill_.prototype.getColor = function() {\n  return this.color_;\n};\n\n\n/**\n * Set the color.\n *\n * @param {ol.Color|ol.ColorLike} color Color.\n * @api\n */\n_ol_style_Fill_.prototype.setColor = function(color) {\n  this.color_ = color;\n  this.checksum_ = undefined;\n};\n\n\n/**\n * @return {string} The checksum.\n */\n_ol_style_Fill_.prototype.getChecksum = function() {\n  if (this.checksum_ === undefined) {\n    if (\n      this.color_ instanceof CanvasPattern ||\n        this.color_ instanceof CanvasGradient\n    ) {\n      this.checksum_ = _ol_.getUid(this.color_).toString();\n    } else {\n      this.checksum_ = 'f' + (this.color_ ?\n        _ol_color_.asString(this.color_) : '-');\n    }\n  }\n\n  return this.checksum_;\n};\nexport default _ol_style_Fill_;\n","import _ol_asserts_ from '../asserts.js';\nimport _ol_geom_GeometryType_ from '../geom/geometrytype.js';\nimport _ol_style_Circle_ from '../style/circle.js';\nimport _ol_style_Fill_ from '../style/fill.js';\nimport _ol_style_Stroke_ from '../style/stroke.js';\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * @constructor\n * @struct\n * @param {olx.style.StyleOptions=} opt_options Style options.\n * @api\n */\nvar _ol_style_Style_ = function(opt_options) {\n\n  var options = opt_options || {};\n\n  /**\n   * @private\n   * @type {string|ol.geom.Geometry|ol.StyleGeometryFunction}\n   */\n  this.geometry_ = null;\n\n  /**\n   * @private\n   * @type {!ol.StyleGeometryFunction}\n   */\n  this.geometryFunction_ = _ol_style_Style_.defaultGeometryFunction;\n\n  if (options.geometry !== undefined) {\n    this.setGeometry(options.geometry);\n  }\n\n  /**\n   * @private\n   * @type {ol.style.Fill}\n   */\n  this.fill_ = options.fill !== undefined ? options.fill : null;\n\n  /**\n   * @private\n   * @type {ol.style.Image}\n   */\n  this.image_ = options.image !== undefined ? options.image : null;\n\n  /**\n   * @private\n   * @type {ol.StyleRenderFunction|null}\n   */\n  this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n  /**\n   * @private\n   * @type {ol.style.Stroke}\n   */\n  this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n  /**\n   * @private\n   * @type {ol.style.Text}\n   */\n  this.text_ = options.text !== undefined ? options.text : null;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.zIndex_ = options.zIndex;\n\n};\n\n\n/**\n * Clones the style.\n * @return {ol.style.Style} The cloned style.\n * @api\n */\n_ol_style_Style_.prototype.clone = function() {\n  var geometry = this.getGeometry();\n  if (geometry && geometry.clone) {\n    geometry = geometry.clone();\n  }\n  return new _ol_style_Style_({\n    geometry: geometry,\n    fill: this.getFill() ? this.getFill().clone() : undefined,\n    image: this.getImage() ? this.getImage().clone() : undefined,\n    stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n    text: this.getText() ? this.getText().clone() : undefined,\n    zIndex: this.getZIndex()\n  });\n};\n\n\n/**\n * Get the custom renderer function that was configured with\n * {@link #setRenderer} or the `renderer` constructor option.\n * @return {ol.StyleRenderFunction|null} Custom renderer function.\n * @api\n */\n_ol_style_Style_.prototype.getRenderer = function() {\n  return this.renderer_;\n};\n\n\n/**\n * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n * and `image` options of the style will be ignored.\n * @param {ol.StyleRenderFunction|null} renderer Custom renderer function.\n * @api\n */\n_ol_style_Style_.prototype.setRenderer = function(renderer) {\n  this.renderer_ = renderer;\n};\n\n\n/**\n * Get the geometry to be rendered.\n * @return {string|ol.geom.Geometry|ol.StyleGeometryFunction}\n * Feature property or geometry or function that returns the geometry that will\n * be rendered with this style.\n * @api\n */\n_ol_style_Style_.prototype.getGeometry = function() {\n  return this.geometry_;\n};\n\n\n/**\n * Get the function used to generate a geometry for rendering.\n * @return {!ol.StyleGeometryFunction} Function that is called with a feature\n * and returns the geometry to render instead of the feature's geometry.\n * @api\n */\n_ol_style_Style_.prototype.getGeometryFunction = function() {\n  return this.geometryFunction_;\n};\n\n\n/**\n * Get the fill style.\n * @return {ol.style.Fill} Fill style.\n * @api\n */\n_ol_style_Style_.prototype.getFill = function() {\n  return this.fill_;\n};\n\n\n/**\n * Set the fill style.\n * @param {ol.style.Fill} fill Fill style.\n * @api\n */\n_ol_style_Style_.prototype.setFill = function(fill) {\n  this.fill_ = fill;\n};\n\n\n/**\n * Get the image style.\n * @return {ol.style.Image} Image style.\n * @api\n */\n_ol_style_Style_.prototype.getImage = function() {\n  return this.image_;\n};\n\n\n/**\n * Set the image style.\n * @param {ol.style.Image} image Image style.\n * @api\n */\n_ol_style_Style_.prototype.setImage = function(image) {\n  this.image_ = image;\n};\n\n\n/**\n * Get the stroke style.\n * @return {ol.style.Stroke} Stroke style.\n * @api\n */\n_ol_style_Style_.prototype.getStroke = function() {\n  return this.stroke_;\n};\n\n\n/**\n * Set the stroke style.\n * @param {ol.style.Stroke} stroke Stroke style.\n * @api\n */\n_ol_style_Style_.prototype.setStroke = function(stroke) {\n  this.stroke_ = stroke;\n};\n\n\n/**\n * Get the text style.\n * @return {ol.style.Text} Text style.\n * @api\n */\n_ol_style_Style_.prototype.getText = function() {\n  return this.text_;\n};\n\n\n/**\n * Set the text style.\n * @param {ol.style.Text} text Text style.\n * @api\n */\n_ol_style_Style_.prototype.setText = function(text) {\n  this.text_ = text;\n};\n\n\n/**\n * Get the z-index for the style.\n * @return {number|undefined} ZIndex.\n * @api\n */\n_ol_style_Style_.prototype.getZIndex = function() {\n  return this.zIndex_;\n};\n\n\n/**\n * Set a geometry that is rendered instead of the feature's geometry.\n *\n * @param {string|ol.geom.Geometry|ol.StyleGeometryFunction} geometry\n *     Feature property or geometry or function returning a geometry to render\n *     for this style.\n * @api\n */\n_ol_style_Style_.prototype.setGeometry = function(geometry) {\n  if (typeof geometry === 'function') {\n    this.geometryFunction_ = geometry;\n  } else if (typeof geometry === 'string') {\n    this.geometryFunction_ = function(feature) {\n      return /** @type {ol.geom.Geometry} */ (feature.get(geometry));\n    };\n  } else if (!geometry) {\n    this.geometryFunction_ = _ol_style_Style_.defaultGeometryFunction;\n  } else if (geometry !== undefined) {\n    this.geometryFunction_ = function() {\n      return /** @type {ol.geom.Geometry} */ (geometry);\n    };\n  }\n  this.geometry_ = geometry;\n};\n\n\n/**\n * Set the z-index.\n *\n * @param {number|undefined} zIndex ZIndex.\n * @api\n */\n_ol_style_Style_.prototype.setZIndex = function(zIndex) {\n  this.zIndex_ = zIndex;\n};\n\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of ol.style.Style or single style objects wrapped in a\n * new style function.\n * @param {ol.StyleFunction|Array.<ol.style.Style>|ol.style.Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {ol.StyleFunction} A style function.\n */\n_ol_style_Style_.createFunction = function(obj) {\n  var styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array.<ol.style.Style>}\n     */\n    var styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      _ol_asserts_.assert(obj instanceof _ol_style_Style_,\n          41); // Expected an `ol.style.Style` or an array of `ol.style.Style`\n      styles = [obj];\n    }\n    styleFunction = function() {\n      return styles;\n    };\n  }\n  return styleFunction;\n};\n\n\n/**\n * @type {Array.<ol.style.Style>}\n * @private\n */\n_ol_style_Style_.default_ = null;\n\n\n/**\n * @param {ol.Feature|ol.render.Feature} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array.<ol.style.Style>} Style.\n */\n_ol_style_Style_.defaultFunction = function(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (ol.style.Circle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!_ol_style_Style_.default_) {\n    var fill = new _ol_style_Fill_({\n      color: 'rgba(255,255,255,0.4)'\n    });\n    var stroke = new _ol_style_Stroke_({\n      color: '#3399CC',\n      width: 1.25\n    });\n    _ol_style_Style_.default_ = [\n      new _ol_style_Style_({\n        image: new _ol_style_Circle_({\n          fill: fill,\n          stroke: stroke,\n          radius: 5\n        }),\n        fill: fill,\n        stroke: stroke\n      })\n    ];\n  }\n  return _ol_style_Style_.default_;\n};\n\n\n/**\n * Default styles for editing features.\n * @return {Object.<ol.geom.GeometryType, Array.<ol.style.Style>>} Styles\n */\n_ol_style_Style_.createDefaultEditing = function() {\n  /** @type {Object.<ol.geom.GeometryType, Array.<ol.style.Style>>} */\n  var styles = {};\n  var white = [255, 255, 255, 1];\n  var blue = [0, 153, 255, 1];\n  var width = 3;\n  styles[_ol_geom_GeometryType_.POLYGON] = [\n    new _ol_style_Style_({\n      fill: new _ol_style_Fill_({\n        color: [255, 255, 255, 0.5]\n      })\n    })\n  ];\n  styles[_ol_geom_GeometryType_.MULTI_POLYGON] =\n      styles[_ol_geom_GeometryType_.POLYGON];\n\n  styles[_ol_geom_GeometryType_.LINE_STRING] = [\n    new _ol_style_Style_({\n      stroke: new _ol_style_Stroke_({\n        color: white,\n        width: width + 2\n      })\n    }),\n    new _ol_style_Style_({\n      stroke: new _ol_style_Stroke_({\n        color: blue,\n        width: width\n      })\n    })\n  ];\n  styles[_ol_geom_GeometryType_.MULTI_LINE_STRING] =\n      styles[_ol_geom_GeometryType_.LINE_STRING];\n\n  styles[_ol_geom_GeometryType_.CIRCLE] =\n      styles[_ol_geom_GeometryType_.POLYGON].concat(\n          styles[_ol_geom_GeometryType_.LINE_STRING]\n      );\n\n\n  styles[_ol_geom_GeometryType_.POINT] = [\n    new _ol_style_Style_({\n      image: new _ol_style_Circle_({\n        radius: width * 2,\n        fill: new _ol_style_Fill_({\n          color: blue\n        }),\n        stroke: new _ol_style_Stroke_({\n          color: white,\n          width: width / 2\n        })\n      }),\n      zIndex: Infinity\n    })\n  ];\n  styles[_ol_geom_GeometryType_.MULTI_POINT] =\n      styles[_ol_geom_GeometryType_.POINT];\n\n  styles[_ol_geom_GeometryType_.GEOMETRY_COLLECTION] =\n      styles[_ol_geom_GeometryType_.POLYGON].concat(\n          styles[_ol_geom_GeometryType_.LINE_STRING],\n          styles[_ol_geom_GeometryType_.POINT]\n      );\n\n  return styles;\n};\n\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {ol.Feature|ol.render.Feature} feature Feature to get the geometry\n *     for.\n * @return {ol.geom.Geometry|ol.render.Feature|undefined} Geometry to render.\n */\n_ol_style_Style_.defaultGeometryFunction = function(feature) {\n  return feature.getGeometry();\n};\nexport default _ol_style_Style_;\n","/**\n * @enum {string}\n */\nvar _ol_format_FormatType_ = {\n  ARRAY_BUFFER: 'arraybuffer',\n  JSON: 'json',\n  TEXT: 'text',\n  XML: 'xml'\n};\n\nexport default _ol_format_FormatType_;\n","var _ol_loadingstrategy_ = {};\n\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {ol.Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array.<ol.Extent>} Extents.\n * @api\n */\n_ol_loadingstrategy_.all = function(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n};\n\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {ol.Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array.<ol.Extent>} Extents.\n * @api\n */\n_ol_loadingstrategy_.bbox = function(extent, resolution) {\n  return [extent];\n};\n\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {ol.tilegrid.TileGrid} tileGrid Tile grid.\n * @return {function(ol.Extent, number): Array.<ol.Extent>} Loading strategy.\n * @api\n */\n_ol_loadingstrategy_.tile = function(tileGrid) {\n  return (\n  /**\n       * @param {ol.Extent} extent Extent.\n       * @param {number} resolution Resolution.\n       * @return {Array.<ol.Extent>} Extents.\n       */\n    function(extent, resolution) {\n      var z = tileGrid.getZForResolution(resolution);\n      var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n      /** @type {Array.<ol.Extent>} */\n      var extents = [];\n      /** @type {ol.TileCoord} */\n      var tileCoord = [z, 0, 0];\n      for (tileCoord[1] = tileRange.minX; tileCoord[1] <= tileRange.maxX;\n        ++tileCoord[1]) {\n        for (tileCoord[2] = tileRange.minY; tileCoord[2] <= tileRange.maxY;\n          ++tileCoord[2]) {\n          extents.push(tileGrid.getTileCoordExtent(tileCoord));\n        }\n      }\n      return extents;\n    });\n};\nexport default _ol_loadingstrategy_;\n","import _ol_geom_Geometry_ from '../geom/geometry.js';\nimport _ol_obj_ from '../obj.js';\nimport _ol_proj_ from '../proj.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {ol.format.Feature} subclasses provide the ability to decode and encode\n * {@link ol.Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @constructor\n * @abstract\n * @api\n */\nvar _ol_format_Feature_ = function() {\n\n  /**\n   * @protected\n   * @type {ol.proj.Projection}\n   */\n  this.defaultDataProjection = null;\n\n  /**\n   * @protected\n   * @type {ol.proj.Projection}\n   */\n  this.defaultFeatureProjection = null;\n\n};\n\n\n/**\n * Adds the data projection to the read options.\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {olx.format.ReadOptions|undefined} Options.\n * @protected\n */\n_ol_format_Feature_.prototype.getReadOptions = function(source, opt_options) {\n  var options;\n  if (opt_options) {\n    options = {\n      dataProjection: opt_options.dataProjection ?\n        opt_options.dataProjection : this.readProjection(source),\n      featureProjection: opt_options.featureProjection\n    };\n  }\n  return this.adaptOptions(options);\n};\n\n\n/**\n * Sets the `defaultDataProjection` on the options, if no `dataProjection`\n * is set.\n * @param {olx.format.WriteOptions|olx.format.ReadOptions|undefined} options\n *     Options.\n * @protected\n * @return {olx.format.WriteOptions|olx.format.ReadOptions|undefined}\n *     Updated options.\n */\n_ol_format_Feature_.prototype.adaptOptions = function(options) {\n  return _ol_obj_.assign({\n    dataProjection: this.defaultDataProjection,\n    featureProjection: this.defaultFeatureProjection\n  }, options);\n};\n\n\n/**\n * Get the extent from the source of the last {@link readFeatures} call.\n * @return {ol.Extent} Tile extent.\n */\n_ol_format_Feature_.prototype.getLastExtent = function() {\n  return null;\n};\n\n\n/**\n * @abstract\n * @return {ol.format.FormatType} Format.\n */\n_ol_format_Feature_.prototype.getType = function() {};\n\n\n/**\n * Read a single feature from a source.\n *\n * @abstract\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.Feature} Feature.\n */\n_ol_format_Feature_.prototype.readFeature = function(source, opt_options) {};\n\n\n/**\n * Read all features from a source.\n *\n * @abstract\n * @param {Document|Node|ArrayBuffer|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n */\n_ol_format_Feature_.prototype.readFeatures = function(source, opt_options) {};\n\n\n/**\n * Read a single geometry from a source.\n *\n * @abstract\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.geom.Geometry} Geometry.\n */\n_ol_format_Feature_.prototype.readGeometry = function(source, opt_options) {};\n\n\n/**\n * Read the projection from a source.\n *\n * @abstract\n * @param {Document|Node|Object|string} source Source.\n * @return {ol.proj.Projection} Projection.\n */\n_ol_format_Feature_.prototype.readProjection = function(source) {};\n\n\n/**\n * Encode a feature in this format.\n *\n * @abstract\n * @param {ol.Feature} feature Feature.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {string} Result.\n */\n_ol_format_Feature_.prototype.writeFeature = function(feature, opt_options) {};\n\n\n/**\n * Encode an array of features in this format.\n *\n * @abstract\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {string} Result.\n */\n_ol_format_Feature_.prototype.writeFeatures = function(features, opt_options) {};\n\n\n/**\n * Write a single geometry in this format.\n *\n * @abstract\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {string} Result.\n */\n_ol_format_Feature_.prototype.writeGeometry = function(geometry, opt_options) {};\n\n\n/**\n * @param {ol.geom.Geometry|ol.Extent} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {(olx.format.WriteOptions|olx.format.ReadOptions)=} opt_options\n *     Options.\n * @return {ol.geom.Geometry|ol.Extent} Transformed geometry.\n * @protected\n */\n_ol_format_Feature_.transformWithOptions = function(\n    geometry, write, opt_options) {\n  var featureProjection = opt_options ?\n    _ol_proj_.get(opt_options.featureProjection) : null;\n  var dataProjection = opt_options ?\n    _ol_proj_.get(opt_options.dataProjection) : null;\n  /**\n   * @type {ol.geom.Geometry|ol.Extent}\n   */\n  var transformed;\n  if (featureProjection && dataProjection &&\n      !_ol_proj_.equivalent(featureProjection, dataProjection)) {\n    if (geometry instanceof _ol_geom_Geometry_) {\n      transformed = (write ? geometry.clone() : geometry).transform(\n          write ? featureProjection : dataProjection,\n          write ? dataProjection : featureProjection);\n    } else {\n      // FIXME this is necessary because ol.format.GML treats extents\n      // as geometries\n      transformed = _ol_proj_.transformExtent(\n          geometry,\n          dataProjection,\n          featureProjection);\n    }\n  } else {\n    transformed = geometry;\n  }\n  if (write && opt_options && opt_options.decimals !== undefined) {\n    var power = Math.pow(10, opt_options.decimals);\n    // if decimals option on write, round each coordinate appropriately\n    /**\n     * @param {Array.<number>} coordinates Coordinates.\n     * @return {Array.<number>} Transformed coordinates.\n     */\n    var transform = function(coordinates) {\n      for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = Math.round(coordinates[i] * power) / power;\n      }\n      return coordinates;\n    };\n    if (transformed === geometry) {\n      transformed = transformed.clone();\n    }\n    transformed.applyTransform(transform);\n  }\n  return transformed;\n};\nexport default _ol_format_Feature_;\n","import _ol_ from '../index.js';\nimport _ol_events_ from '../events.js';\nimport _ol_events_EventType_ from '../events/eventtype.js';\nimport _ol_extent_ from '../extent.js';\nimport _ol_geom_Geometry_ from '../geom/geometry.js';\nimport _ol_geom_GeometryType_ from '../geom/geometrytype.js';\nimport _ol_obj_ from '../obj.js';\n\n/**\n * @classdesc\n * An array of {@link ol.geom.Geometry} objects.\n *\n * @constructor\n * @extends {ol.geom.Geometry}\n * @param {Array.<ol.geom.Geometry>=} opt_geometries Geometries.\n * @api\n */\nvar _ol_geom_GeometryCollection_ = function(opt_geometries) {\n\n  _ol_geom_Geometry_.call(this);\n\n  /**\n   * @private\n   * @type {Array.<ol.geom.Geometry>}\n   */\n  this.geometries_ = opt_geometries ? opt_geometries : null;\n\n  this.listenGeometriesChange_();\n};\n\n_ol_.inherits(_ol_geom_GeometryCollection_, _ol_geom_Geometry_);\n\n\n/**\n * @param {Array.<ol.geom.Geometry>} geometries Geometries.\n * @private\n * @return {Array.<ol.geom.Geometry>} Cloned geometries.\n */\n_ol_geom_GeometryCollection_.cloneGeometries_ = function(geometries) {\n  var clonedGeometries = [];\n  var i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    clonedGeometries.push(geometries[i].clone());\n  }\n  return clonedGeometries;\n};\n\n\n/**\n * @private\n */\n_ol_geom_GeometryCollection_.prototype.unlistenGeometriesChange_ = function() {\n  var i, ii;\n  if (!this.geometries_) {\n    return;\n  }\n  for (i = 0, ii = this.geometries_.length; i < ii; ++i) {\n    _ol_events_.unlisten(\n        this.geometries_[i], _ol_events_EventType_.CHANGE,\n        this.changed, this);\n  }\n};\n\n\n/**\n * @private\n */\n_ol_geom_GeometryCollection_.prototype.listenGeometriesChange_ = function() {\n  var i, ii;\n  if (!this.geometries_) {\n    return;\n  }\n  for (i = 0, ii = this.geometries_.length; i < ii; ++i) {\n    _ol_events_.listen(\n        this.geometries_[i], _ol_events_EventType_.CHANGE,\n        this.changed, this);\n  }\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.GeometryCollection} Clone.\n * @override\n * @api\n */\n_ol_geom_GeometryCollection_.prototype.clone = function() {\n  var geometryCollection = new _ol_geom_GeometryCollection_(null);\n  geometryCollection.setGeometries(this.geometries_);\n  return geometryCollection;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_geom_GeometryCollection_.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance <\n      _ol_extent_.closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  var geometries = this.geometries_;\n  var i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    minSquaredDistance = geometries[i].closestPointXY(\n        x, y, closestPoint, minSquaredDistance);\n  }\n  return minSquaredDistance;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_geom_GeometryCollection_.prototype.containsXY = function(x, y) {\n  var geometries = this.geometries_;\n  var i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    if (geometries[i].containsXY(x, y)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_geom_GeometryCollection_.prototype.computeExtent = function(extent) {\n  _ol_extent_.createOrUpdateEmpty(extent);\n  var geometries = this.geometries_;\n  for (var i = 0, ii = geometries.length; i < ii; ++i) {\n    _ol_extent_.extend(extent, geometries[i].getExtent());\n  }\n  return extent;\n};\n\n\n/**\n * Return the geometries that make up this geometry collection.\n * @return {Array.<ol.geom.Geometry>} Geometries.\n * @api\n */\n_ol_geom_GeometryCollection_.prototype.getGeometries = function() {\n  return _ol_geom_GeometryCollection_.cloneGeometries_(this.geometries_);\n};\n\n\n/**\n * @return {Array.<ol.geom.Geometry>} Geometries.\n */\n_ol_geom_GeometryCollection_.prototype.getGeometriesArray = function() {\n  return this.geometries_;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_geom_GeometryCollection_.prototype.getSimplifiedGeometry = function(squaredTolerance) {\n  if (this.simplifiedGeometryRevision != this.getRevision()) {\n    _ol_obj_.clear(this.simplifiedGeometryCache);\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n    this.simplifiedGeometryRevision = this.getRevision();\n  }\n  if (squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n       squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)) {\n    return this;\n  }\n  var key = squaredTolerance.toString();\n  if (this.simplifiedGeometryCache.hasOwnProperty(key)) {\n    return this.simplifiedGeometryCache[key];\n  } else {\n    var simplifiedGeometries = [];\n    var geometries = this.geometries_;\n    var simplified = false;\n    var i, ii;\n    for (i = 0, ii = geometries.length; i < ii; ++i) {\n      var geometry = geometries[i];\n      var simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\n      simplifiedGeometries.push(simplifiedGeometry);\n      if (simplifiedGeometry !== geometry) {\n        simplified = true;\n      }\n    }\n    if (simplified) {\n      var simplifiedGeometryCollection = new _ol_geom_GeometryCollection_(null);\n      simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\n      this.simplifiedGeometryCache[key] = simplifiedGeometryCollection;\n      return simplifiedGeometryCollection;\n    } else {\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_geom_GeometryCollection_.prototype.getType = function() {\n  return _ol_geom_GeometryType_.GEOMETRY_COLLECTION;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_geom_GeometryCollection_.prototype.intersectsExtent = function(extent) {\n  var geometries = this.geometries_;\n  var i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    if (geometries[i].intersectsExtent(extent)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * @return {boolean} Is empty.\n */\n_ol_geom_GeometryCollection_.prototype.isEmpty = function() {\n  return this.geometries_.length === 0;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_geom_GeometryCollection_.prototype.rotate = function(angle, anchor) {\n  var geometries = this.geometries_;\n  for (var i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].rotate(angle, anchor);\n  }\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_geom_GeometryCollection_.prototype.scale = function(sx, opt_sy, opt_anchor) {\n  var anchor = opt_anchor;\n  if (!anchor) {\n    anchor = _ol_extent_.getCenter(this.getExtent());\n  }\n  var geometries = this.geometries_;\n  for (var i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].scale(sx, opt_sy, anchor);\n  }\n  this.changed();\n};\n\n\n/**\n * Set the geometries that make up this geometry collection.\n * @param {Array.<ol.geom.Geometry>} geometries Geometries.\n * @api\n */\n_ol_geom_GeometryCollection_.prototype.setGeometries = function(geometries) {\n  this.setGeometriesArray(\n      _ol_geom_GeometryCollection_.cloneGeometries_(geometries));\n};\n\n\n/**\n * @param {Array.<ol.geom.Geometry>} geometries Geometries.\n */\n_ol_geom_GeometryCollection_.prototype.setGeometriesArray = function(geometries) {\n  this.unlistenGeometriesChange_();\n  this.geometries_ = geometries;\n  this.listenGeometriesChange_();\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_geom_GeometryCollection_.prototype.applyTransform = function(transformFn) {\n  var geometries = this.geometries_;\n  var i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].applyTransform(transformFn);\n  }\n  this.changed();\n};\n\n\n/**\n * Translate the geometry.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @override\n * @api\n */\n_ol_geom_GeometryCollection_.prototype.translate = function(deltaX, deltaY) {\n  var geometries = this.geometries_;\n  var i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].translate(deltaX, deltaY);\n  }\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_geom_GeometryCollection_.prototype.disposeInternal = function() {\n  this.unlistenGeometriesChange_();\n  _ol_geom_Geometry_.prototype.disposeInternal.call(this);\n};\nexport default _ol_geom_GeometryCollection_;\n","import _ol_ from '../index.js';\nimport _ol_colorlike_ from '../colorlike.js';\nimport _ol_dom_ from '../dom.js';\nimport _ol_has_ from '../has.js';\nimport _ol_ImageState_ from '../imagestate.js';\nimport _ol_render_canvas_ from '../render/canvas.js';\nimport _ol_style_Image_ from '../style/image.js';\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n *\n * @constructor\n * @param {olx.style.RegularShapeOptions} options Options.\n * @extends {ol.style.Image}\n * @api\n */\nvar _ol_style_RegularShape_ = function(options) {\n  /**\n   * @private\n   * @type {Array.<string>}\n   */\n  this.checksums_ = null;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement}\n   */\n  this.canvas_ = null;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement}\n   */\n  this.hitDetectionCanvas_ = null;\n\n  /**\n   * @private\n   * @type {ol.style.Fill}\n   */\n  this.fill_ = options.fill !== undefined ? options.fill : null;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.origin_ = [0, 0];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.points_ = options.points;\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.radius_ = /** @type {number} */ (options.radius !== undefined ?\n    options.radius : options.radius1);\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.radius2_ = options.radius2;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n  /**\n   * @private\n   * @type {ol.style.Stroke}\n   */\n  this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.anchor_ = null;\n\n  /**\n   * @private\n   * @type {ol.Size}\n   */\n  this.size_ = null;\n\n  /**\n   * @private\n   * @type {ol.Size}\n   */\n  this.imageSize_ = null;\n\n  /**\n   * @private\n   * @type {ol.Size}\n   */\n  this.hitDetectionImageSize_ = null;\n\n  /**\n   * @protected\n   * @type {ol.style.AtlasManager|undefined}\n   */\n  this.atlasManager_ = options.atlasManager;\n\n  this.render_(this.atlasManager_);\n\n  /**\n   * @type {boolean}\n   */\n  var snapToPixel = options.snapToPixel !== undefined ?\n    options.snapToPixel : true;\n\n  /**\n   * @type {boolean}\n   */\n  var rotateWithView = options.rotateWithView !== undefined ?\n    options.rotateWithView : false;\n\n  _ol_style_Image_.call(this, {\n    opacity: 1,\n    rotateWithView: rotateWithView,\n    rotation: options.rotation !== undefined ? options.rotation : 0,\n    scale: 1,\n    snapToPixel: snapToPixel\n  });\n};\n\n_ol_.inherits(_ol_style_RegularShape_, _ol_style_Image_);\n\n\n/**\n * Clones the style. If an atlasmanager was provided to the original style it will be used in the cloned style, too.\n * @return {ol.style.RegularShape} The cloned style.\n * @api\n */\n_ol_style_RegularShape_.prototype.clone = function() {\n  var style = new _ol_style_RegularShape_({\n    fill: this.getFill() ? this.getFill().clone() : undefined,\n    points: this.getPoints(),\n    radius: this.getRadius(),\n    radius2: this.getRadius2(),\n    angle: this.getAngle(),\n    snapToPixel: this.getSnapToPixel(),\n    stroke: this.getStroke() ?  this.getStroke().clone() : undefined,\n    rotation: this.getRotation(),\n    rotateWithView: this.getRotateWithView(),\n    atlasManager: this.atlasManager_\n  });\n  style.setOpacity(this.getOpacity());\n  style.setScale(this.getScale());\n  return style;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_style_RegularShape_.prototype.getAnchor = function() {\n  return this.anchor_;\n};\n\n\n/**\n * Get the angle used in generating the shape.\n * @return {number} Shape's rotation in radians.\n * @api\n */\n_ol_style_RegularShape_.prototype.getAngle = function() {\n  return this.angle_;\n};\n\n\n/**\n * Get the fill style for the shape.\n * @return {ol.style.Fill} Fill style.\n * @api\n */\n_ol_style_RegularShape_.prototype.getFill = function() {\n  return this.fill_;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_style_RegularShape_.prototype.getHitDetectionImage = function(pixelRatio) {\n  return this.hitDetectionCanvas_;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_style_RegularShape_.prototype.getImage = function(pixelRatio) {\n  return this.canvas_;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_style_RegularShape_.prototype.getImageSize = function() {\n  return this.imageSize_;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_style_RegularShape_.prototype.getHitDetectionImageSize = function() {\n  return this.hitDetectionImageSize_;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_style_RegularShape_.prototype.getImageState = function() {\n  return _ol_ImageState_.LOADED;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_style_RegularShape_.prototype.getOrigin = function() {\n  return this.origin_;\n};\n\n\n/**\n * Get the number of points for generating the shape.\n * @return {number} Number of points for stars and regular polygons.\n * @api\n */\n_ol_style_RegularShape_.prototype.getPoints = function() {\n  return this.points_;\n};\n\n\n/**\n * Get the (primary) radius for the shape.\n * @return {number} Radius.\n * @api\n */\n_ol_style_RegularShape_.prototype.getRadius = function() {\n  return this.radius_;\n};\n\n\n/**\n * Get the secondary radius for the shape.\n * @return {number|undefined} Radius2.\n * @api\n */\n_ol_style_RegularShape_.prototype.getRadius2 = function() {\n  return this.radius2_;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_style_RegularShape_.prototype.getSize = function() {\n  return this.size_;\n};\n\n\n/**\n * Get the stroke style for the shape.\n * @return {ol.style.Stroke} Stroke style.\n * @api\n */\n_ol_style_RegularShape_.prototype.getStroke = function() {\n  return this.stroke_;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_style_RegularShape_.prototype.listenImageChange = function(listener, thisArg) {};\n\n\n/**\n * @inheritDoc\n */\n_ol_style_RegularShape_.prototype.load = function() {};\n\n\n/**\n * @inheritDoc\n */\n_ol_style_RegularShape_.prototype.unlistenImageChange = function(listener, thisArg) {};\n\n\n/**\n * @protected\n * @param {ol.style.AtlasManager|undefined} atlasManager An atlas manager.\n */\n_ol_style_RegularShape_.prototype.render_ = function(atlasManager) {\n  var imageSize;\n  var lineCap = '';\n  var lineJoin = '';\n  var miterLimit = 0;\n  var lineDash = null;\n  var lineDashOffset = 0;\n  var strokeStyle;\n  var strokeWidth = 0;\n\n  if (this.stroke_) {\n    strokeStyle = this.stroke_.getColor();\n    if (strokeStyle === null) {\n      strokeStyle = _ol_render_canvas_.defaultStrokeStyle;\n    }\n    strokeStyle = _ol_colorlike_.asColorLike(strokeStyle);\n    strokeWidth = this.stroke_.getWidth();\n    if (strokeWidth === undefined) {\n      strokeWidth = _ol_render_canvas_.defaultLineWidth;\n    }\n    lineDash = this.stroke_.getLineDash();\n    lineDashOffset = this.stroke_.getLineDashOffset();\n    if (!_ol_has_.CANVAS_LINE_DASH) {\n      lineDash = null;\n      lineDashOffset = 0;\n    }\n    lineJoin = this.stroke_.getLineJoin();\n    if (lineJoin === undefined) {\n      lineJoin = _ol_render_canvas_.defaultLineJoin;\n    }\n    lineCap = this.stroke_.getLineCap();\n    if (lineCap === undefined) {\n      lineCap = _ol_render_canvas_.defaultLineCap;\n    }\n    miterLimit = this.stroke_.getMiterLimit();\n    if (miterLimit === undefined) {\n      miterLimit = _ol_render_canvas_.defaultMiterLimit;\n    }\n  }\n\n  var size = 2 * (this.radius_ + strokeWidth) + 1;\n\n  /** @type {ol.RegularShapeRenderOptions} */\n  var renderOptions = {\n    strokeStyle: strokeStyle,\n    strokeWidth: strokeWidth,\n    size: size,\n    lineCap: lineCap,\n    lineDash: lineDash,\n    lineDashOffset: lineDashOffset,\n    lineJoin: lineJoin,\n    miterLimit: miterLimit\n  };\n\n  if (atlasManager === undefined) {\n    // no atlas manager is used, create a new canvas\n    var context = _ol_dom_.createCanvasContext2D(size, size);\n    this.canvas_ = context.canvas;\n\n    // canvas.width and height are rounded to the closest integer\n    size = this.canvas_.width;\n    imageSize = size;\n\n    this.draw_(renderOptions, context, 0, 0);\n\n    this.createHitDetectionCanvas_(renderOptions);\n  } else {\n    // an atlas manager is used, add the symbol to an atlas\n    size = Math.round(size);\n\n    var hasCustomHitDetectionImage = !this.fill_;\n    var renderHitDetectionCallback;\n    if (hasCustomHitDetectionImage) {\n      // render the hit-detection image into a separate atlas image\n      renderHitDetectionCallback =\n          this.drawHitDetectionCanvas_.bind(this, renderOptions);\n    }\n\n    var id = this.getChecksum();\n    var info = atlasManager.add(\n        id, size, size, this.draw_.bind(this, renderOptions),\n        renderHitDetectionCallback);\n\n    this.canvas_ = info.image;\n    this.origin_ = [info.offsetX, info.offsetY];\n    imageSize = info.image.width;\n\n    if (hasCustomHitDetectionImage) {\n      this.hitDetectionCanvas_ = info.hitImage;\n      this.hitDetectionImageSize_ =\n          [info.hitImage.width, info.hitImage.height];\n    } else {\n      this.hitDetectionCanvas_ = this.canvas_;\n      this.hitDetectionImageSize_ = [imageSize, imageSize];\n    }\n  }\n\n  this.anchor_ = [size / 2, size / 2];\n  this.size_ = [size, size];\n  this.imageSize_ = [imageSize, imageSize];\n};\n\n\n/**\n * @private\n * @param {ol.RegularShapeRenderOptions} renderOptions Render options.\n * @param {CanvasRenderingContext2D} context The rendering context.\n * @param {number} x The origin for the symbol (x).\n * @param {number} y The origin for the symbol (y).\n */\n_ol_style_RegularShape_.prototype.draw_ = function(renderOptions, context, x, y) {\n  var i, angle0, radiusC;\n  // reset transform\n  context.setTransform(1, 0, 0, 1, 0, 0);\n\n  // then move to (x, y)\n  context.translate(x, y);\n\n  context.beginPath();\n\n  var points = this.points_;\n  if (points === Infinity) {\n    context.arc(\n        renderOptions.size / 2, renderOptions.size / 2,\n        this.radius_, 0, 2 * Math.PI, true);\n  } else {\n    var radius2 = (this.radius2_ !== undefined) ? this.radius2_\n      : this.radius_;\n    if (radius2 !== this.radius_) {\n      points = 2 * points;\n    }\n    for (i = 0; i <= points; i++) {\n      angle0 = i * 2 * Math.PI / points - Math.PI / 2 + this.angle_;\n      radiusC = i % 2 === 0 ? this.radius_ : radius2;\n      context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0),\n          renderOptions.size / 2 + radiusC * Math.sin(angle0));\n    }\n  }\n\n\n  if (this.fill_) {\n    var color = this.fill_.getColor();\n    if (color === null) {\n      color = _ol_render_canvas_.defaultFillStyle;\n    }\n    context.fillStyle = _ol_colorlike_.asColorLike(color);\n    context.fill();\n  }\n  if (this.stroke_) {\n    context.strokeStyle = renderOptions.strokeStyle;\n    context.lineWidth = renderOptions.strokeWidth;\n    if (renderOptions.lineDash) {\n      context.setLineDash(renderOptions.lineDash);\n      context.lineDashOffset = renderOptions.lineDashOffset;\n    }\n    context.lineCap = renderOptions.lineCap;\n    context.lineJoin = renderOptions.lineJoin;\n    context.miterLimit = renderOptions.miterLimit;\n    context.stroke();\n  }\n  context.closePath();\n};\n\n\n/**\n * @private\n * @param {ol.RegularShapeRenderOptions} renderOptions Render options.\n */\n_ol_style_RegularShape_.prototype.createHitDetectionCanvas_ = function(renderOptions) {\n  this.hitDetectionImageSize_ = [renderOptions.size, renderOptions.size];\n  if (this.fill_) {\n    this.hitDetectionCanvas_ = this.canvas_;\n    return;\n  }\n\n  // if no fill style is set, create an extra hit-detection image with a\n  // default fill style\n  var context = _ol_dom_.createCanvasContext2D(renderOptions.size, renderOptions.size);\n  this.hitDetectionCanvas_ = context.canvas;\n\n  this.drawHitDetectionCanvas_(renderOptions, context, 0, 0);\n};\n\n\n/**\n * @private\n * @param {ol.RegularShapeRenderOptions} renderOptions Render options.\n * @param {CanvasRenderingContext2D} context The context.\n * @param {number} x The origin for the symbol (x).\n * @param {number} y The origin for the symbol (y).\n */\n_ol_style_RegularShape_.prototype.drawHitDetectionCanvas_ = function(renderOptions, context, x, y) {\n  // reset transform\n  context.setTransform(1, 0, 0, 1, 0, 0);\n\n  // then move to (x, y)\n  context.translate(x, y);\n\n  context.beginPath();\n\n  var points = this.points_;\n  if (points === Infinity) {\n    context.arc(\n        renderOptions.size / 2, renderOptions.size / 2,\n        this.radius_, 0, 2 * Math.PI, true);\n  } else {\n    var radius2 = (this.radius2_ !== undefined) ? this.radius2_\n      : this.radius_;\n    if (radius2 !== this.radius_) {\n      points = 2 * points;\n    }\n    var i, radiusC, angle0;\n    for (i = 0; i <= points; i++) {\n      angle0 = i * 2 * Math.PI / points - Math.PI / 2 + this.angle_;\n      radiusC = i % 2 === 0 ? this.radius_ : radius2;\n      context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0),\n          renderOptions.size / 2 + radiusC * Math.sin(angle0));\n    }\n  }\n\n  context.fillStyle = _ol_render_canvas_.defaultFillStyle;\n  context.fill();\n  if (this.stroke_) {\n    context.strokeStyle = renderOptions.strokeStyle;\n    context.lineWidth = renderOptions.strokeWidth;\n    if (renderOptions.lineDash) {\n      context.setLineDash(renderOptions.lineDash);\n      context.lineDashOffset = renderOptions.lineDashOffset;\n    }\n    context.stroke();\n  }\n  context.closePath();\n};\n\n\n/**\n * @return {string} The checksum.\n */\n_ol_style_RegularShape_.prototype.getChecksum = function() {\n  var strokeChecksum = this.stroke_ ?\n    this.stroke_.getChecksum() : '-';\n  var fillChecksum = this.fill_ ?\n    this.fill_.getChecksum() : '-';\n\n  var recalculate = !this.checksums_ ||\n      (strokeChecksum != this.checksums_[1] ||\n      fillChecksum != this.checksums_[2] ||\n      this.radius_ != this.checksums_[3] ||\n      this.radius2_ != this.checksums_[4] ||\n      this.angle_ != this.checksums_[5] ||\n      this.points_ != this.checksums_[6]);\n\n  if (recalculate) {\n    var checksum = 'r' + strokeChecksum + fillChecksum +\n        (this.radius_ !== undefined ? this.radius_.toString() : '-') +\n        (this.radius2_ !== undefined ? this.radius2_.toString() : '-') +\n        (this.angle_ !== undefined ? this.angle_.toString() : '-') +\n        (this.points_ !== undefined ? this.points_.toString() : '-');\n    this.checksums_ = [checksum, strokeChecksum, fillChecksum,\n      this.radius_, this.radius2_, this.angle_, this.points_];\n  }\n\n  return this.checksums_[0];\n};\nexport default _ol_style_RegularShape_;\n","'use strict';\nvar fails = require('../internals/fails');\n\nmodule.exports = function (METHOD_NAME, argument) {\n  var method = [][METHOD_NAME];\n  return !!method && fails(function () {\n    // eslint-disable-next-line no-useless-call -- required for testing\n    method.call(null, argument || function () { return 1; }, 1);\n  });\n};\n","import _ol_array_ from '../../array.js';\nimport _ol_math_ from '../../math.js';\nvar _ol_geom_flat_interpolate_ = {};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array.<number>=} opt_dest Destination.\n * @return {Array.<number>} Destination.\n */\n_ol_geom_flat_interpolate_.lineString = function(flatCoordinates, offset, end, stride, fraction, opt_dest) {\n  var pointX = NaN;\n  var pointY = NaN;\n  var n = (end - offset) / stride;\n  if (n === 1) {\n    pointX = flatCoordinates[offset];\n    pointY = flatCoordinates[offset + 1];\n  } else if (n == 2) {\n    pointX = (1 - fraction) * flatCoordinates[offset] +\n        fraction * flatCoordinates[offset + stride];\n    pointY = (1 - fraction) * flatCoordinates[offset + 1] +\n        fraction * flatCoordinates[offset + stride + 1];\n  } else if (n !== 0) {\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    var length = 0;\n    var cumulativeLengths = [0];\n    var i;\n    for (i = offset + stride; i < end; i += stride) {\n      var x2 = flatCoordinates[i];\n      var y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    var target = fraction * length;\n    var index = _ol_array_.binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      var t = (target - cumulativeLengths[-index - 2]) /\n          (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      var o = offset + (-index - 2) * stride;\n      pointX = _ol_math_.lerp(\n          flatCoordinates[o], flatCoordinates[o + stride], t);\n      pointY = _ol_math_.lerp(\n          flatCoordinates[o + 1], flatCoordinates[o + stride + 1], t);\n    } else {\n      pointX = flatCoordinates[offset + index * stride];\n      pointY = flatCoordinates[offset + index * stride + 1];\n    }\n  }\n  if (opt_dest) {\n    opt_dest[0] = pointX;\n    opt_dest[1] = pointY;\n    return opt_dest;\n  } else {\n    return [pointX, pointY];\n  }\n};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {ol.Coordinate} Coordinate.\n */\n_ol_geom_flat_interpolate_.lineStringCoordinateAtM = function(flatCoordinates, offset, end, stride, m, extrapolate) {\n  if (end == offset) {\n    return null;\n  }\n  var coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  } else if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  var lo = offset / stride;\n  var hi = end / stride;\n  while (lo < hi) {\n    var mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  var m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  var m1 = flatCoordinates[(lo + 1) * stride - 1];\n  var t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  var i;\n  for (i = 0; i < stride - 1; ++i) {\n    coordinate.push(_ol_math_.lerp(flatCoordinates[(lo - 1) * stride + i],\n        flatCoordinates[lo * stride + i], t));\n  }\n  coordinate.push(m);\n  return coordinate;\n};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {ol.Coordinate} Coordinate.\n */\n_ol_geom_flat_interpolate_.lineStringsCoordinateAtM = function(\n    flatCoordinates, offset, ends, stride, m, extrapolate, interpolate) {\n  if (interpolate) {\n    return _ol_geom_flat_interpolate_.lineStringCoordinateAtM(\n        flatCoordinates, offset, ends[ends.length - 1], stride, m, extrapolate);\n  }\n  var coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  var i, ii;\n  for (i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    } else if (m <= flatCoordinates[end - 1]) {\n      return _ol_geom_flat_interpolate_.lineStringCoordinateAtM(\n          flatCoordinates, offset, end, stride, m, false);\n    }\n    offset = end;\n  }\n  return null;\n};\nexport default _ol_geom_flat_interpolate_;\n","import _ol_ from '../index.js';\nimport _ol_array_ from '../array.js';\nimport _ol_extent_ from '../extent.js';\nimport _ol_geom_GeometryLayout_ from '../geom/geometrylayout.js';\nimport _ol_geom_GeometryType_ from '../geom/geometrytype.js';\nimport _ol_geom_Point_ from '../geom/point.js';\nimport _ol_geom_SimpleGeometry_ from '../geom/simplegeometry.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport _ol_math_ from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<ol.Coordinate>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nvar _ol_geom_MultiPoint_ = function(coordinates, opt_layout) {\n  _ol_geom_SimpleGeometry_.call(this);\n  this.setCoordinates(coordinates, opt_layout);\n};\n\n_ol_.inherits(_ol_geom_MultiPoint_, _ol_geom_SimpleGeometry_);\n\n\n/**\n * Append the passed point to this multipoint.\n * @param {ol.geom.Point} point Point.\n * @api\n */\n_ol_geom_MultiPoint_.prototype.appendPoint = function(point) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = point.getFlatCoordinates().slice();\n  } else {\n    _ol_array_.extend(this.flatCoordinates, point.getFlatCoordinates());\n  }\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiPoint} Clone.\n * @override\n * @api\n */\n_ol_geom_MultiPoint_.prototype.clone = function() {\n  var multiPoint = new _ol_geom_MultiPoint_(null);\n  multiPoint.setFlatCoordinates(this.layout, this.flatCoordinates.slice());\n  return multiPoint;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_geom_MultiPoint_.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance <\n      _ol_extent_.closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  var flatCoordinates = this.flatCoordinates;\n  var stride = this.stride;\n  var i, ii, j;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    var squaredDistance = _ol_math_.squaredDistance(\n        x, y, flatCoordinates[i], flatCoordinates[i + 1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (j = 0; j < stride; ++j) {\n        closestPoint[j] = flatCoordinates[i + j];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n};\n\n\n/**\n * Return the coordinates of the multipoint.\n * @return {Array.<ol.Coordinate>} Coordinates.\n * @override\n * @api\n */\n_ol_geom_MultiPoint_.prototype.getCoordinates = function() {\n  return _ol_geom_flat_inflate_.coordinates(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n};\n\n\n/**\n * Return the point at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.Point} Point.\n * @api\n */\n_ol_geom_MultiPoint_.prototype.getPoint = function(index) {\n  var n = !this.flatCoordinates ?\n    0 : this.flatCoordinates.length / this.stride;\n  if (index < 0 || n <= index) {\n    return null;\n  }\n  var point = new _ol_geom_Point_(null);\n  point.setFlatCoordinates(this.layout, this.flatCoordinates.slice(\n      index * this.stride, (index + 1) * this.stride));\n  return point;\n};\n\n\n/**\n * Return the points of this multipoint.\n * @return {Array.<ol.geom.Point>} Points.\n * @api\n */\n_ol_geom_MultiPoint_.prototype.getPoints = function() {\n  var flatCoordinates = this.flatCoordinates;\n  var layout = this.layout;\n  var stride = this.stride;\n  /** @type {Array.<ol.geom.Point>} */\n  var points = [];\n  var i, ii;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    var point = new _ol_geom_Point_(null);\n    point.setFlatCoordinates(layout, flatCoordinates.slice(i, i + stride));\n    points.push(point);\n  }\n  return points;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_geom_MultiPoint_.prototype.getType = function() {\n  return _ol_geom_GeometryType_.MULTI_POINT;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_geom_MultiPoint_.prototype.intersectsExtent = function(extent) {\n  var flatCoordinates = this.flatCoordinates;\n  var stride = this.stride;\n  var i, ii, x, y;\n  for (i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    x = flatCoordinates[i];\n    y = flatCoordinates[i + 1];\n    if (_ol_extent_.containsXY(extent, x, y)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * Set the coordinates of the multipoint.\n * @param {Array.<ol.Coordinate>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\n_ol_geom_MultiPoint_.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(_ol_geom_GeometryLayout_.XY, null);\n  } else {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = _ol_geom_flat_deflate_.coordinates(\n        this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n */\n_ol_geom_MultiPoint_.prototype.setFlatCoordinates = function(layout, flatCoordinates) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.changed();\n};\nexport default _ol_geom_MultiPoint_;\n","/**\n * @enum {string}\n */\nvar _ol_source_VectorEventType_ = {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event ol.source.Vector.Event#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event ol.source.Vector.Event#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event ol.source.Vector.Event#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link ol.source.Vector#clear source.clear()} for exceptions.\n   * @event ol.source.Vector.Event#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature'\n};\n\nexport default _ol_source_VectorEventType_;\n","import _ol_ from '../index.js';\nimport _ol_array_ from '../array.js';\nimport _ol_extent_ from '../extent.js';\nimport _ol_geom_GeometryLayout_ from '../geom/geometrylayout.js';\nimport _ol_geom_GeometryType_ from '../geom/geometrytype.js';\nimport _ol_geom_LineString_ from '../geom/linestring.js';\nimport _ol_geom_SimpleGeometry_ from '../geom/simplegeometry.js';\nimport _ol_geom_flat_closest_ from '../geom/flat/closest.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport _ol_geom_flat_interpolate_ from '../geom/flat/interpolate.js';\nimport _ol_geom_flat_intersectsextent_ from '../geom/flat/intersectsextent.js';\nimport _ol_geom_flat_simplify_ from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<Array.<ol.Coordinate>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nvar _ol_geom_MultiLineString_ = function(coordinates, opt_layout) {\n\n  _ol_geom_SimpleGeometry_.call(this);\n\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n  this.ends_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\n_ol_.inherits(_ol_geom_MultiLineString_, _ol_geom_SimpleGeometry_);\n\n\n/**\n * Append the passed linestring to the multilinestring.\n * @param {ol.geom.LineString} lineString LineString.\n * @api\n */\n_ol_geom_MultiLineString_.prototype.appendLineString = function(lineString) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = lineString.getFlatCoordinates().slice();\n  } else {\n    _ol_array_.extend(\n        this.flatCoordinates, lineString.getFlatCoordinates().slice());\n  }\n  this.ends_.push(this.flatCoordinates.length);\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiLineString} Clone.\n * @override\n * @api\n */\n_ol_geom_MultiLineString_.prototype.clone = function() {\n  var multiLineString = new _ol_geom_MultiLineString_(null);\n  multiLineString.setFlatCoordinates(\n      this.layout, this.flatCoordinates.slice(), this.ends_.slice());\n  return multiLineString;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_geom_MultiLineString_.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance <\n      _ol_extent_.closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(_ol_geom_flat_closest_.getsMaxSquaredDelta(\n        this.flatCoordinates, 0, this.ends_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return _ol_geom_flat_closest_.getsClosestPoint(\n      this.flatCoordinates, 0, this.ends_, this.stride,\n      this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * Returns the coordinate at `m` using linear interpolation, or `null` if no\n * such coordinate exists.\n *\n * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n * M will return the first coordinate and Ms greater than the last M will\n * return the last coordinate.\n *\n * `opt_interpolate` controls interpolation between consecutive LineStrings\n * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n * will be linearly interpolated between the last coordinate of one LineString\n * and the first coordinate of the next LineString.  If `opt_interpolate` is\n * `false` then the function will return `null` for Ms falling between\n * LineStrings.\n *\n * @param {number} m M.\n * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n * @param {boolean=} opt_interpolate Interpolate. Default is `false`.\n * @return {ol.Coordinate} Coordinate.\n * @api\n */\n_ol_geom_MultiLineString_.prototype.getCoordinateAtM = function(m, opt_extrapolate, opt_interpolate) {\n  if ((this.layout != _ol_geom_GeometryLayout_.XYM &&\n       this.layout != _ol_geom_GeometryLayout_.XYZM) ||\n      this.flatCoordinates.length === 0) {\n    return null;\n  }\n  var extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n  var interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n  return _ol_geom_flat_interpolate_.lineStringsCoordinateAtM(this.flatCoordinates, 0,\n      this.ends_, this.stride, m, extrapolate, interpolate);\n};\n\n\n/**\n * Return the coordinates of the multilinestring.\n * @return {Array.<Array.<ol.Coordinate>>} Coordinates.\n * @override\n * @api\n */\n_ol_geom_MultiLineString_.prototype.getCoordinates = function() {\n  return _ol_geom_flat_inflate_.coordinatess(\n      this.flatCoordinates, 0, this.ends_, this.stride);\n};\n\n\n/**\n * @return {Array.<number>} Ends.\n */\n_ol_geom_MultiLineString_.prototype.getEnds = function() {\n  return this.ends_;\n};\n\n\n/**\n * Return the linestring at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.LineString} LineString.\n * @api\n */\n_ol_geom_MultiLineString_.prototype.getLineString = function(index) {\n  if (index < 0 || this.ends_.length <= index) {\n    return null;\n  }\n  var lineString = new _ol_geom_LineString_(null);\n  lineString.setFlatCoordinates(this.layout, this.flatCoordinates.slice(\n      index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]));\n  return lineString;\n};\n\n\n/**\n * Return the linestrings of this multilinestring.\n * @return {Array.<ol.geom.LineString>} LineStrings.\n * @api\n */\n_ol_geom_MultiLineString_.prototype.getLineStrings = function() {\n  var flatCoordinates = this.flatCoordinates;\n  var ends = this.ends_;\n  var layout = this.layout;\n  /** @type {Array.<ol.geom.LineString>} */\n  var lineStrings = [];\n  var offset = 0;\n  var i, ii;\n  for (i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    var lineString = new _ol_geom_LineString_(null);\n    lineString.setFlatCoordinates(layout, flatCoordinates.slice(offset, end));\n    lineStrings.push(lineString);\n    offset = end;\n  }\n  return lineStrings;\n};\n\n\n/**\n * @return {Array.<number>} Flat midpoints.\n */\n_ol_geom_MultiLineString_.prototype.getFlatMidpoints = function() {\n  var midpoints = [];\n  var flatCoordinates = this.flatCoordinates;\n  var offset = 0;\n  var ends = this.ends_;\n  var stride = this.stride;\n  var i, ii;\n  for (i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    var midpoint = _ol_geom_flat_interpolate_.lineString(\n        flatCoordinates, offset, end, stride, 0.5);\n    _ol_array_.extend(midpoints, midpoint);\n    offset = end;\n  }\n  return midpoints;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_geom_MultiLineString_.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  var simplifiedFlatCoordinates = [];\n  var simplifiedEnds = [];\n  simplifiedFlatCoordinates.length = _ol_geom_flat_simplify_.douglasPeuckers(\n      this.flatCoordinates, 0, this.ends_, this.stride, squaredTolerance,\n      simplifiedFlatCoordinates, 0, simplifiedEnds);\n  var simplifiedMultiLineString = new _ol_geom_MultiLineString_(null);\n  simplifiedMultiLineString.setFlatCoordinates(\n      _ol_geom_GeometryLayout_.XY, simplifiedFlatCoordinates, simplifiedEnds);\n  return simplifiedMultiLineString;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_geom_MultiLineString_.prototype.getType = function() {\n  return _ol_geom_GeometryType_.MULTI_LINE_STRING;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_geom_MultiLineString_.prototype.intersectsExtent = function(extent) {\n  return _ol_geom_flat_intersectsextent_.lineStrings(\n      this.flatCoordinates, 0, this.ends_, this.stride, extent);\n};\n\n\n/**\n * Set the coordinates of the multilinestring.\n * @param {Array.<Array.<ol.Coordinate>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\n_ol_geom_MultiLineString_.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(_ol_geom_GeometryLayout_.XY, null, this.ends_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    var ends = _ol_geom_flat_deflate_.coordinatess(\n        this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<number>} ends Ends.\n */\n_ol_geom_MultiLineString_.prototype.setFlatCoordinates = function(layout, flatCoordinates, ends) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.ends_ = ends;\n  this.changed();\n};\n\n\n/**\n * @param {Array.<ol.geom.LineString>} lineStrings LineStrings.\n */\n_ol_geom_MultiLineString_.prototype.setLineStrings = function(lineStrings) {\n  var layout = this.getLayout();\n  var flatCoordinates = [];\n  var ends = [];\n  var i, ii;\n  for (i = 0, ii = lineStrings.length; i < ii; ++i) {\n    var lineString = lineStrings[i];\n    if (i === 0) {\n      layout = lineString.getLayout();\n    }\n    _ol_array_.extend(flatCoordinates, lineString.getFlatCoordinates());\n    ends.push(flatCoordinates.length);\n  }\n  this.setFlatCoordinates(layout, flatCoordinates, ends);\n};\nexport default _ol_geom_MultiLineString_;\n","import _ol_array_ from './array.js';\nvar _ol_xml_ = {};\n\n\n/**\n * This document should be used when creating nodes for XML serializations. This\n * document is also used by {@link ol.xml.createElementNS} and\n * {@link ol.xml.setAttributeNS}\n * @const\n * @type {Document}\n */\n_ol_xml_.DOCUMENT = document.implementation.createDocument('', '', null);\n\n\n/**\n * @param {string} namespaceURI Namespace URI.\n * @param {string} qualifiedName Qualified name.\n * @return {Node} Node.\n */\n_ol_xml_.createElementNS = function(namespaceURI, qualifiedName) {\n  return _ol_xml_.DOCUMENT.createElementNS(namespaceURI, qualifiedName);\n};\n\n\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @return {string} All text content.\n * @api\n */\n_ol_xml_.getAllTextContent = function(node, normalizeWhitespace) {\n  return _ol_xml_.getAllTextContent_(node, normalizeWhitespace, []).join('');\n};\n\n\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @param {Array.<string>} accumulator Accumulator.\n * @private\n * @return {Array.<string>} Accumulator.\n */\n_ol_xml_.getAllTextContent_ = function(node, normalizeWhitespace, accumulator) {\n  if (node.nodeType == Node.CDATA_SECTION_NODE ||\n      node.nodeType == Node.TEXT_NODE) {\n    if (normalizeWhitespace) {\n      accumulator.push(String(node.nodeValue).replace(/(\\r\\n|\\r|\\n)/g, ''));\n    } else {\n      accumulator.push(node.nodeValue);\n    }\n  } else {\n    var n;\n    for (n = node.firstChild; n; n = n.nextSibling) {\n      _ol_xml_.getAllTextContent_(n, normalizeWhitespace, accumulator);\n    }\n  }\n  return accumulator;\n};\n\n\n/**\n * @param {?} value Value.\n * @return {boolean} Is document.\n */\n_ol_xml_.isDocument = function(value) {\n  return value instanceof Document;\n};\n\n\n/**\n * @param {?} value Value.\n * @return {boolean} Is node.\n */\n_ol_xml_.isNode = function(value) {\n  return value instanceof Node;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {?string} namespaceURI Namespace URI.\n * @param {string} name Attribute name.\n * @return {string} Value\n */\n_ol_xml_.getAttributeNS = function(node, namespaceURI, name) {\n  return node.getAttributeNS(namespaceURI, name) || '';\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {?string} namespaceURI Namespace URI.\n * @param {string} name Attribute name.\n * @param {string|number} value Value.\n */\n_ol_xml_.setAttributeNS = function(node, namespaceURI, name, value) {\n  node.setAttributeNS(namespaceURI, name, value);\n};\n\n\n/**\n * Parse an XML string to an XML Document.\n * @param {string} xml XML.\n * @return {Document} Document.\n * @api\n */\n_ol_xml_.parse = function(xml) {\n  return new DOMParser().parseFromString(xml, 'application/xml');\n};\n\n\n/**\n * Make an array extender function for extending the array at the top of the\n * object stack.\n * @param {function(this: T, Node, Array.<*>): (Array.<*>|undefined)}\n *     valueReader Value reader.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {ol.XmlParser} Parser.\n * @template T\n */\n_ol_xml_.makeArrayExtender = function(valueReader, opt_this) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array.<*>} objectStack Object stack.\n     */\n    function(node, objectStack) {\n      var value = valueReader.call(opt_this, node, objectStack);\n      if (value !== undefined) {\n        var array = /** @type {Array.<*>} */\n              (objectStack[objectStack.length - 1]);\n        _ol_array_.extend(array, value);\n      }\n    }\n  );\n};\n\n\n/**\n * Make an array pusher function for pushing to the array at the top of the\n * object stack.\n * @param {function(this: T, Node, Array.<*>): *} valueReader Value reader.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {ol.XmlParser} Parser.\n * @template T\n */\n_ol_xml_.makeArrayPusher = function(valueReader, opt_this) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array.<*>} objectStack Object stack.\n     */\n    function(node, objectStack) {\n      var value = valueReader.call(opt_this !== undefined ? opt_this : this,\n          node, objectStack);\n      if (value !== undefined) {\n        var array = objectStack[objectStack.length - 1];\n        array.push(value);\n      }\n    });\n};\n\n\n/**\n * Make an object stack replacer function for replacing the object at the\n * top of the stack.\n * @param {function(this: T, Node, Array.<*>): *} valueReader Value reader.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {ol.XmlParser} Parser.\n * @template T\n */\n_ol_xml_.makeReplacer = function(valueReader, opt_this) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array.<*>} objectStack Object stack.\n     */\n    function(node, objectStack) {\n      var value = valueReader.call(opt_this !== undefined ? opt_this : this,\n          node, objectStack);\n      if (value !== undefined) {\n        objectStack[objectStack.length - 1] = value;\n      }\n    });\n};\n\n\n/**\n * Make an object property pusher function for adding a property to the\n * object at the top of the stack.\n * @param {function(this: T, Node, Array.<*>): *} valueReader Value reader.\n * @param {string=} opt_property Property.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {ol.XmlParser} Parser.\n * @template T\n */\n_ol_xml_.makeObjectPropertyPusher = function(valueReader, opt_property, opt_this) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array.<*>} objectStack Object stack.\n     */\n    function(node, objectStack) {\n      var value = valueReader.call(opt_this !== undefined ? opt_this : this,\n          node, objectStack);\n      if (value !== undefined) {\n        var object = /** @type {Object} */\n              (objectStack[objectStack.length - 1]);\n        var property = opt_property !== undefined ?\n          opt_property : node.localName;\n        var array;\n        if (property in object) {\n          array = object[property];\n        } else {\n          array = object[property] = [];\n        }\n        array.push(value);\n      }\n    });\n};\n\n\n/**\n * Make an object property setter function.\n * @param {function(this: T, Node, Array.<*>): *} valueReader Value reader.\n * @param {string=} opt_property Property.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {ol.XmlParser} Parser.\n * @template T\n */\n_ol_xml_.makeObjectPropertySetter = function(valueReader, opt_property, opt_this) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array.<*>} objectStack Object stack.\n     */\n    function(node, objectStack) {\n      var value = valueReader.call(opt_this !== undefined ? opt_this : this,\n          node, objectStack);\n      if (value !== undefined) {\n        var object = /** @type {Object} */\n              (objectStack[objectStack.length - 1]);\n        var property = opt_property !== undefined ?\n          opt_property : node.localName;\n        object[property] = value;\n      }\n    });\n};\n\n\n/**\n * Create a serializer that appends nodes written by its `nodeWriter` to its\n * designated parent. The parent is the `node` of the\n * {@link ol.XmlNodeStackItem} at the top of the `objectStack`.\n * @param {function(this: T, Node, V, Array.<*>)}\n *     nodeWriter Node writer.\n * @param {T=} opt_this The object to use as `this` in `nodeWriter`.\n * @return {ol.XmlSerializer} Serializer.\n * @template T, V\n */\n_ol_xml_.makeChildAppender = function(nodeWriter, opt_this) {\n  return function(node, value, objectStack) {\n    nodeWriter.call(opt_this !== undefined ? opt_this : this,\n        node, value, objectStack);\n    var parent = objectStack[objectStack.length - 1];\n    var parentNode = parent.node;\n    parentNode.appendChild(node);\n  };\n};\n\n\n/**\n * Create a serializer that calls the provided `nodeWriter` from\n * {@link ol.xml.serialize}. This can be used by the parent writer to have the\n * 'nodeWriter' called with an array of values when the `nodeWriter` was\n * designed to serialize a single item. An example would be a LineString\n * geometry writer, which could be reused for writing MultiLineString\n * geometries.\n * @param {function(this: T, Node, V, Array.<*>)}\n *     nodeWriter Node writer.\n * @param {T=} opt_this The object to use as `this` in `nodeWriter`.\n * @return {ol.XmlSerializer} Serializer.\n * @template T, V\n */\n_ol_xml_.makeArraySerializer = function(nodeWriter, opt_this) {\n  var serializersNS, nodeFactory;\n  return function(node, value, objectStack) {\n    if (serializersNS === undefined) {\n      serializersNS = {};\n      var serializers = {};\n      serializers[node.localName] = nodeWriter;\n      serializersNS[node.namespaceURI] = serializers;\n      nodeFactory = _ol_xml_.makeSimpleNodeFactory(node.localName);\n    }\n    _ol_xml_.serialize(serializersNS, nodeFactory, value, objectStack);\n  };\n};\n\n\n/**\n * Create a node factory which can use the `opt_keys` passed to\n * {@link ol.xml.serialize} or {@link ol.xml.pushSerializeAndPop} as node names,\n * or a fixed node name. The namespace of the created nodes can either be fixed,\n * or the parent namespace will be used.\n * @param {string=} opt_nodeName Fixed node name which will be used for all\n *     created nodes. If not provided, the 3rd argument to the resulting node\n *     factory needs to be provided and will be the nodeName.\n * @param {string=} opt_namespaceURI Fixed namespace URI which will be used for\n *     all created nodes. If not provided, the namespace of the parent node will\n *     be used.\n * @return {function(*, Array.<*>, string=): (Node|undefined)} Node factory.\n */\n_ol_xml_.makeSimpleNodeFactory = function(opt_nodeName, opt_namespaceURI) {\n  var fixedNodeName = opt_nodeName;\n  return (\n    /**\n     * @param {*} value Value.\n     * @param {Array.<*>} objectStack Object stack.\n     * @param {string=} opt_nodeName Node name.\n     * @return {Node} Node.\n     */\n    function(value, objectStack, opt_nodeName) {\n      var context = objectStack[objectStack.length - 1];\n      var node = context.node;\n      var nodeName = fixedNodeName;\n      if (nodeName === undefined) {\n        nodeName = opt_nodeName;\n      }\n      var namespaceURI = opt_namespaceURI;\n      if (opt_namespaceURI === undefined) {\n        namespaceURI = node.namespaceURI;\n      }\n      return _ol_xml_.createElementNS(namespaceURI, /** @type {string} */ (nodeName));\n    }\n  );\n};\n\n\n/**\n * A node factory that creates a node using the parent's `namespaceURI` and the\n * `nodeName` passed by {@link ol.xml.serialize} or\n * {@link ol.xml.pushSerializeAndPop} to the node factory.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n */\n_ol_xml_.OBJECT_PROPERTY_NODE_FACTORY = _ol_xml_.makeSimpleNodeFactory();\n\n\n/**\n * Create an array of `values` to be used with {@link ol.xml.serialize} or\n * {@link ol.xml.pushSerializeAndPop}, where `orderedKeys` has to be provided as\n * `opt_key` argument.\n * @param {Object.<string, V>} object Key-value pairs for the sequence. Keys can\n *     be a subset of the `orderedKeys`.\n * @param {Array.<string>} orderedKeys Keys in the order of the sequence.\n * @return {Array.<V>} Values in the order of the sequence. The resulting array\n *     has the same length as the `orderedKeys` array. Values that are not\n *     present in `object` will be `undefined` in the resulting array.\n * @template V\n */\n_ol_xml_.makeSequence = function(object, orderedKeys) {\n  var length = orderedKeys.length;\n  var sequence = new Array(length);\n  for (var i = 0; i < length; ++i) {\n    sequence[i] = object[orderedKeys[i]];\n  }\n  return sequence;\n};\n\n\n/**\n * Create a namespaced structure, using the same values for each namespace.\n * This can be used as a starting point for versioned parsers, when only a few\n * values are version specific.\n * @param {Array.<string>} namespaceURIs Namespace URIs.\n * @param {T} structure Structure.\n * @param {Object.<string, T>=} opt_structureNS Namespaced structure to add to.\n * @return {Object.<string, T>} Namespaced structure.\n * @template T\n */\n_ol_xml_.makeStructureNS = function(namespaceURIs, structure, opt_structureNS) {\n  /**\n   * @type {Object.<string, *>}\n   */\n  var structureNS = opt_structureNS !== undefined ? opt_structureNS : {};\n  var i, ii;\n  for (i = 0, ii = namespaceURIs.length; i < ii; ++i) {\n    structureNS[namespaceURIs[i]] = structure;\n  }\n  return structureNS;\n};\n\n\n/**\n * Parse a node using the parsers and object stack.\n * @param {Object.<string, Object.<string, ol.XmlParser>>} parsersNS\n *     Parsers by namespace.\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @param {*=} opt_this The object to use as `this`.\n */\n_ol_xml_.parseNode = function(parsersNS, node, objectStack, opt_this) {\n  var n;\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    var parsers = parsersNS[n.namespaceURI];\n    if (parsers !== undefined) {\n      var parser = parsers[n.localName];\n      if (parser !== undefined) {\n        parser.call(opt_this, n, objectStack);\n      }\n    }\n  }\n};\n\n\n/**\n * Push an object on top of the stack, parse and return the popped object.\n * @param {T} object Object.\n * @param {Object.<string, Object.<string, ol.XmlParser>>} parsersNS\n *     Parsers by namespace.\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @param {*=} opt_this The object to use as `this`.\n * @return {T} Object.\n * @template T\n */\n_ol_xml_.pushParseAndPop = function(\n    object, parsersNS, node, objectStack, opt_this) {\n  objectStack.push(object);\n  _ol_xml_.parseNode(parsersNS, node, objectStack, opt_this);\n  return objectStack.pop();\n};\n\n\n/**\n * Walk through an array of `values` and call a serializer for each value.\n * @param {Object.<string, Object.<string, ol.XmlSerializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array.<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array.<*>} values Values to serialize. An example would be an array\n *     of {@link ol.Feature} instances.\n * @param {Array.<*>} objectStack Node stack.\n * @param {Array.<string>=} opt_keys Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `opt_keys` has\n *     to match the length of `values`. For serializing a sequence, `opt_keys`\n *     determines the order of the sequence.\n * @param {T=} opt_this The object to use as `this` for the node factory and\n *     serializers.\n * @template T\n */\n_ol_xml_.serialize = function(\n    serializersNS, nodeFactory, values, objectStack, opt_keys, opt_this) {\n  var length = (opt_keys !== undefined ? opt_keys : values).length;\n  var value, node;\n  for (var i = 0; i < length; ++i) {\n    value = values[i];\n    if (value !== undefined) {\n      node = nodeFactory.call(opt_this, value, objectStack,\n          opt_keys !== undefined ? opt_keys[i] : undefined);\n      if (node !== undefined) {\n        serializersNS[node.namespaceURI][node.localName]\n            .call(opt_this, node, value, objectStack);\n      }\n    }\n  }\n};\n\n\n/**\n * @param {O} object Object.\n * @param {Object.<string, Object.<string, ol.XmlSerializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array.<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array.<*>} values Values to serialize. An example would be an array\n *     of {@link ol.Feature} instances.\n * @param {Array.<*>} objectStack Node stack.\n * @param {Array.<string>=} opt_keys Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `opt_keys` has\n *     to match the length of `values`. For serializing a sequence, `opt_keys`\n *     determines the order of the sequence.\n * @param {T=} opt_this The object to use as `this` for the node factory and\n *     serializers.\n * @return {O|undefined} Object.\n * @template O, T\n */\n_ol_xml_.pushSerializeAndPop = function(object,\n    serializersNS, nodeFactory, values, objectStack, opt_keys, opt_this) {\n  objectStack.push(object);\n  _ol_xml_.serialize(\n      serializersNS, nodeFactory, values, objectStack, opt_keys, opt_this);\n  return objectStack.pop();\n};\nexport default _ol_xml_;\n","import _ol_extent_ from '../../extent.js';\nvar _ol_geom_flat_center_ = {};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array.<number>} Flat centers.\n */\n_ol_geom_flat_center_.linearRingss = function(flatCoordinates, offset, endss, stride) {\n  var flatCenters = [];\n  var i, ii;\n  var extent = _ol_extent_.createEmpty();\n  for (i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    extent = _ol_extent_.createOrUpdateFromFlatCoordinates(\n        flatCoordinates, offset, ends[0], stride);\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n};\nexport default _ol_geom_flat_center_;\n","import _ol_ from '../index.js';\nimport _ol_array_ from '../array.js';\nimport _ol_extent_ from '../extent.js';\nimport _ol_geom_GeometryLayout_ from '../geom/geometrylayout.js';\nimport _ol_geom_GeometryType_ from '../geom/geometrytype.js';\nimport _ol_geom_MultiPoint_ from '../geom/multipoint.js';\nimport _ol_geom_Polygon_ from '../geom/polygon.js';\nimport _ol_geom_SimpleGeometry_ from '../geom/simplegeometry.js';\nimport _ol_geom_flat_area_ from '../geom/flat/area.js';\nimport _ol_geom_flat_center_ from '../geom/flat/center.js';\nimport _ol_geom_flat_closest_ from '../geom/flat/closest.js';\nimport _ol_geom_flat_contains_ from '../geom/flat/contains.js';\nimport _ol_geom_flat_deflate_ from '../geom/flat/deflate.js';\nimport _ol_geom_flat_inflate_ from '../geom/flat/inflate.js';\nimport _ol_geom_flat_interiorpoint_ from '../geom/flat/interiorpoint.js';\nimport _ol_geom_flat_intersectsextent_ from '../geom/flat/intersectsextent.js';\nimport _ol_geom_flat_orient_ from '../geom/flat/orient.js';\nimport _ol_geom_flat_simplify_ from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @constructor\n * @extends {ol.geom.SimpleGeometry}\n * @param {Array.<Array.<Array.<ol.Coordinate>>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @api\n */\nvar _ol_geom_MultiPolygon_ = function(coordinates, opt_layout) {\n\n  _ol_geom_SimpleGeometry_.call(this);\n\n  /**\n   * @type {Array.<Array.<number>>}\n   * @private\n   */\n  this.endss_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.flatInteriorPointsRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.flatInteriorPoints_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.orientedRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.orientedFlatCoordinates_ = null;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\n_ol_.inherits(_ol_geom_MultiPolygon_, _ol_geom_SimpleGeometry_);\n\n\n/**\n * Append the passed polygon to this multipolygon.\n * @param {ol.geom.Polygon} polygon Polygon.\n * @api\n */\n_ol_geom_MultiPolygon_.prototype.appendPolygon = function(polygon) {\n  /** @type {Array.<number>} */\n  var ends;\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = polygon.getFlatCoordinates().slice();\n    ends = polygon.getEnds().slice();\n    this.endss_.push();\n  } else {\n    var offset = this.flatCoordinates.length;\n    _ol_array_.extend(this.flatCoordinates, polygon.getFlatCoordinates());\n    ends = polygon.getEnds().slice();\n    var i, ii;\n    for (i = 0, ii = ends.length; i < ii; ++i) {\n      ends[i] += offset;\n    }\n  }\n  this.endss_.push(ends);\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!ol.geom.MultiPolygon} Clone.\n * @override\n * @api\n */\n_ol_geom_MultiPolygon_.prototype.clone = function() {\n  var multiPolygon = new _ol_geom_MultiPolygon_(null);\n\n  var len = this.endss_.length;\n  var newEndss = new Array(len);\n  for (var i = 0; i < len; ++i) {\n    newEndss[i] = this.endss_[i].slice();\n  }\n\n  multiPolygon.setFlatCoordinates(\n      this.layout, this.flatCoordinates.slice(), newEndss);\n  return multiPolygon;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_geom_MultiPolygon_.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance <\n      _ol_extent_.closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(_ol_geom_flat_closest_.getssMaxSquaredDelta(\n        this.flatCoordinates, 0, this.endss_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return _ol_geom_flat_closest_.getssClosestPoint(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n      this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_geom_MultiPolygon_.prototype.containsXY = function(x, y) {\n  return _ol_geom_flat_contains_.linearRingssContainsXY(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, x, y);\n};\n\n\n/**\n * Return the area of the multipolygon on projected plane.\n * @return {number} Area (on projected plane).\n * @api\n */\n_ol_geom_MultiPolygon_.prototype.getArea = function() {\n  return _ol_geom_flat_area_.linearRingss(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride);\n};\n\n\n/**\n * Get the coordinate array for this geometry.  This array has the structure\n * of a GeoJSON coordinate array for multi-polygons.\n *\n * @param {boolean=} opt_right Orient coordinates according to the right-hand\n *     rule (counter-clockwise for exterior and clockwise for interior rings).\n *     If `false`, coordinates will be oriented according to the left-hand rule\n *     (clockwise for exterior and counter-clockwise for interior rings).\n *     By default, coordinate orientation will depend on how the geometry was\n *     constructed.\n * @return {Array.<Array.<Array.<ol.Coordinate>>>} Coordinates.\n * @override\n * @api\n */\n_ol_geom_MultiPolygon_.prototype.getCoordinates = function(opt_right) {\n  var flatCoordinates;\n  if (opt_right !== undefined) {\n    flatCoordinates = this.getOrientedFlatCoordinates().slice();\n    _ol_geom_flat_orient_.orientLinearRingss(\n        flatCoordinates, 0, this.endss_, this.stride, opt_right);\n  } else {\n    flatCoordinates = this.flatCoordinates;\n  }\n\n  return _ol_geom_flat_inflate_.coordinatesss(\n      flatCoordinates, 0, this.endss_, this.stride);\n};\n\n\n/**\n * @return {Array.<Array.<number>>} Endss.\n */\n_ol_geom_MultiPolygon_.prototype.getEndss = function() {\n  return this.endss_;\n};\n\n\n/**\n * @return {Array.<number>} Flat interior points.\n */\n_ol_geom_MultiPolygon_.prototype.getFlatInteriorPoints = function() {\n  if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n    var flatCenters = _ol_geom_flat_center_.linearRingss(\n        this.flatCoordinates, 0, this.endss_, this.stride);\n    this.flatInteriorPoints_ = _ol_geom_flat_interiorpoint_.linearRingss(\n        this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n        flatCenters);\n    this.flatInteriorPointsRevision_ = this.getRevision();\n  }\n  return this.flatInteriorPoints_;\n};\n\n\n/**\n * Return the interior points as {@link ol.geom.MultiPoint multipoint}.\n * @return {ol.geom.MultiPoint} Interior points as XYM coordinates, where M is\n * the length of the horizontal intersection that the point belongs to.\n * @api\n */\n_ol_geom_MultiPolygon_.prototype.getInteriorPoints = function() {\n  var interiorPoints = new _ol_geom_MultiPoint_(null);\n  interiorPoints.setFlatCoordinates(_ol_geom_GeometryLayout_.XYM,\n      this.getFlatInteriorPoints().slice());\n  return interiorPoints;\n};\n\n\n/**\n * @return {Array.<number>} Oriented flat coordinates.\n */\n_ol_geom_MultiPolygon_.prototype.getOrientedFlatCoordinates = function() {\n  if (this.orientedRevision_ != this.getRevision()) {\n    var flatCoordinates = this.flatCoordinates;\n    if (_ol_geom_flat_orient_.linearRingssAreOriented(\n        flatCoordinates, 0, this.endss_, this.stride)) {\n      this.orientedFlatCoordinates_ = flatCoordinates;\n    } else {\n      this.orientedFlatCoordinates_ = flatCoordinates.slice();\n      this.orientedFlatCoordinates_.length =\n          _ol_geom_flat_orient_.orientLinearRingss(\n              this.orientedFlatCoordinates_, 0, this.endss_, this.stride);\n    }\n    this.orientedRevision_ = this.getRevision();\n  }\n  return this.orientedFlatCoordinates_;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_geom_MultiPolygon_.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  var simplifiedFlatCoordinates = [];\n  var simplifiedEndss = [];\n  simplifiedFlatCoordinates.length = _ol_geom_flat_simplify_.quantizess(\n      this.flatCoordinates, 0, this.endss_, this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates, 0, simplifiedEndss);\n  var simplifiedMultiPolygon = new _ol_geom_MultiPolygon_(null);\n  simplifiedMultiPolygon.setFlatCoordinates(\n      _ol_geom_GeometryLayout_.XY, simplifiedFlatCoordinates, simplifiedEndss);\n  return simplifiedMultiPolygon;\n};\n\n\n/**\n * Return the polygon at the specified index.\n * @param {number} index Index.\n * @return {ol.geom.Polygon} Polygon.\n * @api\n */\n_ol_geom_MultiPolygon_.prototype.getPolygon = function(index) {\n  if (index < 0 || this.endss_.length <= index) {\n    return null;\n  }\n  var offset;\n  if (index === 0) {\n    offset = 0;\n  } else {\n    var prevEnds = this.endss_[index - 1];\n    offset = prevEnds[prevEnds.length - 1];\n  }\n  var ends = this.endss_[index].slice();\n  var end = ends[ends.length - 1];\n  if (offset !== 0) {\n    var i, ii;\n    for (i = 0, ii = ends.length; i < ii; ++i) {\n      ends[i] -= offset;\n    }\n  }\n  var polygon = new _ol_geom_Polygon_(null);\n  polygon.setFlatCoordinates(\n      this.layout, this.flatCoordinates.slice(offset, end), ends);\n  return polygon;\n};\n\n\n/**\n * Return the polygons of this multipolygon.\n * @return {Array.<ol.geom.Polygon>} Polygons.\n * @api\n */\n_ol_geom_MultiPolygon_.prototype.getPolygons = function() {\n  var layout = this.layout;\n  var flatCoordinates = this.flatCoordinates;\n  var endss = this.endss_;\n  var polygons = [];\n  var offset = 0;\n  var i, ii, j, jj;\n  for (i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i].slice();\n    var end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (j = 0, jj = ends.length; j < jj; ++j) {\n        ends[j] -= offset;\n      }\n    }\n    var polygon = new _ol_geom_Polygon_(null);\n    polygon.setFlatCoordinates(\n        layout, flatCoordinates.slice(offset, end), ends);\n    polygons.push(polygon);\n    offset = end;\n  }\n  return polygons;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_geom_MultiPolygon_.prototype.getType = function() {\n  return _ol_geom_GeometryType_.MULTI_POLYGON;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_geom_MultiPolygon_.prototype.intersectsExtent = function(extent) {\n  return _ol_geom_flat_intersectsextent_.linearRingss(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, extent);\n};\n\n\n/**\n * Set the coordinates of the multipolygon.\n * @param {Array.<Array.<Array.<ol.Coordinate>>>} coordinates Coordinates.\n * @param {ol.geom.GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\n_ol_geom_MultiPolygon_.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(_ol_geom_GeometryLayout_.XY, null, this.endss_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    var endss = _ol_geom_flat_deflate_.coordinatesss(\n        this.flatCoordinates, 0, coordinates, this.stride, this.endss_);\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      var lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length = lastEnds.length === 0 ?\n        0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n};\n\n\n/**\n * @param {ol.geom.GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<Array.<number>>} endss Endss.\n */\n_ol_geom_MultiPolygon_.prototype.setFlatCoordinates = function(layout, flatCoordinates, endss) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.endss_ = endss;\n  this.changed();\n};\n\n\n/**\n * @param {Array.<ol.geom.Polygon>} polygons Polygons.\n */\n_ol_geom_MultiPolygon_.prototype.setPolygons = function(polygons) {\n  var layout = this.getLayout();\n  var flatCoordinates = [];\n  var endss = [];\n  var i, ii, ends;\n  for (i = 0, ii = polygons.length; i < ii; ++i) {\n    var polygon = polygons[i];\n    if (i === 0) {\n      layout = polygon.getLayout();\n    }\n    var offset = flatCoordinates.length;\n    ends = polygon.getEnds();\n    var j, jj;\n    for (j = 0, jj = ends.length; j < jj; ++j) {\n      ends[j] += offset;\n    }\n    _ol_array_.extend(flatCoordinates, polygon.getFlatCoordinates());\n    endss.push(ends);\n  }\n  this.setFlatCoordinates(layout, flatCoordinates, endss);\n};\nexport default _ol_geom_MultiPolygon_;\n","import _ol_ from '../index.js';\nimport _ol_LayerType_ from '../layertype.js';\nimport _ol_layer_Layer_ from '../layer/layer.js';\nimport _ol_layer_VectorRenderType_ from '../layer/vectorrendertype.js';\nimport _ol_obj_ from '../obj.js';\nimport _ol_style_Style_ from '../style/style.js';\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link ol.Object}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @constructor\n * @extends {ol.layer.Layer}\n * @fires ol.render.Event\n * @param {olx.layer.VectorOptions=} opt_options Options.\n * @api\n */\nvar _ol_layer_Vector_ = function(opt_options) {\n  var options = opt_options ?\n    opt_options : /** @type {olx.layer.VectorOptions} */ ({});\n\n  var baseOptions = _ol_obj_.assign({}, options);\n\n  delete baseOptions.style;\n  delete baseOptions.renderBuffer;\n  delete baseOptions.updateWhileAnimating;\n  delete baseOptions.updateWhileInteracting;\n  _ol_layer_Layer_.call(this, /** @type {olx.layer.LayerOptions} */ (baseOptions));\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.declutter_ = options.declutter !== undefined ? options.declutter : false;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.renderBuffer_ = options.renderBuffer !== undefined ?\n    options.renderBuffer : 100;\n\n  /**\n   * User provided style.\n   * @type {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction}\n   * @private\n   */\n  this.style_ = null;\n\n  /**\n   * Style function for use within the library.\n   * @type {ol.StyleFunction|undefined}\n   * @private\n   */\n  this.styleFunction_ = undefined;\n\n  this.setStyle(options.style);\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.updateWhileAnimating_ = options.updateWhileAnimating !== undefined ?\n    options.updateWhileAnimating : false;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.updateWhileInteracting_ = options.updateWhileInteracting !== undefined ?\n    options.updateWhileInteracting : false;\n\n  /**\n   * @private\n   * @type {ol.layer.VectorTileRenderType|string}\n   */\n  this.renderMode_ = options.renderMode || _ol_layer_VectorRenderType_.VECTOR;\n\n  /**\n   * The layer type.\n   * @protected\n   * @type {ol.LayerType}\n   */\n  this.type = _ol_LayerType_.VECTOR;\n\n};\n\n_ol_.inherits(_ol_layer_Vector_, _ol_layer_Layer_);\n\n\n/**\n * @return {boolean} Declutter.\n */\n_ol_layer_Vector_.prototype.getDeclutter = function() {\n  return this.declutter_;\n};\n\n\n/**\n * @param {boolean} declutter Declutter.\n */\n_ol_layer_Vector_.prototype.setDeclutter = function(declutter) {\n  this.declutter_ = declutter;\n};\n\n\n/**\n * @return {number|undefined} Render buffer.\n */\n_ol_layer_Vector_.prototype.getRenderBuffer = function() {\n  return this.renderBuffer_;\n};\n\n\n/**\n * @return {function(ol.Feature, ol.Feature): number|null|undefined} Render\n *     order.\n */\n_ol_layer_Vector_.prototype.getRenderOrder = function() {\n  return (\n  /** @type {ol.RenderOrderFunction|null|undefined} */ this.get(_ol_layer_Vector_.Property_.RENDER_ORDER)\n  );\n};\n\n\n/**\n * Return the associated {@link ol.source.Vector vectorsource} of the layer.\n * @function\n * @return {ol.source.Vector} Source.\n * @api\n */\n_ol_layer_Vector_.prototype.getSource;\n\n\n/**\n * Get the style for features.  This returns whatever was passed to the `style`\n * option at construction or to the `setStyle` method.\n * @return {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction}\n *     Layer style.\n * @api\n */\n_ol_layer_Vector_.prototype.getStyle = function() {\n  return this.style_;\n};\n\n\n/**\n * Get the style function.\n * @return {ol.StyleFunction|undefined} Layer style function.\n * @api\n */\n_ol_layer_Vector_.prototype.getStyleFunction = function() {\n  return this.styleFunction_;\n};\n\n\n/**\n * @return {boolean} Whether the rendered layer should be updated while\n *     animating.\n */\n_ol_layer_Vector_.prototype.getUpdateWhileAnimating = function() {\n  return this.updateWhileAnimating_;\n};\n\n\n/**\n * @return {boolean} Whether the rendered layer should be updated while\n *     interacting.\n */\n_ol_layer_Vector_.prototype.getUpdateWhileInteracting = function() {\n  return this.updateWhileInteracting_;\n};\n\n\n/**\n * @param {ol.RenderOrderFunction|null|undefined} renderOrder\n *     Render order.\n */\n_ol_layer_Vector_.prototype.setRenderOrder = function(renderOrder) {\n  this.set(_ol_layer_Vector_.Property_.RENDER_ORDER, renderOrder);\n};\n\n\n/**\n * Set the style for features.  This can be a single style object, an array\n * of styles, or a function that takes a feature and resolution and returns\n * an array of styles. If it is `undefined` the default style is used. If\n * it is `null` the layer has no style (a `null` style), so only features\n * that have their own styles will be rendered in the layer. See\n * {@link ol.style} for information on the default style.\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction|null|undefined}\n *     style Layer style.\n * @api\n */\n_ol_layer_Vector_.prototype.setStyle = function(style) {\n  this.style_ = style !== undefined ? style : _ol_style_Style_.defaultFunction;\n  this.styleFunction_ = style === null ?\n    undefined : _ol_style_Style_.createFunction(this.style_);\n  this.changed();\n};\n\n\n/**\n * @return {ol.layer.VectorRenderType|string} The render mode.\n */\n_ol_layer_Vector_.prototype.getRenderMode = function() {\n  return this.renderMode_;\n};\n\n\n/**\n * @enum {string}\n * @private\n */\n_ol_layer_Vector_.Property_ = {\n  RENDER_ORDER: 'renderOrder'\n};\nexport default _ol_layer_Vector_;\n"],"sourceRoot":""}