{"version":3,"sources":["webpack:///./node_modules/ol/source/wmtsrequestencoding.js","webpack:///./node_modules/ol/source/wmts.js","webpack:///./src/components/geoserver/WMTS.vue","webpack:///src/components/geoserver/WMTS.vue","webpack:///./src/components/geoserver/WMTS.vue?ca7c","webpack:///./src/components/geoserver/WMTS.vue?36aa","webpack:///./node_modules/ol/tilegrid/wmts.js","webpack:///./node_modules/ol/uri.js","webpack:///./node_modules/core-js/modules/es.array.slice.js"],"names":["_ol_source_WMTSRequestEncoding_","KVP","REST","_ol_source_WMTS_","options","this","version_","undefined","version","format_","format","dimensions_","dimensions","layer_","layer","matrixSet_","matrixSet","style_","style","urls","url","expandUrl","requestEncoding_","requestEncoding","tileGrid","context","assign","createFromWMTSTemplate_","template","appendParams","replace","m","p","toLowerCase","tileCoord","pixelRatio","projection","localContext","getMatrixId","tileUrlFunction","length","createFromTileUrlFunctions","map","nullTileUrlFunction","call","attributions","cacheSize","crossOrigin","logo","reprojectionErrorThreshold","tileClass","tileLoadFunction","tilePixelRatio","wrapX","transition","setKey","getKeyForDimensions_","inherits","prototype","setUrls","key","join","setTileUrlFunction","fixedTileUrlFunction","bind","getDimensions","getFormat","getLayer","getMatrixSet","getRequestEncoding","getStyle","getVersion","i","res","updateDimensions","optionsFromCapabilities","wmtsCap","config","layers","l","find","elt","index","array","idx","matrixLimits","tileMatrixSets","findIndex","tileMatrixSet","el","supportedCRS","proj1","get","proj2","equivalent","forEach","value","matrixSets","matrixSetObj","code","projConfig","extent","wgs84BoundingBox","wgs84ProjectionExtent","getExtent","transformExtent","projectionExtent","containsExtent","createFromCapabilitiesMatrixSet","gets","ii","constraint","element","encodings","includes","push","render","_vm","_c","_self","attrs","path","_v","staticRenderFns","data","created","mounted","methods","initMap","units","axisOrientation","zoom","center","controls","attribution","target","getTdtLayer","view","getTileLayer","tileSize","origin","resolutions","matrixIds","source","component","_ol_tilegrid_WMTS_","matrixIds_","origins","tileSizes","sizes","z","getMatrixIds","opt_extent","opt_matrixLimits","supportedCRSPropName","matrixIdsPropName","identifierPropName","scaleDenominatorPropName","topLeftCornerPropName","tileWidthPropName","tileHeightPropName","metersPerUnit","getMetersPerUnit","switchOriginXY","getAxisOrientation","substr","sort","a","b","matrixAvailable","elt_ml","index_ml","array_ml","resolution","tileWidth","tileHeight","_ol_uri_","uri","params","keyParams","Object","keys","k","encodeURIComponent","qs","indexOf","$","isArray","isConstructor","isObject","toAbsoluteIndex","lengthOfArrayLike","toIndexedObject","createProperty","wellKnownSymbol","arrayMethodHasSpeciesSupport","nativeSlice","HAS_SPECIES_SUPPORT","SPECIES","$Array","Array","max","Math","proto","forced","slice","start","end","Constructor","result","n","O","fin","constructor"],"mappings":"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","file":"js/chunk-2d0329fc.47f84f52.js","sourcesContent":["/**\n * Request encoding. One of 'KVP', 'REST'.\n * @enum {string}\n */\nvar _ol_source_WMTSRequestEncoding_ = {\n  KVP: 'KVP',  // see spec §8\n  REST: 'REST' // see spec §10\n};\n\nexport default _ol_source_WMTSRequestEncoding_;\n","import _ol_ from '../index.js';\nimport _ol_TileUrlFunction_ from '../tileurlfunction.js';\nimport _ol_array_ from '../array.js';\nimport _ol_extent_ from '../extent.js';\nimport _ol_obj_ from '../obj.js';\nimport _ol_proj_ from '../proj.js';\nimport _ol_source_TileImage_ from '../source/tileimage.js';\nimport _ol_source_WMTSRequestEncoding_ from '../source/wmtsrequestencoding.js';\nimport _ol_tilegrid_WMTS_ from '../tilegrid/wmts.js';\nimport _ol_uri_ from '../uri.js';\n\n/**\n * @classdesc\n * Layer source for tile data from WMTS servers.\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.WMTSOptions} options WMTS options.\n * @api\n */\nvar _ol_source_WMTS_ = function(options) {\n\n  // TODO: add support for TileMatrixLimits\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.version_ = options.version !== undefined ? options.version : '1.0.0';\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.format_ = options.format !== undefined ? options.format : 'image/jpeg';\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.dimensions_ = options.dimensions !== undefined ? options.dimensions : {};\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.layer_ = options.layer;\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.matrixSet_ = options.matrixSet;\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.style_ = options.style;\n\n  var urls = options.urls;\n  if (urls === undefined && options.url !== undefined) {\n    urls = _ol_TileUrlFunction_.expandUrl(options.url);\n  }\n\n  // FIXME: should we guess this requestEncoding from options.url(s)\n  //        structure? that would mean KVP only if a template is not provided.\n\n  /**\n   * @private\n   * @type {ol.source.WMTSRequestEncoding}\n   */\n  this.requestEncoding_ = options.requestEncoding !== undefined ?\n    /** @type {ol.source.WMTSRequestEncoding} */ (options.requestEncoding) :\n    _ol_source_WMTSRequestEncoding_.KVP;\n\n  var requestEncoding = this.requestEncoding_;\n\n  // FIXME: should we create a default tileGrid?\n  // we could issue a getCapabilities xhr to retrieve missing configuration\n  var tileGrid = options.tileGrid;\n\n  // context property names are lower case to allow for a case insensitive\n  // replacement as some services use different naming conventions\n  var context = {\n    'layer': this.layer_,\n    'style': this.style_,\n    'tilematrixset': this.matrixSet_\n  };\n\n  if (requestEncoding == _ol_source_WMTSRequestEncoding_.KVP) {\n    _ol_obj_.assign(context, {\n      'Service': 'WMTS',\n      'Request': 'GetTile',\n      'Version': this.version_,\n      'Format': this.format_\n    });\n  }\n\n  var dimensions = this.dimensions_;\n\n  /**\n   * @param {string} template Template.\n   * @return {ol.TileUrlFunctionType} Tile URL function.\n   * @private\n   */\n  this.createFromWMTSTemplate_ = function(template) {\n\n    // TODO: we may want to create our own appendParams function so that params\n    // order conforms to wmts spec guidance, and so that we can avoid to escape\n    // special template params\n\n    template = (requestEncoding == _ol_source_WMTSRequestEncoding_.KVP) ?\n      _ol_uri_.appendParams(template, context) :\n      template.replace(/\\{(\\w+?)\\}/g, function(m, p) {\n        return (p.toLowerCase() in context) ? context[p.toLowerCase()] : m;\n      });\n\n    return (\n      /**\n       * @param {ol.TileCoord} tileCoord Tile coordinate.\n       * @param {number} pixelRatio Pixel ratio.\n       * @param {ol.proj.Projection} projection Projection.\n       * @return {string|undefined} Tile URL.\n       */\n      function(tileCoord, pixelRatio, projection) {\n        if (!tileCoord) {\n          return undefined;\n        } else {\n          var localContext = {\n            'TileMatrix': tileGrid.getMatrixId(tileCoord[0]),\n            'TileCol': tileCoord[1],\n            'TileRow': -tileCoord[2] - 1\n          };\n          _ol_obj_.assign(localContext, dimensions);\n          var url = template;\n          if (requestEncoding == _ol_source_WMTSRequestEncoding_.KVP) {\n            url = _ol_uri_.appendParams(url, localContext);\n          } else {\n            url = url.replace(/\\{(\\w+?)\\}/g, function(m, p) {\n              return localContext[p];\n            });\n          }\n          return url;\n        }\n      }\n    );\n  };\n\n  var tileUrlFunction = (urls && urls.length > 0) ?\n    _ol_TileUrlFunction_.createFromTileUrlFunctions(\n        urls.map(this.createFromWMTSTemplate_)) :\n    _ol_TileUrlFunction_.nullTileUrlFunction;\n\n  _ol_source_TileImage_.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    logo: options.logo,\n    projection: options.projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileClass: options.tileClass,\n    tileGrid: tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    tilePixelRatio: options.tilePixelRatio,\n    tileUrlFunction: tileUrlFunction,\n    urls: urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : false,\n    transition: options.transition\n  });\n\n  this.setKey(this.getKeyForDimensions_());\n\n};\n\n_ol_.inherits(_ol_source_WMTS_, _ol_source_TileImage_);\n\n/**\n * Set the URLs to use for requests.\n * URLs may contain OCG conform URL Template Variables: {TileMatrix}, {TileRow}, {TileCol}.\n * @override\n */\n_ol_source_WMTS_.prototype.setUrls = function(urls) {\n  this.urls = urls;\n  var key = urls.join('\\n');\n  this.setTileUrlFunction(this.fixedTileUrlFunction ?\n    this.fixedTileUrlFunction.bind(this) :\n    _ol_TileUrlFunction_.createFromTileUrlFunctions(urls.map(this.createFromWMTSTemplate_.bind(this))), key);\n};\n\n/**\n * Get the dimensions, i.e. those passed to the constructor through the\n * \"dimensions\" option, and possibly updated using the updateDimensions\n * method.\n * @return {!Object} Dimensions.\n * @api\n */\n_ol_source_WMTS_.prototype.getDimensions = function() {\n  return this.dimensions_;\n};\n\n\n/**\n * Return the image format of the WMTS source.\n * @return {string} Format.\n * @api\n */\n_ol_source_WMTS_.prototype.getFormat = function() {\n  return this.format_;\n};\n\n\n/**\n * Return the layer of the WMTS source.\n * @return {string} Layer.\n * @api\n */\n_ol_source_WMTS_.prototype.getLayer = function() {\n  return this.layer_;\n};\n\n\n/**\n * Return the matrix set of the WMTS source.\n * @return {string} MatrixSet.\n * @api\n */\n_ol_source_WMTS_.prototype.getMatrixSet = function() {\n  return this.matrixSet_;\n};\n\n\n/**\n * Return the request encoding, either \"KVP\" or \"REST\".\n * @return {ol.source.WMTSRequestEncoding} Request encoding.\n * @api\n */\n_ol_source_WMTS_.prototype.getRequestEncoding = function() {\n  return this.requestEncoding_;\n};\n\n\n/**\n * Return the style of the WMTS source.\n * @return {string} Style.\n * @api\n */\n_ol_source_WMTS_.prototype.getStyle = function() {\n  return this.style_;\n};\n\n\n/**\n * Return the version of the WMTS source.\n * @return {string} Version.\n * @api\n */\n_ol_source_WMTS_.prototype.getVersion = function() {\n  return this.version_;\n};\n\n\n/**\n * @private\n * @return {string} The key for the current dimensions.\n */\n_ol_source_WMTS_.prototype.getKeyForDimensions_ = function() {\n  var i = 0;\n  var res = [];\n  for (var key in this.dimensions_) {\n    res[i++] = key + '-' + this.dimensions_[key];\n  }\n  return res.join('/');\n};\n\n\n/**\n * Update the dimensions.\n * @param {Object} dimensions Dimensions.\n * @api\n */\n_ol_source_WMTS_.prototype.updateDimensions = function(dimensions) {\n  _ol_obj_.assign(this.dimensions_, dimensions);\n  this.setKey(this.getKeyForDimensions_());\n};\n\n\n/**\n * Generate source options from a capabilities object.\n * @param {Object} wmtsCap An object representing the capabilities document.\n * @param {Object} config Configuration properties for the layer.  Defaults for\n *                  the layer will apply if not provided.\n *\n * Required config properties:\n *  - layer - {string} The layer identifier.\n *\n * Optional config properties:\n *  - matrixSet - {string} The matrix set identifier, required if there is\n *       more than one matrix set in the layer capabilities.\n *  - projection - {string} The desired CRS when no matrixSet is specified.\n *       eg: \"EPSG:3857\". If the desired projection is not available,\n *       an error is thrown.\n *  - requestEncoding - {string} url encoding format for the layer. Default is\n *       the first tile url format found in the GetCapabilities response.\n *  - style - {string} The name of the style\n *  - format - {string} Image format for the layer. Default is the first\n *       format returned in the GetCapabilities response.\n *  - crossOrigin - {string|null|undefined} Cross origin. Default is `undefined`.\n * @return {?olx.source.WMTSOptions} WMTS source options object or `null` if the layer was not found.\n * @api\n */\n_ol_source_WMTS_.optionsFromCapabilities = function(wmtsCap, config) {\n  var layers = wmtsCap['Contents']['Layer'];\n  var l = _ol_array_.find(layers, function(elt, index, array) {\n    return elt['Identifier'] == config['layer'];\n  });\n  if (l === null) {\n    return null;\n  }\n  var tileMatrixSets = wmtsCap['Contents']['TileMatrixSet'];\n  var idx, matrixSet, matrixLimits;\n  if (l['TileMatrixSetLink'].length > 1) {\n    if ('projection' in config) {\n      idx = _ol_array_.findIndex(l['TileMatrixSetLink'],\n          function(elt, index, array) {\n            var tileMatrixSet = _ol_array_.find(tileMatrixSets, function(el) {\n              return el['Identifier'] == elt['TileMatrixSet'];\n            });\n            var supportedCRS = tileMatrixSet['SupportedCRS'];\n            var proj1 = _ol_proj_.get(supportedCRS.replace(/urn:ogc:def:crs:(\\w+):(.*:)?(\\w+)$/, '$1:$3')) ||\n                _ol_proj_.get(supportedCRS);\n            var proj2 = _ol_proj_.get(config['projection']);\n            if (proj1 && proj2) {\n              return _ol_proj_.equivalent(proj1, proj2);\n            } else {\n              return supportedCRS == config['projection'];\n            }\n          });\n    } else {\n      idx = _ol_array_.findIndex(l['TileMatrixSetLink'],\n          function(elt, index, array) {\n            return elt['TileMatrixSet'] == config['matrixSet'];\n          });\n    }\n  } else {\n    idx = 0;\n  }\n  if (idx < 0) {\n    idx = 0;\n  }\n  matrixSet = /** @type {string} */\n    (l['TileMatrixSetLink'][idx]['TileMatrixSet']);\n  matrixLimits = /** @type {Array.<Object>} */\n    (l['TileMatrixSetLink'][idx]['TileMatrixSetLimits']);\n\n  var format = /** @type {string} */ (l['Format'][0]);\n  if ('format' in config) {\n    format = config['format'];\n  }\n  idx = _ol_array_.findIndex(l['Style'], function(elt, index, array) {\n    if ('style' in config) {\n      return elt['Title'] == config['style'];\n    } else {\n      return elt['isDefault'];\n    }\n  });\n  if (idx < 0) {\n    idx = 0;\n  }\n  var style = /** @type {string} */ (l['Style'][idx]['Identifier']);\n\n  var dimensions = {};\n  if ('Dimension' in l) {\n    l['Dimension'].forEach(function(elt, index, array) {\n      var key = elt['Identifier'];\n      var value = elt['Default'];\n      if (value === undefined) {\n        value = elt['Value'][0];\n      }\n      dimensions[key] = value;\n    });\n  }\n\n  var matrixSets = wmtsCap['Contents']['TileMatrixSet'];\n  var matrixSetObj = _ol_array_.find(matrixSets, function(elt, index, array) {\n    return elt['Identifier'] == matrixSet;\n  });\n\n  var projection;\n  var code = matrixSetObj['SupportedCRS'];\n  if (code) {\n    projection = _ol_proj_.get(code.replace(/urn:ogc:def:crs:(\\w+):(.*:)?(\\w+)$/, '$1:$3')) ||\n        _ol_proj_.get(code);\n  }\n  if ('projection' in config) {\n    var projConfig = _ol_proj_.get(config['projection']);\n    if (projConfig) {\n      if (!projection || _ol_proj_.equivalent(projConfig, projection)) {\n        projection = projConfig;\n      }\n    }\n  }\n\n  var wgs84BoundingBox = l['WGS84BoundingBox'];\n  var extent, wrapX;\n  if (wgs84BoundingBox !== undefined) {\n    var wgs84ProjectionExtent = _ol_proj_.get('EPSG:4326').getExtent();\n    wrapX = (wgs84BoundingBox[0] == wgs84ProjectionExtent[0] &&\n        wgs84BoundingBox[2] == wgs84ProjectionExtent[2]);\n    extent = _ol_proj_.transformExtent(\n        wgs84BoundingBox, 'EPSG:4326', projection);\n    var projectionExtent = projection.getExtent();\n    if (projectionExtent) {\n      // If possible, do a sanity check on the extent - it should never be\n      // bigger than the validity extent of the projection of a matrix set.\n      if (!_ol_extent_.containsExtent(projectionExtent, extent)) {\n        extent = undefined;\n      }\n    }\n  }\n\n  var tileGrid = _ol_tilegrid_WMTS_.createFromCapabilitiesMatrixSet(\n      matrixSetObj, extent, matrixLimits);\n\n  /** @type {!Array.<string>} */\n  var urls = [];\n  var requestEncoding = config['requestEncoding'];\n  requestEncoding = requestEncoding !== undefined ? requestEncoding : '';\n\n  if ('OperationsMetadata' in wmtsCap && 'GetTile' in wmtsCap['OperationsMetadata']) {\n    var gets = wmtsCap['OperationsMetadata']['GetTile']['DCP']['HTTP']['Get'];\n\n    for (var i = 0, ii = gets.length; i < ii; ++i) {\n      if (gets[i]['Constraint']) {\n        var constraint = _ol_array_.find(gets[i]['Constraint'], function(element) {\n          return element['name'] == 'GetEncoding';\n        });\n        var encodings = constraint['AllowedValues']['Value'];\n\n        if (requestEncoding === '') {\n          // requestEncoding not provided, use the first encoding from the list\n          requestEncoding = encodings[0];\n        }\n        if (requestEncoding === _ol_source_WMTSRequestEncoding_.KVP) {\n          if (_ol_array_.includes(encodings, _ol_source_WMTSRequestEncoding_.KVP)) {\n            urls.push(/** @type {string} */ (gets[i]['href']));\n          }\n        } else {\n          break;\n        }\n      } else if (gets[i]['href']) {\n        requestEncoding = _ol_source_WMTSRequestEncoding_.KVP;\n        urls.push(/** @type {string} */ (gets[i]['href']));\n      }\n    }\n  }\n  if (urls.length === 0) {\n    requestEncoding = _ol_source_WMTSRequestEncoding_.REST;\n    l['ResourceURL'].forEach(function(element) {\n      if (element['resourceType'] === 'tile') {\n        format = element['format'];\n        urls.push(/** @type {string} */ (element['template']));\n      }\n    });\n  }\n\n  return {\n    urls: urls,\n    layer: config['layer'],\n    matrixSet: matrixSet,\n    format: format,\n    projection: projection,\n    requestEncoding: requestEncoding,\n    tileGrid: tileGrid,\n    style: style,\n    dimensions: dimensions,\n    wrapX: wrapX,\n    crossOrigin: config['crossOrigin']\n  };\n};\nexport default _ol_source_WMTS_;\n","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[_c('el-breadcrumb',{attrs:{\"separator-class\":\"el-icon-arrow-right\"}},[_c('el-breadcrumb-item',{attrs:{\"to\":{ path: '/home' }}},[_vm._v(\"首页\")]),_c('el-breadcrumb-item',[_vm._v(\"GeoServer\")]),_c('el-breadcrumb-item',[_vm._v(\"加载WMTS\")])],1),_c('el-card',[_c('div',{attrs:{\"id\":\"map\"}})])],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div>\r\n        <!--面包屑导航区域-->\r\n        <el-breadcrumb separator-class=\"el-icon-arrow-right\">\r\n            <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\r\n            <el-breadcrumb-item>GeoServer</el-breadcrumb-item>\r\n            <el-breadcrumb-item>加载WMTS</el-breadcrumb-item>\r\n        </el-breadcrumb>\r\n        <!--卡片区域-->\r\n        <el-card>\r\n            <div id=\"map\"></div>\r\n        </el-card>\r\n    </div>\r\n</template>\r\n<script>\r\nimport Map from 'ol/map';\r\nimport View from 'ol/view';\r\nimport TileLayer from 'ol/layer/tile';\r\nimport WMTSGrid from 'ol/tilegrid/wmts';\r\nimport WMTS from 'ol/source/wmts';\r\nimport Projection from 'ol/proj/projection';\r\nimport control from 'ol/control';\r\nimport {getTdtLayer} from \"../../utils/searchUtils\";\r\nexport default {\r\n    data() {\r\n        return {\r\n            projection: null\r\n        }\r\n    },\r\n    created() {\r\n    },\r\n    mounted() {\r\n        this.initMap()\r\n    },\r\n    methods: {\r\n        initMap() {\r\n          let projection = new Projection({\r\n            code: 'EPSG:4326',\r\n            units: 'degrees',\r\n            axisOrientation: 'neu'\r\n          });\r\n          let view = new View({\r\n            zoom: 2,\r\n            center: [-97, 38],\r\n            projection: projection\r\n          });\r\n\r\n          let map = new Map({\r\n            controls: control.defaults({\r\n              attribution: false\r\n            }).extend([]),\r\n            target: \"map\",\r\n            layers: [\r\n              getTdtLayer(\"vec_w\"),\r\n              getTdtLayer(\"cva_w\"),\r\n              this.getTileLayer('topp:states')\r\n            ],\r\n            view: view\r\n          });\r\n          this.projection = projection\r\n        },\r\n        getTileLayer(lyr) {\r\n            let gridsetName = 'EPSG:4326';\r\n            let gridNames = ['EPSG:4326:0', 'EPSG:4326:1', 'EPSG:4326:2', 'EPSG:4326:3', 'EPSG:4326:4', 'EPSG:4326:5', 'EPSG:4326:6', 'EPSG:4326:7', 'EPSG:4326:8', 'EPSG:4326:9', 'EPSG:4326:10', 'EPSG:4326:11', 'EPSG:4326:12', 'EPSG:4326:13', 'EPSG:4326:14', 'EPSG:4326:15', 'EPSG:4326:16', 'EPSG:4326:17', 'EPSG:4326:18'];\r\n            let baseUrl = process.env.VUE_APP_GEOSERVER + 'geoserver/gwc/service/wmts';\r\n            let format = 'image/png';\r\n            let layerName = lyr;\r\n            let resolutions = [0.703125, 0.3515625, 0.17578125, 0.087890625, 0.0439453125, 0.02197265625, 0.010986328125, 0.0054931640625, 0.00274658203125, 0.001373291015625, 6.866455078125E-4, 3.4332275390625E-4, 1.71661376953125E-4, 8.58306884765625E-5, 4.291534423828125E-5, 2.1457672119140625E-5, 1.0728836059570312E-5, 5.364418029785156E-6, 2.682209014892578E-6];\r\n            let baseParams = ['VERSION', 'LAYER', 'STYLE', 'TILEMATRIX', 'TILEMATRIXSET', 'SERVICE', 'FORMAT'];\r\n            let params = {\r\n                'VERSION': '1.0.0',\r\n                'LAYER': layerName,\r\n                'TILEMATRIX': gridNames,\r\n                'TILEMATRIXSET': gridsetName,\r\n                'SERVICE': 'WMTS',\r\n                'FORMAT': format\r\n            };\r\n\r\n            let url = baseUrl + '?';\r\n            for (let param in params) {\r\n                if (baseParams.indexOf(param.toUpperCase()) < 0) {\r\n                    url = url + param + '=' + params[param] + '&';\r\n                }\r\n            }\r\n            url = url.slice(0, -1);\r\n\r\n            let source = new WMTS({\r\n                url: url,\r\n                layer: params['LAYER'],\r\n                matrixSet: params['TILEMATRIXSET'],\r\n                format: params['FORMAT'],\r\n                projection: this.projection,\r\n                tileGrid: new WMTSGrid({\r\n                    tileSize: [256, 256],\r\n                    extent: [-180.0, -90.0, 180.0, 90.0],\r\n                    origin: [-180.0, 90.0],\r\n                    resolutions: resolutions,\r\n                    matrixIds: params['TILEMATRIX']\r\n                }),\r\n                style: params['STYLE'],\r\n                wrapX: true\r\n            });\r\n            let layer = new TileLayer({\r\n                source: source\r\n            });\r\n            return layer;\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n\r\n</style>\r\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./WMTS.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./WMTS.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./WMTS.vue?vue&type=template&id=0bce7076&scoped=true&\"\nimport script from \"./WMTS.vue?vue&type=script&lang=js&\"\nexport * from \"./WMTS.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"0bce7076\",\n  null\n  \n)\n\nexport default component.exports","import _ol_ from '../index.js';\nimport _ol_array_ from '../array.js';\nimport _ol_proj_ from '../proj.js';\nimport _ol_tilegrid_TileGrid_ from '../tilegrid/tilegrid.js';\n\n/**\n * @classdesc\n * Set the grid pattern for sources accessing WMTS tiled-image servers.\n *\n * @constructor\n * @extends {ol.tilegrid.TileGrid}\n * @param {olx.tilegrid.WMTSOptions} options WMTS options.\n * @struct\n * @api\n */\nvar _ol_tilegrid_WMTS_ = function(options) {\n  /**\n   * @private\n   * @type {!Array.<string>}\n   */\n  this.matrixIds_ = options.matrixIds;\n  // FIXME: should the matrixIds become optional?\n\n  _ol_tilegrid_TileGrid_.call(this, {\n    extent: options.extent,\n    origin: options.origin,\n    origins: options.origins,\n    resolutions: options.resolutions,\n    tileSize: options.tileSize,\n    tileSizes: options.tileSizes,\n    sizes: options.sizes\n  });\n};\n\n_ol_.inherits(_ol_tilegrid_WMTS_, _ol_tilegrid_TileGrid_);\n\n\n/**\n * @param {number} z Z.\n * @return {string} MatrixId..\n */\n_ol_tilegrid_WMTS_.prototype.getMatrixId = function(z) {\n  return this.matrixIds_[z];\n};\n\n\n/**\n * Get the list of matrix identifiers.\n * @return {Array.<string>} MatrixIds.\n * @api\n */\n_ol_tilegrid_WMTS_.prototype.getMatrixIds = function() {\n  return this.matrixIds_;\n};\n\n\n/**\n * Create a tile grid from a WMTS capabilities matrix set and an\n * optional TileMatrixSetLimits.\n * @param {Object} matrixSet An object representing a matrixSet in the\n *     capabilities document.\n * @param {ol.Extent=} opt_extent An optional extent to restrict the tile\n *     ranges the server provides.\n * @param {Array.<Object>=} opt_matrixLimits An optional object representing\n *     the available matrices for tileGrid.\n * @return {ol.tilegrid.WMTS} WMTS tileGrid instance.\n * @api\n */\n_ol_tilegrid_WMTS_.createFromCapabilitiesMatrixSet = function(matrixSet, opt_extent,\n    opt_matrixLimits) {\n\n  /** @type {!Array.<number>} */\n  var resolutions = [];\n  /** @type {!Array.<string>} */\n  var matrixIds = [];\n  /** @type {!Array.<ol.Coordinate>} */\n  var origins = [];\n  /** @type {!Array.<ol.Size>} */\n  var tileSizes = [];\n  /** @type {!Array.<ol.Size>} */\n  var sizes = [];\n\n  var matrixLimits = opt_matrixLimits !== undefined ? opt_matrixLimits : [];\n\n  var supportedCRSPropName = 'SupportedCRS';\n  var matrixIdsPropName = 'TileMatrix';\n  var identifierPropName = 'Identifier';\n  var scaleDenominatorPropName = 'ScaleDenominator';\n  var topLeftCornerPropName = 'TopLeftCorner';\n  var tileWidthPropName = 'TileWidth';\n  var tileHeightPropName = 'TileHeight';\n\n  var code = matrixSet[supportedCRSPropName];\n  var projection = _ol_proj_.get(code.replace(/urn:ogc:def:crs:(\\w+):(.*:)?(\\w+)$/, '$1:$3')) ||\n      _ol_proj_.get(code);\n  var metersPerUnit = projection.getMetersPerUnit();\n  // swap origin x and y coordinates if axis orientation is lat/long\n  var switchOriginXY = projection.getAxisOrientation().substr(0, 2) == 'ne';\n\n  matrixSet[matrixIdsPropName].sort(function(a, b) {\n    return b[scaleDenominatorPropName] - a[scaleDenominatorPropName];\n  });\n\n  matrixSet[matrixIdsPropName].forEach(function(elt, index, array) {\n\n    var matrixAvailable;\n    // use of matrixLimits to filter TileMatrices from GetCapabilities\n    // TileMatrixSet from unavailable matrix levels.\n    if (matrixLimits.length > 0) {\n      matrixAvailable = _ol_array_.find(matrixLimits,\n          function(elt_ml, index_ml, array_ml) {\n            return elt[identifierPropName] == elt_ml[matrixIdsPropName];\n          });\n    } else {\n      matrixAvailable = true;\n    }\n\n    if (matrixAvailable) {\n      matrixIds.push(elt[identifierPropName]);\n      var resolution = elt[scaleDenominatorPropName] * 0.28E-3 / metersPerUnit;\n      var tileWidth = elt[tileWidthPropName];\n      var tileHeight = elt[tileHeightPropName];\n      if (switchOriginXY) {\n        origins.push([elt[topLeftCornerPropName][1],\n          elt[topLeftCornerPropName][0]]);\n      } else {\n        origins.push(elt[topLeftCornerPropName]);\n      }\n      resolutions.push(resolution);\n      tileSizes.push(tileWidth == tileHeight ?\n        tileWidth : [tileWidth, tileHeight]);\n      // top-left origin, so height is negative\n      sizes.push([elt['MatrixWidth'], -elt['MatrixHeight']]);\n    }\n  });\n\n  return new _ol_tilegrid_WMTS_({\n    extent: opt_extent,\n    origins: origins,\n    resolutions: resolutions,\n    matrixIds: matrixIds,\n    tileSizes: tileSizes,\n    sizes: sizes\n  });\n};\nexport default _ol_tilegrid_WMTS_;\n","var _ol_uri_ = {};\n\n\n/**\n * Appends query parameters to a URI.\n *\n * @param {string} uri The original URI, which may already have query data.\n * @param {!Object} params An object where keys are URI-encoded parameter keys,\n *     and the values are arbitrary types or arrays.\n * @return {string} The new URI.\n */\n_ol_uri_.appendParams = function(uri, params) {\n  var keyParams = [];\n  // Skip any null or undefined parameter values\n  Object.keys(params).forEach(function(k) {\n    if (params[k] !== null && params[k] !== undefined) {\n      keyParams.push(k + '=' + encodeURIComponent(params[k]));\n    }\n  });\n  var qs = keyParams.join('&');\n  // remove any trailing ? or &\n  uri = uri.replace(/[?&]$/, '');\n  // append ? or & depending on whether uri has existing parameters\n  uri = uri.indexOf('?') === -1 ? uri + '?' : uri + '&';\n  return uri + qs;\n};\nexport default _ol_uri_;\n","'use strict';\nvar $ = require('../internals/export');\nvar isArray = require('../internals/is-array');\nvar isConstructor = require('../internals/is-constructor');\nvar isObject = require('../internals/is-object');\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar createProperty = require('../internals/create-property');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\nvar nativeSlice = require('../internals/array-slice');\n\nvar HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('slice');\n\nvar SPECIES = wellKnownSymbol('species');\nvar $Array = Array;\nvar max = Math.max;\n\n// `Array.prototype.slice` method\n// https://tc39.es/ecma262/#sec-array.prototype.slice\n// fallback for not array-like ES3 strings and DOM objects\n$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT }, {\n  slice: function slice(start, end) {\n    var O = toIndexedObject(this);\n    var length = lengthOfArrayLike(O);\n    var k = toAbsoluteIndex(start, length);\n    var fin = toAbsoluteIndex(end === undefined ? length : end, length);\n    // inline `ArraySpeciesCreate` for usage native `Array#slice` where it's possible\n    var Constructor, result, n;\n    if (isArray(O)) {\n      Constructor = O.constructor;\n      // cross-realm fallback\n      if (isConstructor(Constructor) && (Constructor === $Array || isArray(Constructor.prototype))) {\n        Constructor = undefined;\n      } else if (isObject(Constructor)) {\n        Constructor = Constructor[SPECIES];\n        if (Constructor === null) Constructor = undefined;\n      }\n      if (Constructor === $Array || Constructor === undefined) {\n        return nativeSlice(O, k, fin);\n      }\n    }\n    result = new (Constructor === undefined ? $Array : Constructor)(max(fin - k, 0));\n    for (n = 0; k < fin; k++, n++) if (k in O) createProperty(result, n, O[k]);\n    result.length = n;\n    return result;\n  }\n});\n"],"sourceRoot":""}