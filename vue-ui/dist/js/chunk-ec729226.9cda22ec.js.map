{"version":3,"sources":["webpack:///./node_modules/core-js/internals/delete-property-or-throw.js","webpack:///./node_modules/ol/format/xmlfeature.js","webpack:///./node_modules/ol/format/gmlbase.js","webpack:///./node_modules/ol/format/xsd.js","webpack:///./node_modules/ol/format/gml2.js","webpack:///./node_modules/ol/format/gml3.js","webpack:///./node_modules/ol/format/wfs.js","webpack:///./node_modules/core-js/modules/es.array.push.js","webpack:///./node_modules/core-js/internals/array-set-length.js","webpack:///./node_modules/ol/format/filter/filter.js","webpack:///./node_modules/ol/format/filter/logicalnary.js","webpack:///./node_modules/ol/format/filter/and.js","webpack:///./node_modules/ol/format/filter/bbox.js","webpack:///./node_modules/ol/format/filter/spatial.js","webpack:///./node_modules/ol/format/filter/contains.js","webpack:///./node_modules/ol/format/filter/comparison.js","webpack:///./node_modules/ol/format/filter/during.js","webpack:///./node_modules/ol/format/filter/comparisonbinary.js","webpack:///./node_modules/ol/format/filter/equalto.js","webpack:///./node_modules/ol/format/filter/greaterthan.js","webpack:///./node_modules/ol/format/filter/greaterthanorequalto.js","webpack:///./node_modules/ol/format/filter/intersects.js","webpack:///./node_modules/ol/format/filter/isbetween.js","webpack:///./node_modules/ol/format/filter/islike.js","webpack:///./node_modules/ol/format/filter/isnull.js","webpack:///./node_modules/ol/format/filter/lessthan.js","webpack:///./node_modules/ol/format/filter/lessthanorequalto.js","webpack:///./node_modules/ol/format/filter/not.js","webpack:///./node_modules/ol/format/filter/notequalto.js","webpack:///./node_modules/ol/format/filter/or.js","webpack:///./node_modules/ol/format/filter/within.js","webpack:///./node_modules/ol/format/filter.js","webpack:///./src/utils/searchUtils.js","webpack:///./node_modules/core-js/modules/es.array.splice.js","webpack:///./node_modules/core-js/modules/es.function.name.js","webpack:///./node_modules/core-js/modules/es.object.keys.js"],"names":["tryToString","$TypeError","TypeError","module","exports","O","P","_ol_format_XMLFeature_","this","xmlSerializer_","XMLSerializer","call","inherits","prototype","getType","XML","readFeature","source","opt_options","isDocument","readFeatureFromDocument","isNode","readFeatureFromNode","doc","parse","features","readFeaturesFromDocument","length","node","readFeatures","readFeaturesFromNode","n","firstChild","nextSibling","nodeType","Node","ELEMENT_NODE","extend","readGeometry","readGeometryFromDocument","readGeometryFromNode","readProjection","readProjectionFromDocument","readProjectionFromNode","defaultDataProjection","writeFeature","feature","writeFeatureNode","serializeToString","writeFeatures","writeFeaturesNode","writeGeometry","geometry","writeGeometryNode","_ol_format_GMLBase_","options","featureType","featureNS","srsName","schemaLocation","FEATURE_COLLECTION_PARSERS","GMLNS","makeReplacer","readFeaturesInternal","ONLY_WHITESPACE_RE_","objectStack","localName","namespaceURI","pushParseAndPop","i","ii","context","prefix","defaultPrefix","childNodes","child","ft","nodeName","split","pop","indexOf","key","count","uri","candidate","push","ns","parsersNS","featureTypes","Array","isArray","p","parsers","featurePrefix","makeArrayPusher","readFeatureElement","undefined","readGeometryElement","firstElementChild","getAttribute","GEOMETRY_PARSERS_","transformWithOptions","geometryName","fid","getAttributeNS","values","nextElementSibling","value","getAllTextContent","test","setGeometryName","setId","readPoint","flatCoordinates","readFlatCoordinatesFromNode_","point","setFlatCoordinates","XYZ","readMultiPoint","coordinates","MULTIPOINT_PARSERS_","readMultiLineString","lineStrings","MULTILINESTRING_PARSERS_","multiLineString","setLineStrings","readMultiPolygon","polygons","MULTIPOLYGON_PARSERS_","multiPolygon","setPolygons","pointMemberParser_","parseNode","POINTMEMBER_PARSERS_","lineStringMemberParser_","LINESTRINGMEMBER_PARSERS_","polygonMemberParser_","POLYGONMEMBER_PARSERS_","readLineString","lineString","readFlatLinearRing_","ring","GEOMETRY_FLAT_COORDINATES_PARSERS_","readLinearRing","readPolygon","flatLinearRings","FLAT_LINEAR_RINGS_PARSERS_","polygon","ends","RING_PARSERS","getReadOptions","assign","get","_ol_format_XSD_","s","readBooleanString","string","m","exec","dateTime","Date","isNaN","readDecimalString","parseFloat","readNonNegativeIntegerString","parseInt","trim","bool","writeStringTextNode","appendChild","DOCUMENT","createCDATASection","date","getUTCFullYear","padNumber","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","createTextNode","decimal","toPrecision","nonNegativeInteger","toString","_ol_format_GML2_","schemaLocation_","readFlatCoordinates_","replace","containerSrs","axisOrientation","proj","getAxisOrientation","x","y","z","coordsGroups","coords","substr","readBox_","BOX_PARSERS_","createOrUpdate","innerBoundaryIsParser_","flatLinearRing","outerBoundaryIsParser_","GEOMETRY_NODE_FACTORY_","opt_nodeName","multiSurface","surface","multiCurve","createElementNS","writeFeatureElement","getId","setAttribute","getGeometryName","serializers","properties","getProperties","keys","makeChildAppender","writeGeometryElement","item","pushSerializeAndPop","makeSimpleNodeFactory","dataProjection","transformExtent","featureProjection","GEOMETRY_SERIALIZERS_","writeCurveOrLineString_","createCoordinatesNode_","writeCoordinates_","segments","writeCurveSegments_","hasZ","points","getCoordinates","len","parts","getCoords_","join","line","writeSurfaceOrPolygon_","rings","getLinearRings","RING_SERIALIZERS_","RING_NODE_FACTORY_","patches","writeSurfacePatches_","parentNode","exteriorWritten","writeRing_","linearRing","writeLinearRing_","opt_srsName","opt_hasZ","writeMultiCurveOrLineString_","curve","lines","getLineStrings","LINESTRINGORCURVEMEMBER_SERIALIZERS_","MULTIGEOMETRY_MEMBER_NODE_FACTORY_","writePoint_","coord","writeMultiPoint_","getPoints","POINTMEMBER_SERIALIZERS_","writePointMember_","writeLineStringOrCurveMember_","writeMultiSurfaceOrPolygon_","getPolygons","SURFACEORPOLYGONMEMBER_SERIALIZERS_","writeSurfaceOrPolygonMember_","writeEnvelope","extent","ENVELOPE_SERIALIZERS_","OBJECT_PROPERTY_NODE_FACTORY","MULTIGEOMETRY_TO_MEMBER_NODENAME_","_ol_format_GML3_","surface_","curve_","multiCurve_","multiSurface_","readMultiCurve_","MULTICURVE_PARSERS_","readMultiSurface_","MULTISURFACE_PARSERS_","curveMemberParser_","CURVEMEMBER_PARSERS_","surfaceMemberParser_","SURFACEMEMBER_PARSERS_","readPatch_","PATCHES_PARSERS_","readSegment_","SEGMENTS_PARSERS_","readPolygonPatch_","readLineStringSegment_","interiorParser_","exteriorParser_","readSurface_","SURFACE_PARSERS_","readCurve_","CURVE_PARSERS_","readEnvelope_","ENVELOPE_PARSERS_","readFlatPos_","re","readFlatPosList_","contextDimension","dim","writePos_","srsDimension","writePosList_","pos","posList","writeFeatureMembers_","adaptOptions","geom","setAttributeNS","_ol_format_WFS_","featureType_","featureNS_","gmlFormat_","gmlFormat","SCHEMA_LOCATIONS","DEFAULT_VERSION","FEATURE_PREFIX","XMLNS","OGCNS","WFSNS","FESNS","getFeatureType","setFeatureType","readTransactionResponse","readTransactionResponseFromDocument","readTransactionResponseFromNode","readFeatureCollectionMetadata","readFeatureCollectionMetadataFromDocument","readFeatureCollectionMetadataFromNode","FEATURE_COLLECTION_PARSERS_","makeObjectPropertySetter","result","TRANSACTION_SUMMARY_PARSERS_","readNonNegativeInteger","readTransactionSummary_","OGC_FID_PARSERS_","fidParser_","INSERT_RESULTS_PARSERS_","readInsertResults_","TRANSACTION_RESPONSE_PARSERS_","QUERY_SERIALIZERS_","writeFeature_","gmlVersion","writeOgcFidFilter_","filter","getTypeName_","writeDelete_","assert","typeName","writeUpdate_","getKeys","name","TRANSACTION_SERIALIZERS_","writeProperty_","pair","writeNative_","nativeElement","vendorId","safeToIgnore","writeQuery_","propertyNames","writeFilterCondition_","GETFEATURE_SERIALIZERS_","getTagName","writeBboxFilter_","writeOgcPropertyName_","writeContainsFilter_","writeIntersectsFilter_","writeWithinFilter_","writeDuringFilter_","valueReference","propertyName","timePeriod","begin","writeTimeInstant_","end","writeLogicalFilter_","conditions","condition","writeNotFilter_","writeComparisonFilter_","matchCase","writeOgcLiteral_","expression","writeIsNullFilter_","writeIsBetweenFilter_","lowerBoundary","upperBoundary","writeIsLikeFilter_","wildCard","singleChar","escapeChar","pattern","writeOgcExpression_","tagName","property","time","timeInstant","timePosition","writeFilter","writeGetFeature_","writeGetFeature","handle","outputFormat","maxFeatures","resultType","startIndex","bbox","and","writeTransaction","inserts","updates","deletes","baseObj","obj","version","gmlOptions","nativeElements","$","toObject","lengthOfArrayLike","setArrayLength","doesNotExceedSafeInteger","fails","INCORRECT_TO_LENGTH","SILENT_ON_NON_WRITABLE_LENGTH","Object","defineProperty","writable","error","target","proto","arity","forced","argCount","arguments","DESCRIPTORS","getOwnPropertyDescriptor","SILENT_ON_NON_WRITABLE_LENGTH_SET","_ol_format_filter_Filter_","tagName_","_ol_format_filter_LogicalNary_","slice","_ol_format_filter_And_","params","concat","apply","_ol_format_filter_Bbox_","_ol_format_filter_Spatial_","_ol_format_filter_Contains_","_ol_format_filter_Comparison_","_ol_format_filter_During_","_ol_format_filter_ComparisonBinary_","opt_matchCase","_ol_format_filter_EqualTo_","_ol_format_filter_GreaterThan_","_ol_format_filter_GreaterThanOrEqualTo_","_ol_format_filter_Intersects_","_ol_format_filter_IsBetween_","_ol_format_filter_IsLike_","opt_wildCard","opt_singleChar","opt_escapeChar","_ol_format_filter_IsNull_","_ol_format_filter_LessThan_","_ol_format_filter_LessThanOrEqualTo_","_ol_format_filter_Not_","_ol_format_filter_NotEqualTo_","_ol_format_filter_Or_","_ol_format_filter_Within_","_ol_format_filter_","Function","bind","SPACE_NAME","SRS_NAME","searchLayer","filterLayer","GeoJSONData","TYPE","poi","landmarks","roads","GEOTYPE","j","poly_landmarks","tiger_roads","FIELD","NAME","LANAME","FIELD_NAME","getRequestAll","urls","max","callback","fetchArr","toFetch","Promise","resolve","one","fetch","then","response","json","data","splice","catch","crs","type","numberMatched","numberReturned","timeStamp","formatDate","getTime","totalFeatures","race","all","a","postRequestAll","url","body","method","d","YY","getFullYear","MM","getMonth","DD","getDate","hh","getHours","mm","getMinutes","ss","getSeconds","getLikeSQL","keyword","sql","forEach","like","propertie","substring","lastIndexOf","cql","getDescribeToSql","e","console","getSearchURLs","pageSize","baseURL","r","encodeURI","getSearch","err","getFeatureRequest","layerName","featureRequest","WFS","request","postWFS","spaceFilter","map","removeLayer","Vector","style","getStyle","Style","stroke","Stroke","color","width","fill","Fill","getGeometry","addFeature","Feature","VectorLayer","addLayer","applyTransform","flatCoordinates2","stride","layerNames","Filter","intersects","getSearchData","id","styleFunction","image","Circle","radius","styles","lineDash","addGeoJSON","featureId","GeoJSON","addFeatures","getFeatures","getExtent","getView","getResolutionForExtent","getSize","setResolution","setCenter","Extent","getCenter","getTdtLayer","lyr","TileLayer","toAbsoluteIndex","toIntegerOrInfinity","arraySpeciesCreate","createProperty","deletePropertyOrThrow","arrayMethodHasSpeciesSupport","HAS_SPECIES_SUPPORT","Math","min","start","deleteCount","insertCount","actualDeleteCount","A","k","from","to","actualStart","argumentsLength","FUNCTION_NAME_EXISTS","EXISTS","uncurryThis","f","FunctionPrototype","functionToString","nameRE","regExpExec","configurable","nativeKeys","FAILS_ON_PRIMITIVES","stat","it"],"mappings":"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","file":"js/chunk-ec729226.9cda22ec.js","sourcesContent":["'use strict';\nvar tryToString = require('../internals/try-to-string');\n\nvar $TypeError = TypeError;\n\nmodule.exports = function (O, P) {\n  if (!delete O[P]) throw $TypeError('Cannot delete property ' + tryToString(P) + ' of ' + tryToString(O));\n};\n","import _ol_ from '../index.js';\nimport _ol_array_ from '../array.js';\nimport _ol_format_Feature_ from '../format/feature.js';\nimport _ol_format_FormatType_ from '../format/formattype.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for XML feature formats.\n *\n * @constructor\n * @abstract\n * @extends {ol.format.Feature}\n */\nvar _ol_format_XMLFeature_ = function() {\n\n  /**\n   * @type {XMLSerializer}\n   * @private\n   */\n  this.xmlSerializer_ = new XMLSerializer();\n\n  _ol_format_Feature_.call(this);\n};\n\n_ol_.inherits(_ol_format_XMLFeature_, _ol_format_Feature_);\n\n\n/**\n * @inheritDoc\n */\n_ol_format_XMLFeature_.prototype.getType = function() {\n  return _ol_format_FormatType_.XML;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_format_XMLFeature_.prototype.readFeature = function(source, opt_options) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFeatureFromDocument(\n        /** @type {Document} */ (source), opt_options);\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFeatureFromNode(/** @type {Node} */ (source), opt_options);\n  } else if (typeof source === 'string') {\n    var doc = _ol_xml_.parse(source);\n    return this.readFeatureFromDocument(doc, opt_options);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {ol.Feature} Feature.\n */\n_ol_format_XMLFeature_.prototype.readFeatureFromDocument = function(\n    doc, opt_options) {\n  var features = this.readFeaturesFromDocument(doc, opt_options);\n  if (features.length > 0) {\n    return features[0];\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {ol.Feature} Feature.\n */\n_ol_format_XMLFeature_.prototype.readFeatureFromNode = function(node, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_format_XMLFeature_.prototype.readFeatures = function(source, opt_options) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFeaturesFromDocument(\n        /** @type {Document} */ (source), opt_options);\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFeaturesFromNode(/** @type {Node} */ (source), opt_options);\n  } else if (typeof source === 'string') {\n    var doc = _ol_xml_.parse(source);\n    return this.readFeaturesFromDocument(doc, opt_options);\n  } else {\n    return [];\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {Array.<ol.Feature>} Features.\n */\n_ol_format_XMLFeature_.prototype.readFeaturesFromDocument = function(\n    doc, opt_options) {\n  /** @type {Array.<ol.Feature>} */\n  var features = [];\n  var n;\n  for (n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      _ol_array_.extend(features, this.readFeaturesFromNode(n, opt_options));\n    }\n  }\n  return features;\n};\n\n\n/**\n * @abstract\n * @param {Node} node Node.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {Array.<ol.Feature>} Features.\n */\n_ol_format_XMLFeature_.prototype.readFeaturesFromNode = function(node, opt_options) {};\n\n\n/**\n * @inheritDoc\n */\n_ol_format_XMLFeature_.prototype.readGeometry = function(source, opt_options) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readGeometryFromDocument(\n        /** @type {Document} */ (source), opt_options);\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readGeometryFromNode(/** @type {Node} */ (source), opt_options);\n  } else if (typeof source === 'string') {\n    var doc = _ol_xml_.parse(source);\n    return this.readGeometryFromDocument(doc, opt_options);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {ol.geom.Geometry} Geometry.\n */\n_ol_format_XMLFeature_.prototype.readGeometryFromDocument = function(doc, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @protected\n * @return {ol.geom.Geometry} Geometry.\n */\n_ol_format_XMLFeature_.prototype.readGeometryFromNode = function(node, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_format_XMLFeature_.prototype.readProjection = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readProjectionFromDocument(/** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readProjectionFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    var doc = _ol_xml_.parse(source);\n    return this.readProjectionFromDocument(doc);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @protected\n * @return {ol.proj.Projection} Projection.\n */\n_ol_format_XMLFeature_.prototype.readProjectionFromDocument = function(doc) {\n  return this.defaultDataProjection;\n};\n\n\n/**\n * @param {Node} node Node.\n * @protected\n * @return {ol.proj.Projection} Projection.\n */\n_ol_format_XMLFeature_.prototype.readProjectionFromNode = function(node) {\n  return this.defaultDataProjection;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_format_XMLFeature_.prototype.writeFeature = function(feature, opt_options) {\n  var node = this.writeFeatureNode(feature, opt_options);\n  return this.xmlSerializer_.serializeToString(node);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @protected\n * @return {Node} Node.\n */\n_ol_format_XMLFeature_.prototype.writeFeatureNode = function(feature, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_format_XMLFeature_.prototype.writeFeatures = function(features, opt_options) {\n  var node = this.writeFeaturesNode(features, opt_options);\n  return this.xmlSerializer_.serializeToString(node);\n};\n\n\n/**\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n */\n_ol_format_XMLFeature_.prototype.writeFeaturesNode = function(features, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_format_XMLFeature_.prototype.writeGeometry = function(geometry, opt_options) {\n  var node = this.writeGeometryNode(geometry, opt_options);\n  return this.xmlSerializer_.serializeToString(node);\n};\n\n\n/**\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n */\n_ol_format_XMLFeature_.prototype.writeGeometryNode = function(geometry, opt_options) {\n  return null; // not implemented\n};\nexport default _ol_format_XMLFeature_;\n","// FIXME Envelopes should not be treated as geometries! readEnvelope_ is part\n// of GEOMETRY_PARSERS_ and methods using GEOMETRY_PARSERS_ do not expect\n// envelopes/extents, only geometries!\nimport _ol_ from '../index.js';\nimport _ol_array_ from '../array.js';\nimport _ol_Feature_ from '../feature.js';\nimport _ol_format_Feature_ from '../format/feature.js';\nimport _ol_format_XMLFeature_ from '../format/xmlfeature.js';\nimport _ol_geom_GeometryLayout_ from '../geom/geometrylayout.js';\nimport _ol_geom_LineString_ from '../geom/linestring.js';\nimport _ol_geom_LinearRing_ from '../geom/linearring.js';\nimport _ol_geom_MultiLineString_ from '../geom/multilinestring.js';\nimport _ol_geom_MultiPoint_ from '../geom/multipoint.js';\nimport _ol_geom_MultiPolygon_ from '../geom/multipolygon.js';\nimport _ol_geom_Point_ from '../geom/point.js';\nimport _ol_geom_Polygon_ from '../geom/polygon.js';\nimport _ol_obj_ from '../obj.js';\nimport _ol_proj_ from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Feature base format for reading and writing data in the GML format.\n * This class cannot be instantiated, it contains only base content that\n * is shared with versioned format classes ol.format.GML2 and\n * ol.format.GML3.\n *\n * @constructor\n * @abstract\n * @param {olx.format.GMLOptions=} opt_options\n *     Optional configuration object.\n * @extends {ol.format.XMLFeature}\n */\nvar _ol_format_GMLBase_ = function(opt_options) {\n  var options = /** @type {olx.format.GMLOptions} */\n      (opt_options ? opt_options : {});\n\n  /**\n   * @protected\n   * @type {Array.<string>|string|undefined}\n   */\n  this.featureType = options.featureType;\n\n  /**\n   * @protected\n   * @type {Object.<string, string>|string|undefined}\n   */\n  this.featureNS = options.featureNS;\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  this.srsName = options.srsName;\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  this.schemaLocation = '';\n\n  /**\n   * @type {Object.<string, Object.<string, Object>>}\n   */\n  this.FEATURE_COLLECTION_PARSERS = {};\n  this.FEATURE_COLLECTION_PARSERS[_ol_format_GMLBase_.GMLNS] = {\n    'featureMember': _ol_xml_.makeReplacer(\n        _ol_format_GMLBase_.prototype.readFeaturesInternal),\n    'featureMembers': _ol_xml_.makeReplacer(\n        _ol_format_GMLBase_.prototype.readFeaturesInternal)\n  };\n\n  _ol_format_XMLFeature_.call(this);\n};\n\n_ol_.inherits(_ol_format_GMLBase_, _ol_format_XMLFeature_);\n\n\n/**\n * @const\n * @type {string}\n */\n_ol_format_GMLBase_.GMLNS = 'http://www.opengis.net/gml';\n\n\n/**\n * A regular expression that matches if a string only contains whitespace\n * characters. It will e.g. match `''`, `' '`, `'\\n'` etc. The non-breaking\n * space (0xa0) is explicitly included as IE doesn't include it in its\n * definition of `\\s`.\n *\n * Information from `goog.string.isEmptyOrWhitespace`: https://github.com/google/closure-library/blob/e877b1e/closure/goog/string/string.js#L156-L160\n *\n * @const\n * @type {RegExp}\n * @private\n */\n_ol_format_GMLBase_.ONLY_WHITESPACE_RE_ = /^[\\s\\xa0]*$/;\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<ol.Feature> | undefined} Features.\n */\n_ol_format_GMLBase_.prototype.readFeaturesInternal = function(node, objectStack) {\n  var localName = node.localName;\n  var features = null;\n  if (localName == 'FeatureCollection') {\n    if (node.namespaceURI === 'http://www.opengis.net/wfs') {\n      features = _ol_xml_.pushParseAndPop([],\n          this.FEATURE_COLLECTION_PARSERS, node,\n          objectStack, this);\n    } else {\n      features = _ol_xml_.pushParseAndPop(null,\n          this.FEATURE_COLLECTION_PARSERS, node,\n          objectStack, this);\n    }\n  } else if (localName == 'featureMembers' || localName == 'featureMember') {\n    var context = objectStack[0];\n    var featureType = context['featureType'];\n    var featureNS = context['featureNS'];\n    var i, ii, prefix = 'p', defaultPrefix = 'p0';\n    if (!featureType && node.childNodes) {\n      featureType = [], featureNS = {};\n      for (i = 0, ii = node.childNodes.length; i < ii; ++i) {\n        var child = node.childNodes[i];\n        if (child.nodeType === 1) {\n          var ft = child.nodeName.split(':').pop();\n          if (featureType.indexOf(ft) === -1) {\n            var key = '';\n            var count = 0;\n            var uri = child.namespaceURI;\n            for (var candidate in featureNS) {\n              if (featureNS[candidate] === uri) {\n                key = candidate;\n                break;\n              }\n              ++count;\n            }\n            if (!key) {\n              key = prefix + count;\n              featureNS[key] = uri;\n            }\n            featureType.push(key + ':' + ft);\n          }\n        }\n      }\n      if (localName != 'featureMember') {\n        // recheck featureType for each featureMember\n        context['featureType'] = featureType;\n        context['featureNS'] = featureNS;\n      }\n    }\n    if (typeof featureNS === 'string') {\n      var ns = featureNS;\n      featureNS = {};\n      featureNS[defaultPrefix] = ns;\n    }\n    var parsersNS = {};\n    var featureTypes = Array.isArray(featureType) ? featureType : [featureType];\n    for (var p in featureNS) {\n      var parsers = {};\n      for (i = 0, ii = featureTypes.length; i < ii; ++i) {\n        var featurePrefix = featureTypes[i].indexOf(':') === -1 ?\n          defaultPrefix : featureTypes[i].split(':')[0];\n        if (featurePrefix === p) {\n          parsers[featureTypes[i].split(':').pop()] =\n              (localName == 'featureMembers') ?\n                _ol_xml_.makeArrayPusher(this.readFeatureElement, this) :\n                _ol_xml_.makeReplacer(this.readFeatureElement, this);\n        }\n      }\n      parsersNS[featureNS[p]] = parsers;\n    }\n    if (localName == 'featureMember') {\n      features = _ol_xml_.pushParseAndPop(undefined, parsersNS, node, objectStack);\n    } else {\n      features = _ol_xml_.pushParseAndPop([], parsersNS, node, objectStack);\n    }\n  }\n  if (features === null) {\n    features = [];\n  }\n  return features;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.Geometry|undefined} Geometry.\n */\n_ol_format_GMLBase_.prototype.readGeometryElement = function(node, objectStack) {\n  var context = /** @type {Object} */ (objectStack[0]);\n  context['srsName'] = node.firstElementChild.getAttribute('srsName');\n  context['srsDimension'] = node.firstElementChild.getAttribute('srsDimension');\n  /** @type {ol.geom.Geometry} */\n  var geometry = _ol_xml_.pushParseAndPop(null,\n      this.GEOMETRY_PARSERS_, node, objectStack, this);\n  if (geometry) {\n    return (\n      /** @type {ol.geom.Geometry} */ _ol_format_Feature_.transformWithOptions(geometry, false, context)\n    );\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.Feature} Feature.\n */\n_ol_format_GMLBase_.prototype.readFeatureElement = function(node, objectStack) {\n  var n;\n  var fid = node.getAttribute('fid') ||\n      _ol_xml_.getAttributeNS(node, _ol_format_GMLBase_.GMLNS, 'id');\n  var values = {}, geometryName;\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    var localName = n.localName;\n    // Assume attribute elements have one child node and that the child\n    // is a text or CDATA node (to be treated as text).\n    // Otherwise assume it is a geometry node.\n    if (n.childNodes.length === 0 ||\n        (n.childNodes.length === 1 &&\n        (n.firstChild.nodeType === 3 || n.firstChild.nodeType === 4))) {\n      var value = _ol_xml_.getAllTextContent(n, false);\n      if (_ol_format_GMLBase_.ONLY_WHITESPACE_RE_.test(value)) {\n        value = undefined;\n      }\n      values[localName] = value;\n    } else {\n      // boundedBy is an extent and must not be considered as a geometry\n      if (localName !== 'boundedBy') {\n        geometryName = localName;\n      }\n      values[localName] = this.readGeometryElement(n, objectStack);\n    }\n  }\n  var feature = new _ol_Feature_(values);\n  if (geometryName) {\n    feature.setGeometryName(geometryName);\n  }\n  if (fid) {\n    feature.setId(fid);\n  }\n  return feature;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.Point|undefined} Point.\n */\n_ol_format_GMLBase_.prototype.readPoint = function(node, objectStack) {\n  var flatCoordinates =\n      this.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    var point = new _ol_geom_Point_(null);\n    point.setFlatCoordinates(_ol_geom_GeometryLayout_.XYZ, flatCoordinates);\n    return point;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.MultiPoint|undefined} MultiPoint.\n */\n_ol_format_GMLBase_.prototype.readMultiPoint = function(node, objectStack) {\n  /** @type {Array.<Array.<number>>} */\n  var coordinates = _ol_xml_.pushParseAndPop([],\n      this.MULTIPOINT_PARSERS_, node, objectStack, this);\n  if (coordinates) {\n    return new _ol_geom_MultiPoint_(coordinates);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.MultiLineString|undefined} MultiLineString.\n */\n_ol_format_GMLBase_.prototype.readMultiLineString = function(node, objectStack) {\n  /** @type {Array.<ol.geom.LineString>} */\n  var lineStrings = _ol_xml_.pushParseAndPop([],\n      this.MULTILINESTRING_PARSERS_, node, objectStack, this);\n  if (lineStrings) {\n    var multiLineString = new _ol_geom_MultiLineString_(null);\n    multiLineString.setLineStrings(lineStrings);\n    return multiLineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.MultiPolygon|undefined} MultiPolygon.\n */\n_ol_format_GMLBase_.prototype.readMultiPolygon = function(node, objectStack) {\n  /** @type {Array.<ol.geom.Polygon>} */\n  var polygons = _ol_xml_.pushParseAndPop([],\n      this.MULTIPOLYGON_PARSERS_, node, objectStack, this);\n  if (polygons) {\n    var multiPolygon = new _ol_geom_MultiPolygon_(null);\n    multiPolygon.setPolygons(polygons);\n    return multiPolygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\n_ol_format_GMLBase_.prototype.pointMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.POINTMEMBER_PARSERS_,\n      node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\n_ol_format_GMLBase_.prototype.lineStringMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.LINESTRINGMEMBER_PARSERS_,\n      node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\n_ol_format_GMLBase_.prototype.polygonMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.POLYGONMEMBER_PARSERS_, node,\n      objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.LineString|undefined} LineString.\n */\n_ol_format_GMLBase_.prototype.readLineString = function(node, objectStack) {\n  var flatCoordinates =\n      this.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    var lineString = new _ol_geom_LineString_(null);\n    lineString.setFlatCoordinates(_ol_geom_GeometryLayout_.XYZ, flatCoordinates);\n    return lineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} LinearRing flat coordinates.\n */\n_ol_format_GMLBase_.prototype.readFlatLinearRing_ = function(node, objectStack) {\n  var ring = _ol_xml_.pushParseAndPop(null,\n      this.GEOMETRY_FLAT_COORDINATES_PARSERS_, node,\n      objectStack, this);\n  if (ring) {\n    return ring;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.LinearRing|undefined} LinearRing.\n */\n_ol_format_GMLBase_.prototype.readLinearRing = function(node, objectStack) {\n  var flatCoordinates =\n      this.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    var ring = new _ol_geom_LinearRing_(null);\n    ring.setFlatCoordinates(_ol_geom_GeometryLayout_.XYZ, flatCoordinates);\n    return ring;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {ol.geom.Polygon|undefined} Polygon.\n */\n_ol_format_GMLBase_.prototype.readPolygon = function(node, objectStack) {\n  /** @type {Array.<Array.<number>>} */\n  var flatLinearRings = _ol_xml_.pushParseAndPop([null],\n      this.FLAT_LINEAR_RINGS_PARSERS_, node, objectStack, this);\n  if (flatLinearRings && flatLinearRings[0]) {\n    var polygon = new _ol_geom_Polygon_(null);\n    var flatCoordinates = flatLinearRings[0];\n    var ends = [flatCoordinates.length];\n    var i, ii;\n    for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      _ol_array_.extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    polygon.setFlatCoordinates(\n        _ol_geom_GeometryLayout_.XYZ, flatCoordinates, ends);\n    return polygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>} Flat coordinates.\n */\n_ol_format_GMLBase_.prototype.readFlatCoordinatesFromNode_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(null,\n      this.GEOMETRY_FLAT_COORDINATES_PARSERS_, node,\n      objectStack, this);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\n_ol_format_GMLBase_.prototype.MULTIPOINT_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': _ol_xml_.makeArrayPusher(\n        _ol_format_GMLBase_.prototype.pointMemberParser_),\n    'pointMembers': _ol_xml_.makeArrayPusher(\n        _ol_format_GMLBase_.prototype.pointMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\n_ol_format_GMLBase_.prototype.MULTILINESTRING_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': _ol_xml_.makeArrayPusher(\n        _ol_format_GMLBase_.prototype.lineStringMemberParser_),\n    'lineStringMembers': _ol_xml_.makeArrayPusher(\n        _ol_format_GMLBase_.prototype.lineStringMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\n_ol_format_GMLBase_.prototype.MULTIPOLYGON_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'polygonMember': _ol_xml_.makeArrayPusher(\n        _ol_format_GMLBase_.prototype.polygonMemberParser_),\n    'polygonMembers': _ol_xml_.makeArrayPusher(\n        _ol_format_GMLBase_.prototype.polygonMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\n_ol_format_GMLBase_.prototype.POINTMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': _ol_xml_.makeArrayPusher(\n        _ol_format_GMLBase_.prototype.readFlatCoordinatesFromNode_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\n_ol_format_GMLBase_.prototype.LINESTRINGMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineString': _ol_xml_.makeArrayPusher(\n        _ol_format_GMLBase_.prototype.readLineString)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\n_ol_format_GMLBase_.prototype.POLYGONMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Polygon': _ol_xml_.makeArrayPusher(\n        _ol_format_GMLBase_.prototype.readPolygon)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @protected\n */\n_ol_format_GMLBase_.prototype.RING_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'LinearRing': _ol_xml_.makeReplacer(\n        _ol_format_GMLBase_.prototype.readFlatLinearRing_)\n  }\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_format_GMLBase_.prototype.readGeometryFromNode = function(node, opt_options) {\n  var geometry = this.readGeometryElement(node,\n      [this.getReadOptions(node, opt_options ? opt_options : {})]);\n  return geometry ? geometry : null;\n};\n\n\n/**\n * Read all features from a GML FeatureCollection.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\n_ol_format_GMLBase_.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\n_ol_format_GMLBase_.prototype.readFeaturesFromNode = function(node, opt_options) {\n  var options = {\n    featureType: this.featureType,\n    featureNS: this.featureNS\n  };\n  if (opt_options) {\n    _ol_obj_.assign(options, this.getReadOptions(node, opt_options));\n  }\n  var features = this.readFeaturesInternal(node, [options]);\n  return features || [];\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_format_GMLBase_.prototype.readProjectionFromNode = function(node) {\n  return _ol_proj_.get(this.srsName ? this.srsName :\n    node.firstElementChild.getAttribute('srsName'));\n};\nexport default _ol_format_GMLBase_;\n","import _ol_xml_ from '../xml.js';\nimport _ol_string_ from '../string.js';\nvar _ol_format_XSD_ = {};\n\n\n/**\n * @const\n * @type {string}\n */\n_ol_format_XSD_.NAMESPACE_URI = 'http://www.w3.org/2001/XMLSchema';\n\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\n_ol_format_XSD_.readBoolean = function(node) {\n  var s = _ol_xml_.getAllTextContent(node, false);\n  return _ol_format_XSD_.readBooleanString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {boolean|undefined} Boolean.\n */\n_ol_format_XSD_.readBooleanString = function(string) {\n  var m = /^\\s*(true|1)|(false|0)\\s*$/.exec(string);\n  if (m) {\n    return m[1] !== undefined || false;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} DateTime in seconds.\n */\n_ol_format_XSD_.readDateTime = function(node) {\n  var s = _ol_xml_.getAllTextContent(node, false);\n  var dateTime = Date.parse(s);\n  return isNaN(dateTime) ? undefined : dateTime / 1000;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Decimal.\n */\n_ol_format_XSD_.readDecimal = function(node) {\n  var s = _ol_xml_.getAllTextContent(node, false);\n  return _ol_format_XSD_.readDecimalString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Decimal.\n */\n_ol_format_XSD_.readDecimalString = function(string) {\n  // FIXME check spec\n  var m = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*$/i.exec(string);\n  if (m) {\n    return parseFloat(m[1]);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Non negative integer.\n */\n_ol_format_XSD_.readNonNegativeInteger = function(node) {\n  var s = _ol_xml_.getAllTextContent(node, false);\n  return _ol_format_XSD_.readNonNegativeIntegerString(s);\n};\n\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Non negative integer.\n */\n_ol_format_XSD_.readNonNegativeIntegerString = function(string) {\n  var m = /^\\s*(\\d+)\\s*$/.exec(string);\n  if (m) {\n    return parseInt(m[1], 10);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {string|undefined} String.\n */\n_ol_format_XSD_.readString = function(node) {\n  return _ol_xml_.getAllTextContent(node, false).trim();\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the boolean to.\n * @param {boolean} bool Boolean.\n */\n_ol_format_XSD_.writeBooleanTextNode = function(node, bool) {\n  _ol_format_XSD_.writeStringTextNode(node, (bool) ? '1' : '0');\n};\n\n\n/**\n * @param {Node} node Node to append a CDATA Section with the string to.\n * @param {string} string String.\n */\n_ol_format_XSD_.writeCDATASection = function(node, string) {\n  node.appendChild(_ol_xml_.DOCUMENT.createCDATASection(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the dateTime to.\n * @param {number} dateTime DateTime in seconds.\n */\n_ol_format_XSD_.writeDateTimeTextNode = function(node, dateTime) {\n  var date = new Date(dateTime * 1000);\n  var string = date.getUTCFullYear() + '-' +\n      _ol_string_.padNumber(date.getUTCMonth() + 1, 2) + '-' +\n      _ol_string_.padNumber(date.getUTCDate(), 2) + 'T' +\n      _ol_string_.padNumber(date.getUTCHours(), 2) + ':' +\n      _ol_string_.padNumber(date.getUTCMinutes(), 2) + ':' +\n      _ol_string_.padNumber(date.getUTCSeconds(), 2) + 'Z';\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} decimal Decimal.\n */\n_ol_format_XSD_.writeDecimalTextNode = function(node, decimal) {\n  var string = decimal.toPrecision();\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} nonNegativeInteger Non negative integer.\n */\n_ol_format_XSD_.writeNonNegativeIntegerTextNode = function(node, nonNegativeInteger) {\n  var string = nonNegativeInteger.toString();\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\n\n\n/**\n * @param {Node} node Node to append a TextNode with the string to.\n * @param {string} string String.\n */\n_ol_format_XSD_.writeStringTextNode = function(node, string) {\n  node.appendChild(_ol_xml_.DOCUMENT.createTextNode(string));\n};\nexport default _ol_format_XSD_;\n","import _ol_ from '../index.js';\nimport _ol_extent_ from '../extent.js';\nimport _ol_format_Feature_ from '../format/feature.js';\nimport _ol_format_GMLBase_ from '../format/gmlbase.js';\nimport _ol_format_XSD_ from '../format/xsd.js';\nimport _ol_geom_Geometry_ from '../geom/geometry.js';\nimport _ol_obj_ from '../obj.js';\nimport _ol_proj_ from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format,\n * version 2.1.2.\n *\n * @constructor\n * @param {olx.format.GMLOptions=} opt_options Optional configuration object.\n * @extends {ol.format.GMLBase}\n * @api\n */\nvar _ol_format_GML2_ = function(opt_options) {\n  var options = /** @type {olx.format.GMLOptions} */\n      (opt_options ? opt_options : {});\n\n  _ol_format_GMLBase_.call(this, options);\n\n  this.FEATURE_COLLECTION_PARSERS[_ol_format_GMLBase_.GMLNS][\n      'featureMember'] =\n      _ol_xml_.makeArrayPusher(_ol_format_GMLBase_.prototype.readFeaturesInternal);\n\n  /**\n   * @inheritDoc\n   */\n  this.schemaLocation = options.schemaLocation ?\n    options.schemaLocation : _ol_format_GML2_.schemaLocation_;\n\n};\n\n_ol_.inherits(_ol_format_GML2_, _ol_format_GMLBase_);\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\n_ol_format_GML2_.schemaLocation_ = _ol_format_GMLBase_.GMLNS +\n    ' http://schemas.opengis.net/gml/2.1.2/feature.xsd';\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\n_ol_format_GML2_.prototype.readFlatCoordinates_ = function(node, objectStack) {\n  var s = _ol_xml_.getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n  var context = /** @type {ol.XmlNodeStackItem} */ (objectStack[0]);\n  var containerSrs = context['srsName'];\n  var axisOrientation = 'enu';\n  if (containerSrs) {\n    var proj = _ol_proj_.get(containerSrs);\n    if (proj) {\n      axisOrientation = proj.getAxisOrientation();\n    }\n  }\n  var coordsGroups = s.trim().split(/\\s+/);\n  var x, y, z;\n  var flatCoordinates = [];\n  for (var i = 0, ii = coordsGroups.length; i < ii; i++) {\n    var coords = coordsGroups[i].split(/,+/);\n    x = parseFloat(coords[0]);\n    y = parseFloat(coords[1]);\n    z = (coords.length === 3) ? parseFloat(coords[2]) : 0;\n    if (axisOrientation.substr(0, 2) === 'en') {\n      flatCoordinates.push(x, y, z);\n    } else {\n      flatCoordinates.push(y, x, z);\n    }\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.Extent|undefined} Envelope.\n */\n_ol_format_GML2_.prototype.readBox_ = function(node, objectStack) {\n  /** @type {Array.<number>} */\n  var flatCoordinates = _ol_xml_.pushParseAndPop([null],\n      this.BOX_PARSERS_, node, objectStack, this);\n  return _ol_extent_.createOrUpdate(flatCoordinates[1][0],\n      flatCoordinates[1][1], flatCoordinates[1][3],\n      flatCoordinates[1][4]);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\n_ol_format_GML2_.prototype.innerBoundaryIsParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  var flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n      this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    var flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(flatLinearRing);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\n_ol_format_GML2_.prototype.outerBoundaryIsParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  var flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n      this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    var flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\n_ol_format_GML2_.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'coordinates': _ol_xml_.makeReplacer(\n        _ol_format_GML2_.prototype.readFlatCoordinates_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\n_ol_format_GML2_.prototype.FLAT_LINEAR_RINGS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'innerBoundaryIs': _ol_format_GML2_.prototype.innerBoundaryIsParser_,\n    'outerBoundaryIs': _ol_format_GML2_.prototype.outerBoundaryIsParser_\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\n_ol_format_GML2_.prototype.BOX_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'coordinates': _ol_xml_.makeArrayPusher(\n        _ol_format_GML2_.prototype.readFlatCoordinates_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\n_ol_format_GML2_.prototype.GEOMETRY_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': _ol_xml_.makeReplacer(_ol_format_GMLBase_.prototype.readPoint),\n    'MultiPoint': _ol_xml_.makeReplacer(\n        _ol_format_GMLBase_.prototype.readMultiPoint),\n    'LineString': _ol_xml_.makeReplacer(\n        _ol_format_GMLBase_.prototype.readLineString),\n    'MultiLineString': _ol_xml_.makeReplacer(\n        _ol_format_GMLBase_.prototype.readMultiLineString),\n    'LinearRing': _ol_xml_.makeReplacer(\n        _ol_format_GMLBase_.prototype.readLinearRing),\n    'Polygon': _ol_xml_.makeReplacer(_ol_format_GMLBase_.prototype.readPolygon),\n    'MultiPolygon': _ol_xml_.makeReplacer(\n        _ol_format_GMLBase_.prototype.readMultiPolygon),\n    'Box': _ol_xml_.makeReplacer(_ol_format_GML2_.prototype.readBox_)\n  }\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\n_ol_format_GML2_.prototype.GEOMETRY_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  var context = objectStack[objectStack.length - 1];\n  var multiSurface = context['multiSurface'];\n  var surface = context['surface'];\n  var multiCurve = context['multiCurve'];\n  var nodeName;\n  if (!Array.isArray(value)) {\n    nodeName = /** @type {ol.geom.Geometry} */ (value).getType();\n    if (nodeName === 'MultiPolygon' && multiSurface === true) {\n      nodeName = 'MultiSurface';\n    } else if (nodeName === 'Polygon' && surface === true) {\n      nodeName = 'Surface';\n    } else if (nodeName === 'MultiLineString' && multiCurve === true) {\n      nodeName = 'MultiCurve';\n    }\n  } else {\n    nodeName = 'Envelope';\n  }\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n      nodeName);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n */\n_ol_format_GML2_.prototype.writeFeatureElement = function(node, feature, objectStack) {\n  var fid = feature.getId();\n  if (fid) {\n    node.setAttribute('fid', fid);\n  }\n  var context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  var featureNS = context['featureNS'];\n  var geometryName = feature.getGeometryName();\n  if (!context.serializers) {\n    context.serializers = {};\n    context.serializers[featureNS] = {};\n  }\n  var properties = feature.getProperties();\n  var keys = [], values = [];\n  for (var key in properties) {\n    var value = properties[key];\n    if (value !== null) {\n      keys.push(key);\n      values.push(value);\n      if (key == geometryName || value instanceof _ol_geom_Geometry_) {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n              this.writeGeometryElement, this);\n        }\n      } else {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n              _ol_format_XSD_.writeStringTextNode);\n        }\n      }\n    }\n  }\n  var item = _ol_obj_.assign({}, context);\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n      (item), context.serializers,\n      _ol_xml_.makeSimpleNodeFactory(undefined, featureNS),\n      values,\n      objectStack, keys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Geometry|ol.Extent} geometry Geometry.\n * @param {Array.<*>} objectStack Node stack.\n */\n_ol_format_GML2_.prototype.writeGeometryElement = function(node, geometry, objectStack) {\n  var context = /** @type {olx.format.WriteOptions} */ (objectStack[objectStack.length - 1]);\n  var item = _ol_obj_.assign({}, context);\n  item.node = node;\n  var value;\n  if (Array.isArray(geometry)) {\n    if (context.dataProjection) {\n      value = _ol_proj_.transformExtent(\n          geometry, context.featureProjection, context.dataProjection);\n    } else {\n      value = geometry;\n    }\n  } else {\n    value =\n        _ol_format_Feature_.transformWithOptions(/** @type {ol.geom.Geometry} */ (geometry), true, context);\n  }\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n      (item), _ol_format_GML2_.GEOMETRY_SERIALIZERS_,\n      this.GEOMETRY_NODE_FACTORY_, [value],\n      objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} geometry LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\n_ol_format_GML2_.prototype.writeCurveOrLineString_ = function(node, geometry, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  var srsName = context['srsName'];\n  if (node.nodeName !== 'LineStringSegment' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'LineString' ||\n      node.nodeName === 'LineStringSegment') {\n    var coordinates = this.createCoordinatesNode_(node.namespaceURI);\n    node.appendChild(coordinates);\n    this.writeCoordinates_(coordinates, geometry, objectStack);\n  } else if (node.nodeName === 'Curve') {\n    var segments = _ol_xml_.createElementNS(node.namespaceURI, 'segments');\n    node.appendChild(segments);\n    this.writeCurveSegments_(segments,\n        geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {string} namespaceURI XML namespace.\n * @returns {Node} coordinates node.\n * @private\n */\n_ol_format_GML2_.prototype.createCoordinatesNode_ = function(namespaceURI) {\n  var coordinates = _ol_xml_.createElementNS(namespaceURI, 'coordinates');\n  coordinates.setAttribute('decimal', '.');\n  coordinates.setAttribute('cs', ',');\n  coordinates.setAttribute('ts', ' ');\n\n  return coordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString|ol.geom.LinearRing} value Geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\n_ol_format_GML2_.prototype.writeCoordinates_ = function(node, value, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  var hasZ = context['hasZ'];\n  var srsName = context['srsName'];\n  // only 2d for simple features profile\n  var points = value.getCoordinates();\n  var len = points.length;\n  var parts = new Array(len);\n  var point;\n  for (var i = 0; i < len; ++i) {\n    point = points[i];\n    parts[i] = this.getCoords_(point, srsName, hasZ);\n  }\n  _ol_format_XSD_.writeStringTextNode(node, parts.join(' '));\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\n_ol_format_GML2_.prototype.writeCurveSegments_ = function(node, line, objectStack) {\n  var child = _ol_xml_.createElementNS(node.namespaceURI,\n      'LineStringSegment');\n  node.appendChild(child);\n  this.writeCurveOrLineString_(child, line, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} geometry Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\n_ol_format_GML2_.prototype.writeSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  var hasZ = context['hasZ'];\n  var srsName = context['srsName'];\n  if (node.nodeName !== 'PolygonPatch' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n    var rings = geometry.getLinearRings();\n    _ol_xml_.pushSerializeAndPop(\n        {node: node, hasZ: hasZ, srsName: srsName},\n        _ol_format_GML2_.RING_SERIALIZERS_,\n        this.RING_NODE_FACTORY_,\n        rings, objectStack, undefined, this);\n  } else if (node.nodeName === 'Surface') {\n    var patches = _ol_xml_.createElementNS(node.namespaceURI, 'patches');\n    node.appendChild(patches);\n    this.writeSurfacePatches_(\n        patches, geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node} Node.\n * @private\n */\n_ol_format_GML2_.prototype.RING_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  var context = objectStack[objectStack.length - 1];\n  var parentNode = context.node;\n  var exteriorWritten = context['exteriorWritten'];\n  if (exteriorWritten === undefined) {\n    context['exteriorWritten'] = true;\n  }\n  return _ol_xml_.createElementNS(parentNode.namespaceURI,\n      exteriorWritten !== undefined ? 'innerBoundaryIs' : 'outerBoundaryIs');\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\n_ol_format_GML2_.prototype.writeSurfacePatches_ = function(node, polygon, objectStack) {\n  var child = _ol_xml_.createElementNS(node.namespaceURI, 'PolygonPatch');\n  node.appendChild(child);\n  this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} ring LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\n_ol_format_GML2_.prototype.writeRing_ = function(node, ring, objectStack) {\n  var linearRing = _ol_xml_.createElementNS(node.namespaceURI, 'LinearRing');\n  node.appendChild(linearRing);\n  this.writeLinearRing_(linearRing, ring, objectStack);\n};\n\n\n/**\n * @param {Array.<number>} point Point geometry.\n * @param {string=} opt_srsName Optional srsName\n * @param {boolean=} opt_hasZ whether the geometry has a Z coordinate (is 3D) or not.\n * @return {string} The coords string.\n * @private\n */\n_ol_format_GML2_.prototype.getCoords_ = function(point, opt_srsName, opt_hasZ) {\n  var axisOrientation = 'enu';\n  if (opt_srsName) {\n    axisOrientation = _ol_proj_.get(opt_srsName).getAxisOrientation();\n  }\n  var coords = ((axisOrientation.substr(0, 2) === 'en') ?\n    point[0] + ',' + point[1] :\n    point[1] + ',' + point[0]);\n  if (opt_hasZ) {\n    // For newly created points, Z can be undefined.\n    var z = point[2] || 0;\n    coords += ',' + z;\n  }\n\n  return coords;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiLineString} geometry MultiLineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\n_ol_format_GML2_.prototype.writeMultiCurveOrLineString_ = function(node, geometry, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  var hasZ = context['hasZ'];\n  var srsName = context['srsName'];\n  var curve = context['curve'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  var lines = geometry.getLineStrings();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, curve: curve},\n      _ol_format_GML2_.LINESTRINGORCURVEMEMBER_SERIALIZERS_,\n      this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, lines,\n      objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} geometry Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\n_ol_format_GML2_.prototype.writePoint_ = function(node, geometry, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  var hasZ = context['hasZ'];\n  var srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  var coordinates = this.createCoordinatesNode_(node.namespaceURI);\n  node.appendChild(coordinates);\n  var point = geometry.getCoordinates();\n  var coord = this.getCoords_(point, srsName, hasZ);\n  _ol_format_XSD_.writeStringTextNode(coordinates, coord);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPoint} geometry MultiPoint geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\n_ol_format_GML2_.prototype.writeMultiPoint_ = function(node, geometry,\n    objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  var hasZ = context['hasZ'];\n  var srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  var points = geometry.getPoints();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName},\n      _ol_format_GML2_.POINTMEMBER_SERIALIZERS_,\n      _ol_xml_.makeSimpleNodeFactory('pointMember'), points,\n      objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} point Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\n_ol_format_GML2_.prototype.writePointMember_ = function(node, point, objectStack) {\n  var child = _ol_xml_.createElementNS(node.namespaceURI, 'Point');\n  node.appendChild(child);\n  this.writePoint_(child, point, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\n_ol_format_GML2_.prototype.writeLineStringOrCurveMember_ = function(node, line, objectStack) {\n  var child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeCurveOrLineString_(child, line, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} geometry LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\n_ol_format_GML2_.prototype.writeLinearRing_ = function(node, geometry, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  var srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  var coordinates = this.createCoordinatesNode_(node.namespaceURI);\n  node.appendChild(coordinates);\n  this.writeCoordinates_(coordinates, geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPolygon} geometry MultiPolygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\n_ol_format_GML2_.prototype.writeMultiSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  var hasZ = context['hasZ'];\n  var srsName = context['srsName'];\n  var surface = context['surface'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  var polygons = geometry.getPolygons();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, surface: surface},\n      _ol_format_GML2_.SURFACEORPOLYGONMEMBER_SERIALIZERS_,\n      this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, polygons,\n      objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\n_ol_format_GML2_.prototype.writeSurfaceOrPolygonMember_ = function(node, polygon, objectStack) {\n  var child = this.GEOMETRY_NODE_FACTORY_(\n      polygon, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Extent} extent Extent.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\n_ol_format_GML2_.prototype.writeEnvelope = function(node, extent, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  var srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  var keys = ['lowerCorner', 'upperCorner'];\n  var values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n      ({node: node}), _ol_format_GML2_.ENVELOPE_SERIALIZERS_,\n      _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n      values,\n      objectStack, keys, this);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\n_ol_format_GML2_.GEOMETRY_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'Curve': _ol_xml_.makeChildAppender(\n        _ol_format_GML2_.prototype.writeCurveOrLineString_),\n    'MultiCurve': _ol_xml_.makeChildAppender(\n        _ol_format_GML2_.prototype.writeMultiCurveOrLineString_),\n    'Point': _ol_xml_.makeChildAppender(_ol_format_GML2_.prototype.writePoint_),\n    'MultiPoint': _ol_xml_.makeChildAppender(\n        _ol_format_GML2_.prototype.writeMultiPoint_),\n    'LineString': _ol_xml_.makeChildAppender(\n        _ol_format_GML2_.prototype.writeCurveOrLineString_),\n    'MultiLineString': _ol_xml_.makeChildAppender(\n        _ol_format_GML2_.prototype.writeMultiCurveOrLineString_),\n    'LinearRing': _ol_xml_.makeChildAppender(\n        _ol_format_GML2_.prototype.writeLinearRing_),\n    'Polygon': _ol_xml_.makeChildAppender(\n        _ol_format_GML2_.prototype.writeSurfaceOrPolygon_),\n    'MultiPolygon': _ol_xml_.makeChildAppender(\n        _ol_format_GML2_.prototype.writeMultiSurfaceOrPolygon_),\n    'Surface': _ol_xml_.makeChildAppender(\n        _ol_format_GML2_.prototype.writeSurfaceOrPolygon_),\n    'MultiSurface': _ol_xml_.makeChildAppender(\n        _ol_format_GML2_.prototype.writeMultiSurfaceOrPolygon_),\n    'Envelope': _ol_xml_.makeChildAppender(\n        _ol_format_GML2_.prototype.writeEnvelope)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\n_ol_format_GML2_.RING_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'outerBoundaryIs': _ol_xml_.makeChildAppender(_ol_format_GML2_.prototype.writeRing_),\n    'innerBoundaryIs': _ol_xml_.makeChildAppender(_ol_format_GML2_.prototype.writeRing_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\n_ol_format_GML2_.POINTMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': _ol_xml_.makeChildAppender(\n        _ol_format_GML2_.prototype.writePointMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\n_ol_format_GML2_.LINESTRINGORCURVEMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': _ol_xml_.makeChildAppender(\n        _ol_format_GML2_.prototype.writeLineStringOrCurveMember_),\n    'curveMember': _ol_xml_.makeChildAppender(\n        _ol_format_GML2_.prototype.writeLineStringOrCurveMember_)\n  }\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\n_ol_format_GML2_.prototype.MULTIGEOMETRY_MEMBER_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  var parentNode = objectStack[objectStack.length - 1].node;\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n      _ol_format_GML2_.MULTIGEOMETRY_TO_MEMBER_NODENAME_[parentNode.nodeName]);\n};\n\n/**\n * @const\n * @type {Object.<string, string>}\n * @private\n */\n_ol_format_GML2_.MULTIGEOMETRY_TO_MEMBER_NODENAME_ = {\n  'MultiLineString': 'lineStringMember',\n  'MultiCurve': 'curveMember',\n  'MultiPolygon': 'polygonMember',\n  'MultiSurface': 'surfaceMember'\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\n_ol_format_GML2_.SURFACEORPOLYGONMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': _ol_xml_.makeChildAppender(\n        _ol_format_GML2_.prototype.writeSurfaceOrPolygonMember_),\n    'polygonMember': _ol_xml_.makeChildAppender(\n        _ol_format_GML2_.prototype.writeSurfaceOrPolygonMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\n_ol_format_GML2_.ENVELOPE_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': _ol_xml_.makeChildAppender(_ol_format_XSD_.writeStringTextNode),\n    'upperCorner': _ol_xml_.makeChildAppender(_ol_format_XSD_.writeStringTextNode)\n  }\n};\nexport default _ol_format_GML2_;\n","import _ol_ from '../index.js';\nimport _ol_array_ from '../array.js';\nimport _ol_extent_ from '../extent.js';\nimport _ol_format_Feature_ from '../format/feature.js';\nimport _ol_format_GMLBase_ from '../format/gmlbase.js';\nimport _ol_format_XSD_ from '../format/xsd.js';\nimport _ol_geom_Geometry_ from '../geom/geometry.js';\nimport _ol_geom_GeometryLayout_ from '../geom/geometrylayout.js';\nimport _ol_geom_LineString_ from '../geom/linestring.js';\nimport _ol_geom_MultiLineString_ from '../geom/multilinestring.js';\nimport _ol_geom_MultiPolygon_ from '../geom/multipolygon.js';\nimport _ol_geom_Polygon_ from '../geom/polygon.js';\nimport _ol_obj_ from '../obj.js';\nimport _ol_proj_ from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format\n * version 3.1.1.\n * Currently only supports GML 3.1.1 Simple Features profile.\n *\n * @constructor\n * @param {olx.format.GMLOptions=} opt_options\n *     Optional configuration object.\n * @extends {ol.format.GMLBase}\n * @api\n */\nvar _ol_format_GML3_ = function(opt_options) {\n  var options = /** @type {olx.format.GMLOptions} */\n      (opt_options ? opt_options : {});\n\n  _ol_format_GMLBase_.call(this, options);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.surface_ = options.surface !== undefined ? options.surface : false;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.curve_ = options.curve !== undefined ? options.curve : false;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.multiCurve_ = options.multiCurve !== undefined ?\n    options.multiCurve : true;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.multiSurface_ = options.multiSurface !== undefined ?\n    options.multiSurface : true;\n\n  /**\n   * @inheritDoc\n   */\n  this.schemaLocation = options.schemaLocation ?\n    options.schemaLocation : _ol_format_GML3_.schemaLocation_;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hasZ = options.hasZ !== undefined ?\n    options.hasZ : false;\n\n};\n\n_ol_.inherits(_ol_format_GML3_, _ol_format_GMLBase_);\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\n_ol_format_GML3_.schemaLocation_ = _ol_format_GMLBase_.GMLNS +\n    ' http://schemas.opengis.net/gml/3.1.1/profiles/gmlsfProfile/' +\n    '1.0.0/gmlsf.xsd';\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.MultiLineString|undefined} MultiLineString.\n */\n_ol_format_GML3_.prototype.readMultiCurve_ = function(node, objectStack) {\n  /** @type {Array.<ol.geom.LineString>} */\n  var lineStrings = _ol_xml_.pushParseAndPop([],\n      this.MULTICURVE_PARSERS_, node, objectStack, this);\n  if (lineStrings) {\n    var multiLineString = new _ol_geom_MultiLineString_(null);\n    multiLineString.setLineStrings(lineStrings);\n    return multiLineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.MultiPolygon|undefined} MultiPolygon.\n */\n_ol_format_GML3_.prototype.readMultiSurface_ = function(node, objectStack) {\n  /** @type {Array.<ol.geom.Polygon>} */\n  var polygons = _ol_xml_.pushParseAndPop([],\n      this.MULTISURFACE_PARSERS_, node, objectStack, this);\n  if (polygons) {\n    var multiPolygon = new _ol_geom_MultiPolygon_(null);\n    multiPolygon.setPolygons(polygons);\n    return multiPolygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\n_ol_format_GML3_.prototype.curveMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.CURVEMEMBER_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\n_ol_format_GML3_.prototype.surfaceMemberParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(this.SURFACEMEMBER_PARSERS_,\n      node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<(Array.<number>)>|undefined} flat coordinates.\n */\n_ol_format_GML3_.prototype.readPatch_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n      this.PATCHES_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} flat coordinates.\n */\n_ol_format_GML3_.prototype.readSegment_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n      this.SEGMENTS_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<(Array.<number>)>|undefined} flat coordinates.\n */\n_ol_format_GML3_.prototype.readPolygonPatch_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n      this.FLAT_LINEAR_RINGS_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} flat coordinates.\n */\n_ol_format_GML3_.prototype.readLineStringSegment_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop([null],\n      this.GEOMETRY_FLAT_COORDINATES_PARSERS_,\n      node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\n_ol_format_GML3_.prototype.interiorParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  var flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n      this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    var flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(flatLinearRing);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\n_ol_format_GML3_.prototype.exteriorParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  var flatLinearRing = _ol_xml_.pushParseAndPop(undefined,\n      this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    var flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.Polygon|undefined} Polygon.\n */\n_ol_format_GML3_.prototype.readSurface_ = function(node, objectStack) {\n  /** @type {Array.<Array.<number>>} */\n  var flatLinearRings = _ol_xml_.pushParseAndPop([null],\n      this.SURFACE_PARSERS_, node, objectStack, this);\n  if (flatLinearRings && flatLinearRings[0]) {\n    var polygon = new _ol_geom_Polygon_(null);\n    var flatCoordinates = flatLinearRings[0];\n    var ends = [flatCoordinates.length];\n    var i, ii;\n    for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      _ol_array_.extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    polygon.setFlatCoordinates(\n        _ol_geom_GeometryLayout_.XYZ, flatCoordinates, ends);\n    return polygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.geom.LineString|undefined} LineString.\n */\n_ol_format_GML3_.prototype.readCurve_ = function(node, objectStack) {\n  /** @type {Array.<number>} */\n  var flatCoordinates = _ol_xml_.pushParseAndPop([null],\n      this.CURVE_PARSERS_, node, objectStack, this);\n  if (flatCoordinates) {\n    var lineString = new _ol_geom_LineString_(null);\n    lineString.setFlatCoordinates(_ol_geom_GeometryLayout_.XYZ, flatCoordinates);\n    return lineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {ol.Extent|undefined} Envelope.\n */\n_ol_format_GML3_.prototype.readEnvelope_ = function(node, objectStack) {\n  /** @type {Array.<number>} */\n  var flatCoordinates = _ol_xml_.pushParseAndPop([null],\n      this.ENVELOPE_PARSERS_, node, objectStack, this);\n  return _ol_extent_.createOrUpdate(flatCoordinates[1][0],\n      flatCoordinates[1][1], flatCoordinates[2][0],\n      flatCoordinates[2][1]);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\n_ol_format_GML3_.prototype.readFlatPos_ = function(node, objectStack) {\n  var s = _ol_xml_.getAllTextContent(node, false);\n  var re = /^\\s*([+\\-]?\\d*\\.?\\d+(?:[eE][+\\-]?\\d+)?)\\s*/;\n  /** @type {Array.<number>} */\n  var flatCoordinates = [];\n  var m;\n  while ((m = re.exec(s))) {\n    flatCoordinates.push(parseFloat(m[1]));\n    s = s.substr(m[0].length);\n  }\n  if (s !== '') {\n    return undefined;\n  }\n  var context = objectStack[0];\n  var containerSrs = context['srsName'];\n  var axisOrientation = 'enu';\n  if (containerSrs) {\n    var proj = _ol_proj_.get(containerSrs);\n    axisOrientation = proj.getAxisOrientation();\n  }\n  if (axisOrientation === 'neu') {\n    var i, ii;\n    for (i = 0, ii = flatCoordinates.length; i < ii; i += 3) {\n      var y = flatCoordinates[i];\n      var x = flatCoordinates[i + 1];\n      flatCoordinates[i] = x;\n      flatCoordinates[i + 1] = y;\n    }\n  }\n  var len = flatCoordinates.length;\n  if (len == 2) {\n    flatCoordinates.push(0);\n  }\n  if (len === 0) {\n    return undefined;\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\n_ol_format_GML3_.prototype.readFlatPosList_ = function(node, objectStack) {\n  var s = _ol_xml_.getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n  var context = objectStack[0];\n  var containerSrs = context['srsName'];\n  var contextDimension = context['srsDimension'];\n  var axisOrientation = 'enu';\n  if (containerSrs) {\n    var proj = _ol_proj_.get(containerSrs);\n    axisOrientation = proj.getAxisOrientation();\n  }\n  var coords = s.split(/\\s+/);\n  // The \"dimension\" attribute is from the GML 3.0.1 spec.\n  var dim = 2;\n  if (node.getAttribute('srsDimension')) {\n    dim = _ol_format_XSD_.readNonNegativeIntegerString(\n        node.getAttribute('srsDimension'));\n  } else if (node.getAttribute('dimension')) {\n    dim = _ol_format_XSD_.readNonNegativeIntegerString(\n        node.getAttribute('dimension'));\n  } else if (node.parentNode.getAttribute('srsDimension')) {\n    dim = _ol_format_XSD_.readNonNegativeIntegerString(\n        node.parentNode.getAttribute('srsDimension'));\n  } else if (contextDimension) {\n    dim = _ol_format_XSD_.readNonNegativeIntegerString(contextDimension);\n  }\n  var x, y, z;\n  var flatCoordinates = [];\n  for (var i = 0, ii = coords.length; i < ii; i += dim) {\n    x = parseFloat(coords[i]);\n    y = parseFloat(coords[i + 1]);\n    z = (dim === 3) ? parseFloat(coords[i + 2]) : 0;\n    if (axisOrientation.substr(0, 2) === 'en') {\n      flatCoordinates.push(x, y, z);\n    } else {\n      flatCoordinates.push(y, x, z);\n    }\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\n_ol_format_GML3_.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'pos': _ol_xml_.makeReplacer(_ol_format_GML3_.prototype.readFlatPos_),\n    'posList': _ol_xml_.makeReplacer(_ol_format_GML3_.prototype.readFlatPosList_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\n_ol_format_GML3_.prototype.FLAT_LINEAR_RINGS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'interior': _ol_format_GML3_.prototype.interiorParser_,\n    'exterior': _ol_format_GML3_.prototype.exteriorParser_\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\n_ol_format_GML3_.prototype.GEOMETRY_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': _ol_xml_.makeReplacer(_ol_format_GMLBase_.prototype.readPoint),\n    'MultiPoint': _ol_xml_.makeReplacer(\n        _ol_format_GMLBase_.prototype.readMultiPoint),\n    'LineString': _ol_xml_.makeReplacer(\n        _ol_format_GMLBase_.prototype.readLineString),\n    'MultiLineString': _ol_xml_.makeReplacer(\n        _ol_format_GMLBase_.prototype.readMultiLineString),\n    'LinearRing': _ol_xml_.makeReplacer(\n        _ol_format_GMLBase_.prototype.readLinearRing),\n    'Polygon': _ol_xml_.makeReplacer(_ol_format_GMLBase_.prototype.readPolygon),\n    'MultiPolygon': _ol_xml_.makeReplacer(\n        _ol_format_GMLBase_.prototype.readMultiPolygon),\n    'Surface': _ol_xml_.makeReplacer(_ol_format_GML3_.prototype.readSurface_),\n    'MultiSurface': _ol_xml_.makeReplacer(\n        _ol_format_GML3_.prototype.readMultiSurface_),\n    'Curve': _ol_xml_.makeReplacer(_ol_format_GML3_.prototype.readCurve_),\n    'MultiCurve': _ol_xml_.makeReplacer(\n        _ol_format_GML3_.prototype.readMultiCurve_),\n    'Envelope': _ol_xml_.makeReplacer(_ol_format_GML3_.prototype.readEnvelope_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\n_ol_format_GML3_.prototype.MULTICURVE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'curveMember': _ol_xml_.makeArrayPusher(\n        _ol_format_GML3_.prototype.curveMemberParser_),\n    'curveMembers': _ol_xml_.makeArrayPusher(\n        _ol_format_GML3_.prototype.curveMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\n_ol_format_GML3_.prototype.MULTISURFACE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': _ol_xml_.makeArrayPusher(\n        _ol_format_GML3_.prototype.surfaceMemberParser_),\n    'surfaceMembers': _ol_xml_.makeArrayPusher(\n        _ol_format_GML3_.prototype.surfaceMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\n_ol_format_GML3_.prototype.CURVEMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineString': _ol_xml_.makeArrayPusher(\n        _ol_format_GMLBase_.prototype.readLineString),\n    'Curve': _ol_xml_.makeArrayPusher(_ol_format_GML3_.prototype.readCurve_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\n_ol_format_GML3_.prototype.SURFACEMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Polygon': _ol_xml_.makeArrayPusher(_ol_format_GMLBase_.prototype.readPolygon),\n    'Surface': _ol_xml_.makeArrayPusher(_ol_format_GML3_.prototype.readSurface_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\n_ol_format_GML3_.prototype.SURFACE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'patches': _ol_xml_.makeReplacer(_ol_format_GML3_.prototype.readPatch_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\n_ol_format_GML3_.prototype.CURVE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'segments': _ol_xml_.makeReplacer(_ol_format_GML3_.prototype.readSegment_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\n_ol_format_GML3_.prototype.ENVELOPE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': _ol_xml_.makeArrayPusher(\n        _ol_format_GML3_.prototype.readFlatPosList_),\n    'upperCorner': _ol_xml_.makeArrayPusher(\n        _ol_format_GML3_.prototype.readFlatPosList_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\n_ol_format_GML3_.prototype.PATCHES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'PolygonPatch': _ol_xml_.makeReplacer(\n        _ol_format_GML3_.prototype.readPolygonPatch_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\n_ol_format_GML3_.prototype.SEGMENTS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineStringSegment': _ol_xml_.makeReplacer(\n        _ol_format_GML3_.prototype.readLineStringSegment_)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} value Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\n_ol_format_GML3_.prototype.writePos_ = function(node, value, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  var hasZ = context['hasZ'];\n  var srsDimension = hasZ ? 3 : 2;\n  node.setAttribute('srsDimension', srsDimension);\n  var srsName = context['srsName'];\n  var axisOrientation = 'enu';\n  if (srsName) {\n    axisOrientation = _ol_proj_.get(srsName).getAxisOrientation();\n  }\n  var point = value.getCoordinates();\n  var coords;\n  // only 2d for simple features profile\n  if (axisOrientation.substr(0, 2) === 'en') {\n    coords = (point[0] + ' ' + point[1]);\n  } else {\n    coords = (point[1] + ' ' + point[0]);\n  }\n  if (hasZ) {\n    // For newly created points, Z can be undefined.\n    var z = point[2] || 0;\n    coords += ' ' + z;\n  }\n  _ol_format_XSD_.writeStringTextNode(node, coords);\n};\n\n\n/**\n * @param {Array.<number>} point Point geometry.\n * @param {string=} opt_srsName Optional srsName\n * @param {boolean=} opt_hasZ whether the geometry has a Z coordinate (is 3D) or not.\n * @return {string} The coords string.\n * @private\n */\n_ol_format_GML3_.prototype.getCoords_ = function(point, opt_srsName, opt_hasZ) {\n  var axisOrientation = 'enu';\n  if (opt_srsName) {\n    axisOrientation = _ol_proj_.get(opt_srsName).getAxisOrientation();\n  }\n  var coords = ((axisOrientation.substr(0, 2) === 'en') ?\n    point[0] + ' ' + point[1] :\n    point[1] + ' ' + point[0]);\n  if (opt_hasZ) {\n    // For newly created points, Z can be undefined.\n    var z = point[2] || 0;\n    coords += ' ' + z;\n  }\n\n  return coords;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString|ol.geom.LinearRing} value Geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\n_ol_format_GML3_.prototype.writePosList_ = function(node, value, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  var hasZ = context['hasZ'];\n  var srsDimension = hasZ ? 3 : 2;\n  node.setAttribute('srsDimension', srsDimension);\n  var srsName = context['srsName'];\n  // only 2d for simple features profile\n  var points = value.getCoordinates();\n  var len = points.length;\n  var parts = new Array(len);\n  var point;\n  for (var i = 0; i < len; ++i) {\n    point = points[i];\n    parts[i] = this.getCoords_(point, srsName, hasZ);\n  }\n  _ol_format_XSD_.writeStringTextNode(node, parts.join(' '));\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} geometry Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\n_ol_format_GML3_.prototype.writePoint_ = function(node, geometry, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  var srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  var pos = _ol_xml_.createElementNS(node.namespaceURI, 'pos');\n  node.appendChild(pos);\n  this.writePos_(pos, geometry, objectStack);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\n_ol_format_GML3_.ENVELOPE_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': _ol_xml_.makeChildAppender(_ol_format_XSD_.writeStringTextNode),\n    'upperCorner': _ol_xml_.makeChildAppender(_ol_format_XSD_.writeStringTextNode)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Extent} extent Extent.\n * @param {Array.<*>} objectStack Node stack.\n */\n_ol_format_GML3_.prototype.writeEnvelope = function(node, extent, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  var srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  var keys = ['lowerCorner', 'upperCorner'];\n  var values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n      ({node: node}), _ol_format_GML3_.ENVELOPE_SERIALIZERS_,\n      _ol_xml_.OBJECT_PROPERTY_NODE_FACTORY,\n      values,\n      objectStack, keys, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} geometry LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\n_ol_format_GML3_.prototype.writeLinearRing_ = function(node, geometry, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  var srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  var posList = _ol_xml_.createElementNS(node.namespaceURI, 'posList');\n  node.appendChild(posList);\n  this.writePosList_(posList, geometry, objectStack);\n};\n\n\n/**\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node} Node.\n * @private\n */\n_ol_format_GML3_.prototype.RING_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  var context = objectStack[objectStack.length - 1];\n  var parentNode = context.node;\n  var exteriorWritten = context['exteriorWritten'];\n  if (exteriorWritten === undefined) {\n    context['exteriorWritten'] = true;\n  }\n  return _ol_xml_.createElementNS(parentNode.namespaceURI,\n      exteriorWritten !== undefined ? 'interior' : 'exterior');\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} geometry Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\n_ol_format_GML3_.prototype.writeSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  var hasZ = context['hasZ'];\n  var srsName = context['srsName'];\n  if (node.nodeName !== 'PolygonPatch' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n    var rings = geometry.getLinearRings();\n    _ol_xml_.pushSerializeAndPop(\n        {node: node, hasZ: hasZ, srsName: srsName},\n        _ol_format_GML3_.RING_SERIALIZERS_,\n        this.RING_NODE_FACTORY_,\n        rings, objectStack, undefined, this);\n  } else if (node.nodeName === 'Surface') {\n    var patches = _ol_xml_.createElementNS(node.namespaceURI, 'patches');\n    node.appendChild(patches);\n    this.writeSurfacePatches_(\n        patches, geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} geometry LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\n_ol_format_GML3_.prototype.writeCurveOrLineString_ = function(node, geometry, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  var srsName = context['srsName'];\n  if (node.nodeName !== 'LineStringSegment' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'LineString' ||\n      node.nodeName === 'LineStringSegment') {\n    var posList = _ol_xml_.createElementNS(node.namespaceURI, 'posList');\n    node.appendChild(posList);\n    this.writePosList_(posList, geometry, objectStack);\n  } else if (node.nodeName === 'Curve') {\n    var segments = _ol_xml_.createElementNS(node.namespaceURI, 'segments');\n    node.appendChild(segments);\n    this.writeCurveSegments_(segments,\n        geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPolygon} geometry MultiPolygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\n_ol_format_GML3_.prototype.writeMultiSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  var hasZ = context['hasZ'];\n  var srsName = context['srsName'];\n  var surface = context['surface'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  var polygons = geometry.getPolygons();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, surface: surface},\n      _ol_format_GML3_.SURFACEORPOLYGONMEMBER_SERIALIZERS_,\n      this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, polygons,\n      objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiPoint} geometry MultiPoint geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\n_ol_format_GML3_.prototype.writeMultiPoint_ = function(node, geometry,\n    objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  var srsName = context['srsName'];\n  var hasZ = context['hasZ'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  var points = geometry.getPoints();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName},\n      _ol_format_GML3_.POINTMEMBER_SERIALIZERS_,\n      _ol_xml_.makeSimpleNodeFactory('pointMember'), points,\n      objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.MultiLineString} geometry MultiLineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\n_ol_format_GML3_.prototype.writeMultiCurveOrLineString_ = function(node, geometry, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  var hasZ = context['hasZ'];\n  var srsName = context['srsName'];\n  var curve = context['curve'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  var lines = geometry.getLineStrings();\n  _ol_xml_.pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, curve: curve},\n      _ol_format_GML3_.LINESTRINGORCURVEMEMBER_SERIALIZERS_,\n      this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, lines,\n      objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LinearRing} ring LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\n_ol_format_GML3_.prototype.writeRing_ = function(node, ring, objectStack) {\n  var linearRing = _ol_xml_.createElementNS(node.namespaceURI, 'LinearRing');\n  node.appendChild(linearRing);\n  this.writeLinearRing_(linearRing, ring, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\n_ol_format_GML3_.prototype.writeSurfaceOrPolygonMember_ = function(node, polygon, objectStack) {\n  var child = this.GEOMETRY_NODE_FACTORY_(\n      polygon, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Point} point Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\n_ol_format_GML3_.prototype.writePointMember_ = function(node, point, objectStack) {\n  var child = _ol_xml_.createElementNS(node.namespaceURI, 'Point');\n  node.appendChild(child);\n  this.writePoint_(child, point, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\n_ol_format_GML3_.prototype.writeLineStringOrCurveMember_ = function(node, line, objectStack) {\n  var child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeCurveOrLineString_(child, line, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\n_ol_format_GML3_.prototype.writeSurfacePatches_ = function(node, polygon, objectStack) {\n  var child = _ol_xml_.createElementNS(node.namespaceURI, 'PolygonPatch');\n  node.appendChild(child);\n  this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\n_ol_format_GML3_.prototype.writeCurveSegments_ = function(node, line, objectStack) {\n  var child = _ol_xml_.createElementNS(node.namespaceURI,\n      'LineStringSegment');\n  node.appendChild(child);\n  this.writeCurveOrLineString_(child, line, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.geom.Geometry|ol.Extent} geometry Geometry.\n * @param {Array.<*>} objectStack Node stack.\n */\n_ol_format_GML3_.prototype.writeGeometryElement = function(node, geometry, objectStack) {\n  var context = /** @type {olx.format.WriteOptions} */ (objectStack[objectStack.length - 1]);\n  var item = _ol_obj_.assign({}, context);\n  item.node = node;\n  var value;\n  if (Array.isArray(geometry)) {\n    if (context.dataProjection) {\n      value = _ol_proj_.transformExtent(\n          geometry, context.featureProjection, context.dataProjection);\n    } else {\n      value = geometry;\n    }\n  } else {\n    value =\n        _ol_format_Feature_.transformWithOptions(/** @type {ol.geom.Geometry} */ (geometry), true, context);\n  }\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n      (item), _ol_format_GML3_.GEOMETRY_SERIALIZERS_,\n      this.GEOMETRY_NODE_FACTORY_, [value],\n      objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n */\n_ol_format_GML3_.prototype.writeFeatureElement = function(node, feature, objectStack) {\n  var fid = feature.getId();\n  if (fid) {\n    node.setAttribute('fid', fid);\n  }\n  var context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  var featureNS = context['featureNS'];\n  var geometryName = feature.getGeometryName();\n  if (!context.serializers) {\n    context.serializers = {};\n    context.serializers[featureNS] = {};\n  }\n  var properties = feature.getProperties();\n  var keys = [], values = [];\n  for (var key in properties) {\n    var value = properties[key];\n    if (value !== null) {\n      keys.push(key);\n      values.push(value);\n      if (key == geometryName || value instanceof _ol_geom_Geometry_) {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n              this.writeGeometryElement, this);\n        }\n      } else {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = _ol_xml_.makeChildAppender(\n              _ol_format_XSD_.writeStringTextNode);\n        }\n      }\n    }\n  }\n  var item = _ol_obj_.assign({}, context);\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n      (item), context.serializers,\n      _ol_xml_.makeSimpleNodeFactory(undefined, featureNS),\n      values,\n      objectStack, keys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<ol.Feature>} features Features.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\n_ol_format_GML3_.prototype.writeFeatureMembers_ = function(node, features, objectStack) {\n  var context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  var featureType = context['featureType'];\n  var featureNS = context['featureNS'];\n  var serializers = {};\n  serializers[featureNS] = {};\n  serializers[featureNS][featureType] = _ol_xml_.makeChildAppender(\n      this.writeFeatureElement, this);\n  var item = _ol_obj_.assign({}, context);\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */\n      (item),\n      serializers,\n      _ol_xml_.makeSimpleNodeFactory(featureType, featureNS), features,\n      objectStack);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\n_ol_format_GML3_.SURFACEORPOLYGONMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': _ol_xml_.makeChildAppender(\n        _ol_format_GML3_.prototype.writeSurfaceOrPolygonMember_),\n    'polygonMember': _ol_xml_.makeChildAppender(\n        _ol_format_GML3_.prototype.writeSurfaceOrPolygonMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\n_ol_format_GML3_.POINTMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': _ol_xml_.makeChildAppender(\n        _ol_format_GML3_.prototype.writePointMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\n_ol_format_GML3_.LINESTRINGORCURVEMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': _ol_xml_.makeChildAppender(\n        _ol_format_GML3_.prototype.writeLineStringOrCurveMember_),\n    'curveMember': _ol_xml_.makeChildAppender(\n        _ol_format_GML3_.prototype.writeLineStringOrCurveMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\n_ol_format_GML3_.RING_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'exterior': _ol_xml_.makeChildAppender(_ol_format_GML3_.prototype.writeRing_),\n    'interior': _ol_xml_.makeChildAppender(_ol_format_GML3_.prototype.writeRing_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\n_ol_format_GML3_.GEOMETRY_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'Curve': _ol_xml_.makeChildAppender(\n        _ol_format_GML3_.prototype.writeCurveOrLineString_),\n    'MultiCurve': _ol_xml_.makeChildAppender(\n        _ol_format_GML3_.prototype.writeMultiCurveOrLineString_),\n    'Point': _ol_xml_.makeChildAppender(_ol_format_GML3_.prototype.writePoint_),\n    'MultiPoint': _ol_xml_.makeChildAppender(\n        _ol_format_GML3_.prototype.writeMultiPoint_),\n    'LineString': _ol_xml_.makeChildAppender(\n        _ol_format_GML3_.prototype.writeCurveOrLineString_),\n    'MultiLineString': _ol_xml_.makeChildAppender(\n        _ol_format_GML3_.prototype.writeMultiCurveOrLineString_),\n    'LinearRing': _ol_xml_.makeChildAppender(\n        _ol_format_GML3_.prototype.writeLinearRing_),\n    'Polygon': _ol_xml_.makeChildAppender(\n        _ol_format_GML3_.prototype.writeSurfaceOrPolygon_),\n    'MultiPolygon': _ol_xml_.makeChildAppender(\n        _ol_format_GML3_.prototype.writeMultiSurfaceOrPolygon_),\n    'Surface': _ol_xml_.makeChildAppender(\n        _ol_format_GML3_.prototype.writeSurfaceOrPolygon_),\n    'MultiSurface': _ol_xml_.makeChildAppender(\n        _ol_format_GML3_.prototype.writeMultiSurfaceOrPolygon_),\n    'Envelope': _ol_xml_.makeChildAppender(\n        _ol_format_GML3_.prototype.writeEnvelope)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, string>}\n * @private\n */\n_ol_format_GML3_.MULTIGEOMETRY_TO_MEMBER_NODENAME_ = {\n  'MultiLineString': 'lineStringMember',\n  'MultiCurve': 'curveMember',\n  'MultiPolygon': 'polygonMember',\n  'MultiSurface': 'surfaceMember'\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\n_ol_format_GML3_.prototype.MULTIGEOMETRY_MEMBER_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  var parentNode = objectStack[objectStack.length - 1].node;\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n      _ol_format_GML3_.MULTIGEOMETRY_TO_MEMBER_NODENAME_[parentNode.nodeName]);\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\n_ol_format_GML3_.prototype.GEOMETRY_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  var context = objectStack[objectStack.length - 1];\n  var multiSurface = context['multiSurface'];\n  var surface = context['surface'];\n  var curve = context['curve'];\n  var multiCurve = context['multiCurve'];\n  var nodeName;\n  if (!Array.isArray(value)) {\n    nodeName = /** @type {ol.geom.Geometry} */ (value).getType();\n    if (nodeName === 'MultiPolygon' && multiSurface === true) {\n      nodeName = 'MultiSurface';\n    } else if (nodeName === 'Polygon' && surface === true) {\n      nodeName = 'Surface';\n    } else if (nodeName === 'LineString' && curve === true) {\n      nodeName = 'Curve';\n    } else if (nodeName === 'MultiLineString' && multiCurve === true) {\n      nodeName = 'MultiCurve';\n    }\n  } else {\n    nodeName = 'Envelope';\n  }\n  return _ol_xml_.createElementNS('http://www.opengis.net/gml',\n      nodeName);\n};\n\n\n/**\n * Encode a geometry in GML 3.1.1 Simple Features.\n *\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @override\n * @api\n */\n_ol_format_GML3_.prototype.writeGeometryNode = function(geometry, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  var geom = _ol_xml_.createElementNS('http://www.opengis.net/gml', 'geom');\n  var context = {node: geom, hasZ: this.hasZ, srsName: this.srsName,\n    curve: this.curve_, surface: this.surface_,\n    multiSurface: this.multiSurface_, multiCurve: this.multiCurve_};\n  if (opt_options) {\n    _ol_obj_.assign(context, opt_options);\n  }\n  this.writeGeometryElement(geom, geometry, [context]);\n  return geom;\n};\n\n\n/**\n * Encode an array of features in GML 3.1.1 Simple Features.\n *\n * @function\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {string} Result.\n * @api\n */\n_ol_format_GML3_.prototype.writeFeatures;\n\n\n/**\n * Encode an array of features in the GML 3.1.1 format as an XML node.\n *\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @override\n * @api\n */\n_ol_format_GML3_.prototype.writeFeaturesNode = function(features, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  var node = _ol_xml_.createElementNS('http://www.opengis.net/gml',\n      'featureMembers');\n  _ol_xml_.setAttributeNS(node, 'http://www.w3.org/2001/XMLSchema-instance',\n      'xsi:schemaLocation', this.schemaLocation);\n  var context = {\n    srsName: this.srsName,\n    hasZ: this.hasZ,\n    curve: this.curve_,\n    surface: this.surface_,\n    multiSurface: this.multiSurface_,\n    multiCurve: this.multiCurve_,\n    featureNS: this.featureNS,\n    featureType: this.featureType\n  };\n  if (opt_options) {\n    _ol_obj_.assign(context, opt_options);\n  }\n  this.writeFeatureMembers_(node, features, [context]);\n  return node;\n};\nexport default _ol_format_GML3_;\n","import _ol_ from '../index.js';\nimport _ol_asserts_ from '../asserts.js';\nimport _ol_format_GML2_ from '../format/gml2.js';\nimport _ol_format_GML3_ from '../format/gml3.js';\nimport _ol_format_GMLBase_ from '../format/gmlbase.js';\nimport _ol_format_filter_ from '../format/filter.js';\nimport _ol_format_XMLFeature_ from '../format/xmlfeature.js';\nimport _ol_format_XSD_ from '../format/xsd.js';\nimport _ol_geom_Geometry_ from '../geom/geometry.js';\nimport _ol_obj_ from '../obj.js';\nimport _ol_proj_ from '../proj.js';\nimport _ol_xml_ from '../xml.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the WFS format.\n * By default, supports WFS version 1.1.0. You can pass a GML format\n * as option if you want to read a WFS that contains GML2 (WFS 1.0.0).\n * Also see {@link ol.format.GMLBase} which is used by this format.\n *\n * @constructor\n * @param {olx.format.WFSOptions=} opt_options\n *     Optional configuration object.\n * @extends {ol.format.XMLFeature}\n * @api\n */\nvar _ol_format_WFS_ = function(opt_options) {\n  var options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {Array.<string>|string|undefined}\n   */\n  this.featureType_ = options.featureType;\n\n  /**\n   * @private\n   * @type {Object.<string, string>|string|undefined}\n   */\n  this.featureNS_ = options.featureNS;\n\n  /**\n   * @private\n   * @type {ol.format.GMLBase}\n   */\n  this.gmlFormat_ = options.gmlFormat ?\n    options.gmlFormat : new _ol_format_GML3_();\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.schemaLocation_ = options.schemaLocation ?\n    options.schemaLocation :\n    _ol_format_WFS_.SCHEMA_LOCATIONS[_ol_format_WFS_.DEFAULT_VERSION];\n\n  _ol_format_XMLFeature_.call(this);\n};\n\n_ol_.inherits(_ol_format_WFS_, _ol_format_XMLFeature_);\n\n\n/**\n * @const\n * @type {string}\n */\n_ol_format_WFS_.FEATURE_PREFIX = 'feature';\n\n\n/**\n * @const\n * @type {string}\n */\n_ol_format_WFS_.XMLNS = 'http://www.w3.org/2000/xmlns/';\n\n\n/**\n * @const\n * @type {string}\n */\n_ol_format_WFS_.OGCNS = 'http://www.opengis.net/ogc';\n\n\n/**\n * @const\n * @type {string}\n */\n_ol_format_WFS_.WFSNS = 'http://www.opengis.net/wfs';\n\n\n/**\n * @const\n * @type {string}\n */\n_ol_format_WFS_.FESNS = 'http://www.opengis.net/fes';\n\n\n/**\n * @const\n * @type {Object.<string, string>}\n */\n_ol_format_WFS_.SCHEMA_LOCATIONS = {\n  '1.1.0': 'http://www.opengis.net/wfs ' +\n      'http://schemas.opengis.net/wfs/1.1.0/wfs.xsd',\n  '1.0.0': 'http://www.opengis.net/wfs ' +\n      'http://schemas.opengis.net/wfs/1.0.0/wfs.xsd'\n};\n\n\n/**\n * @const\n * @type {string}\n */\n_ol_format_WFS_.DEFAULT_VERSION = '1.1.0';\n\n\n/**\n * @return {Array.<string>|string|undefined} featureType\n */\n_ol_format_WFS_.prototype.getFeatureType = function() {\n  return this.featureType_;\n};\n\n\n/**\n * @param {Array.<string>|string|undefined} featureType Feature type(s) to parse.\n */\n_ol_format_WFS_.prototype.setFeatureType = function(featureType) {\n  this.featureType_ = featureType;\n};\n\n\n/**\n * Read all features from a WFS FeatureCollection.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\n_ol_format_WFS_.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\n_ol_format_WFS_.prototype.readFeaturesFromNode = function(node, opt_options) {\n  var context = /** @type {ol.XmlNodeStackItem} */ ({\n    'featureType': this.featureType_,\n    'featureNS': this.featureNS_\n  });\n  _ol_obj_.assign(context, this.getReadOptions(node,\n      opt_options ? opt_options : {}));\n  var objectStack = [context];\n  this.gmlFormat_.FEATURE_COLLECTION_PARSERS[_ol_format_GMLBase_.GMLNS][\n      'featureMember'] =\n      _ol_xml_.makeArrayPusher(_ol_format_GMLBase_.prototype.readFeaturesInternal);\n  var features = _ol_xml_.pushParseAndPop([],\n      this.gmlFormat_.FEATURE_COLLECTION_PARSERS, node,\n      objectStack, this.gmlFormat_);\n  if (!features) {\n    features = [];\n  }\n  return features;\n};\n\n\n/**\n * Read transaction response of the source.\n *\n * @param {Document|Node|Object|string} source Source.\n * @return {ol.WFSTransactionResponse|undefined} Transaction response.\n * @api\n */\n_ol_format_WFS_.prototype.readTransactionResponse = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readTransactionResponseFromDocument(\n        /** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readTransactionResponseFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    var doc = _ol_xml_.parse(source);\n    return this.readTransactionResponseFromDocument(doc);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * Read feature collection metadata of the source.\n *\n * @param {Document|Node|Object|string} source Source.\n * @return {ol.WFSFeatureCollectionMetadata|undefined}\n *     FeatureCollection metadata.\n * @api\n */\n_ol_format_WFS_.prototype.readFeatureCollectionMetadata = function(source) {\n  if (_ol_xml_.isDocument(source)) {\n    return this.readFeatureCollectionMetadataFromDocument(\n        /** @type {Document} */ (source));\n  } else if (_ol_xml_.isNode(source)) {\n    return this.readFeatureCollectionMetadataFromNode(\n        /** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    var doc = _ol_xml_.parse(source);\n    return this.readFeatureCollectionMetadataFromDocument(doc);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {ol.WFSFeatureCollectionMetadata|undefined}\n *     FeatureCollection metadata.\n */\n_ol_format_WFS_.prototype.readFeatureCollectionMetadataFromDocument = function(doc) {\n  for (var n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFeatureCollectionMetadataFromNode(n);\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\n_ol_format_WFS_.FEATURE_COLLECTION_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'boundedBy': _ol_xml_.makeObjectPropertySetter(\n        _ol_format_GMLBase_.prototype.readGeometryElement, 'bounds')\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {ol.WFSFeatureCollectionMetadata|undefined}\n *     FeatureCollection metadata.\n */\n_ol_format_WFS_.prototype.readFeatureCollectionMetadataFromNode = function(node) {\n  var result = {};\n  var value = _ol_format_XSD_.readNonNegativeIntegerString(\n      node.getAttribute('numberOfFeatures'));\n  result['numberOfFeatures'] = value;\n  return _ol_xml_.pushParseAndPop(\n      /** @type {ol.WFSFeatureCollectionMetadata} */ (result),\n      _ol_format_WFS_.FEATURE_COLLECTION_PARSERS_, node, [], this.gmlFormat_);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\n_ol_format_WFS_.TRANSACTION_SUMMARY_PARSERS_ = {\n  'http://www.opengis.net/wfs': {\n    'totalInserted': _ol_xml_.makeObjectPropertySetter(\n        _ol_format_XSD_.readNonNegativeInteger),\n    'totalUpdated': _ol_xml_.makeObjectPropertySetter(\n        _ol_format_XSD_.readNonNegativeInteger),\n    'totalDeleted': _ol_xml_.makeObjectPropertySetter(\n        _ol_format_XSD_.readNonNegativeInteger)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Transaction Summary.\n * @private\n */\n_ol_format_WFS_.readTransactionSummary_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n      {}, _ol_format_WFS_.TRANSACTION_SUMMARY_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\n_ol_format_WFS_.OGC_FID_PARSERS_ = {\n  'http://www.opengis.net/ogc': {\n    'FeatureId': _ol_xml_.makeArrayPusher(function(node, objectStack) {\n      return node.getAttribute('fid');\n    })\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\n_ol_format_WFS_.fidParser_ = function(node, objectStack) {\n  _ol_xml_.parseNode(_ol_format_WFS_.OGC_FID_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\n_ol_format_WFS_.INSERT_RESULTS_PARSERS_ = {\n  'http://www.opengis.net/wfs': {\n    'Feature': _ol_format_WFS_.fidParser_\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<string>|undefined} Insert results.\n * @private\n */\n_ol_format_WFS_.readInsertResults_ = function(node, objectStack) {\n  return _ol_xml_.pushParseAndPop(\n      [], _ol_format_WFS_.INSERT_RESULTS_PARSERS_, node, objectStack);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, ol.XmlParser>>}\n * @private\n */\n_ol_format_WFS_.TRANSACTION_RESPONSE_PARSERS_ = {\n  'http://www.opengis.net/wfs': {\n    'TransactionSummary': _ol_xml_.makeObjectPropertySetter(\n        _ol_format_WFS_.readTransactionSummary_, 'transactionSummary'),\n    'InsertResults': _ol_xml_.makeObjectPropertySetter(\n        _ol_format_WFS_.readInsertResults_, 'insertIds')\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {ol.WFSTransactionResponse|undefined} Transaction response.\n */\n_ol_format_WFS_.prototype.readTransactionResponseFromDocument = function(doc) {\n  for (var n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readTransactionResponseFromNode(n);\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {ol.WFSTransactionResponse|undefined} Transaction response.\n */\n_ol_format_WFS_.prototype.readTransactionResponseFromNode = function(node) {\n  return _ol_xml_.pushParseAndPop(\n      /** @type {ol.WFSTransactionResponse} */({}),\n      _ol_format_WFS_.TRANSACTION_RESPONSE_PARSERS_, node, []);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\n_ol_format_WFS_.QUERY_SERIALIZERS_ = {\n  'http://www.opengis.net/wfs': {\n    'PropertyName': _ol_xml_.makeChildAppender(_ol_format_XSD_.writeStringTextNode)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\n_ol_format_WFS_.writeFeature_ = function(node, feature, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  var featureType = context['featureType'];\n  var featureNS = context['featureNS'];\n  var gmlVersion = context['gmlVersion'];\n  var child = _ol_xml_.createElementNS(featureNS, featureType);\n  node.appendChild(child);\n  if (gmlVersion === 2) {\n    _ol_format_GML2_.prototype.writeFeatureElement(child, feature, objectStack);\n  } else {\n    _ol_format_GML3_.prototype.writeFeatureElement(child, feature, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {number|string} fid Feature identifier.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\n_ol_format_WFS_.writeOgcFidFilter_ = function(node, fid, objectStack) {\n  var filter = _ol_xml_.createElementNS(_ol_format_WFS_.OGCNS, 'Filter');\n  var child = _ol_xml_.createElementNS(_ol_format_WFS_.OGCNS, 'FeatureId');\n  filter.appendChild(child);\n  child.setAttribute('fid', fid);\n  node.appendChild(filter);\n};\n\n\n/**\n * @param {string|undefined} featurePrefix The prefix of the feature.\n * @param {string} featureType The type of the feature.\n * @returns {string} The value of the typeName property.\n * @private\n */\n_ol_format_WFS_.getTypeName_ = function(featurePrefix, featureType) {\n  featurePrefix = featurePrefix ? featurePrefix :\n    _ol_format_WFS_.FEATURE_PREFIX;\n  var prefix = featurePrefix + ':';\n  // The featureType already contains the prefix.\n  if (featureType.indexOf(prefix) === 0) {\n    return featureType;\n  } else {\n    return prefix + featureType;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\n_ol_format_WFS_.writeDelete_ = function(node, feature, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  _ol_asserts_.assert(feature.getId() !== undefined, 26); // Features must have an id set\n  var featureType = context['featureType'];\n  var featurePrefix = context['featurePrefix'];\n  var featureNS = context['featureNS'];\n  var typeName = _ol_format_WFS_.getTypeName_(featurePrefix, featureType);\n  node.setAttribute('typeName', typeName);\n  _ol_xml_.setAttributeNS(node, _ol_format_WFS_.XMLNS, 'xmlns:' + featurePrefix,\n      featureNS);\n  var fid = feature.getId();\n  if (fid !== undefined) {\n    _ol_format_WFS_.writeOgcFidFilter_(node, fid, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\n_ol_format_WFS_.writeUpdate_ = function(node, feature, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  _ol_asserts_.assert(feature.getId() !== undefined, 27); // Features must have an id set\n  var featureType = context['featureType'];\n  var featurePrefix = context['featurePrefix'];\n  var featureNS = context['featureNS'];\n  var typeName = _ol_format_WFS_.getTypeName_(featurePrefix, featureType);\n  var geometryName = feature.getGeometryName();\n  node.setAttribute('typeName', typeName);\n  _ol_xml_.setAttributeNS(node, _ol_format_WFS_.XMLNS, 'xmlns:' + featurePrefix,\n      featureNS);\n  var fid = feature.getId();\n  if (fid !== undefined) {\n    var keys = feature.getKeys();\n    var values = [];\n    for (var i = 0, ii = keys.length; i < ii; i++) {\n      var value = feature.get(keys[i]);\n      if (value !== undefined) {\n        var name = keys[i];\n        if (value instanceof _ol_geom_Geometry_) {\n          name = geometryName;\n        }\n        values.push({name: name, value: value});\n      }\n    }\n    _ol_xml_.pushSerializeAndPop(/** @type {ol.XmlNodeStackItem} */ (\n      {'gmlVersion': context['gmlVersion'], node: node,\n        'hasZ': context['hasZ'], 'srsName': context['srsName']}),\n    _ol_format_WFS_.TRANSACTION_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Property'), values,\n    objectStack);\n    _ol_format_WFS_.writeOgcFidFilter_(node, fid, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Object} pair Property name and value.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\n_ol_format_WFS_.writeProperty_ = function(node, pair, objectStack) {\n  var name = _ol_xml_.createElementNS(_ol_format_WFS_.WFSNS, 'Name');\n  var context = objectStack[objectStack.length - 1];\n  var gmlVersion = context['gmlVersion'];\n  node.appendChild(name);\n  _ol_format_XSD_.writeStringTextNode(name, pair.name);\n  if (pair.value !== undefined && pair.value !== null) {\n    var value = _ol_xml_.createElementNS(_ol_format_WFS_.WFSNS, 'Value');\n    node.appendChild(value);\n    if (pair.value instanceof _ol_geom_Geometry_) {\n      if (gmlVersion === 2) {\n        _ol_format_GML2_.prototype.writeGeometryElement(value,\n            pair.value, objectStack);\n      } else {\n        _ol_format_GML3_.prototype.writeGeometryElement(value,\n            pair.value, objectStack);\n      }\n    } else {\n      _ol_format_XSD_.writeStringTextNode(value, pair.value);\n    }\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {{vendorId: string, safeToIgnore: boolean, value: string}}\n *     nativeElement The native element.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\n_ol_format_WFS_.writeNative_ = function(node, nativeElement, objectStack) {\n  if (nativeElement.vendorId) {\n    node.setAttribute('vendorId', nativeElement.vendorId);\n  }\n  if (nativeElement.safeToIgnore !== undefined) {\n    node.setAttribute('safeToIgnore', nativeElement.safeToIgnore);\n  }\n  if (nativeElement.value !== undefined) {\n    _ol_format_XSD_.writeStringTextNode(node, nativeElement.value);\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\n_ol_format_WFS_.TRANSACTION_SERIALIZERS_ = {\n  'http://www.opengis.net/wfs': {\n    'Insert': _ol_xml_.makeChildAppender(_ol_format_WFS_.writeFeature_),\n    'Update': _ol_xml_.makeChildAppender(_ol_format_WFS_.writeUpdate_),\n    'Delete': _ol_xml_.makeChildAppender(_ol_format_WFS_.writeDelete_),\n    'Property': _ol_xml_.makeChildAppender(_ol_format_WFS_.writeProperty_),\n    'Native': _ol_xml_.makeChildAppender(_ol_format_WFS_.writeNative_)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} featureType Feature type.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\n_ol_format_WFS_.writeQuery_ = function(node, featureType, objectStack) {\n  var context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  var featurePrefix = context['featurePrefix'];\n  var featureNS = context['featureNS'];\n  var propertyNames = context['propertyNames'];\n  var srsName = context['srsName'];\n  var typeName;\n  // If feature prefix is not defined, we must not use the default prefix.\n  if (featurePrefix) {\n    typeName = _ol_format_WFS_.getTypeName_(featurePrefix, featureType);\n  } else {\n    typeName = featureType;\n  }\n  node.setAttribute('typeName', typeName);\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (featureNS) {\n    _ol_xml_.setAttributeNS(node, _ol_format_WFS_.XMLNS, 'xmlns:' + featurePrefix,\n        featureNS);\n  }\n  var item = /** @type {ol.XmlNodeStackItem} */ (_ol_obj_.assign({}, context));\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(item,\n      _ol_format_WFS_.QUERY_SERIALIZERS_,\n      _ol_xml_.makeSimpleNodeFactory('PropertyName'), propertyNames,\n      objectStack);\n  var filter = context['filter'];\n  if (filter) {\n    var child = _ol_xml_.createElementNS(_ol_format_WFS_.OGCNS, 'Filter');\n    node.appendChild(child);\n    _ol_format_WFS_.writeFilterCondition_(child, filter, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Filter} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\n_ol_format_WFS_.writeFilterCondition_ = function(node, filter, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  var item = {node: node};\n  _ol_xml_.pushSerializeAndPop(item,\n      _ol_format_WFS_.GETFEATURE_SERIALIZERS_,\n      _ol_xml_.makeSimpleNodeFactory(filter.getTagName()),\n      [filter], objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Bbox} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\n_ol_format_WFS_.writeBboxFilter_ = function(node, filter, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  _ol_format_WFS_.writeOgcPropertyName_(node, filter.geometryName);\n  _ol_format_GML3_.prototype.writeGeometryElement(node, filter.extent, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Contains} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\n_ol_format_WFS_.writeContainsFilter_ = function(node, filter, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  _ol_format_WFS_.writeOgcPropertyName_(node, filter.geometryName);\n  _ol_format_GML3_.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Intersects} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\n_ol_format_WFS_.writeIntersectsFilter_ = function(node, filter, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  _ol_format_WFS_.writeOgcPropertyName_(node, filter.geometryName);\n  _ol_format_GML3_.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Within} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\n_ol_format_WFS_.writeWithinFilter_ = function(node, filter, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  _ol_format_WFS_.writeOgcPropertyName_(node, filter.geometryName);\n  _ol_format_GML3_.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.During} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\n_ol_format_WFS_.writeDuringFilter_ = function(node, filter, objectStack) {\n\n  var valueReference = _ol_xml_.createElementNS(_ol_format_WFS_.FESNS, 'ValueReference');\n  _ol_format_XSD_.writeStringTextNode(valueReference, filter.propertyName);\n  node.appendChild(valueReference);\n\n  var timePeriod = _ol_xml_.createElementNS(_ol_format_GMLBase_.GMLNS, 'TimePeriod');\n\n  node.appendChild(timePeriod);\n\n  var begin = _ol_xml_.createElementNS(_ol_format_GMLBase_.GMLNS, 'begin');\n  timePeriod.appendChild(begin);\n  _ol_format_WFS_.writeTimeInstant_(begin, filter.begin);\n\n  var end = _ol_xml_.createElementNS(_ol_format_GMLBase_.GMLNS, 'end');\n  timePeriod.appendChild(end);\n  _ol_format_WFS_.writeTimeInstant_(end, filter.end);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.LogicalNary} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\n_ol_format_WFS_.writeLogicalFilter_ = function(node, filter, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  var item = {node: node};\n  var conditions = filter.conditions;\n  for (var i = 0, ii = conditions.length; i < ii; ++i) {\n    var condition = conditions[i];\n    _ol_xml_.pushSerializeAndPop(item,\n        _ol_format_WFS_.GETFEATURE_SERIALIZERS_,\n        _ol_xml_.makeSimpleNodeFactory(condition.getTagName()),\n        [condition], objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.Not} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\n_ol_format_WFS_.writeNotFilter_ = function(node, filter, objectStack) {\n  /** @type {ol.XmlNodeStackItem} */\n  var item = {node: node};\n  var condition = filter.condition;\n  _ol_xml_.pushSerializeAndPop(item,\n      _ol_format_WFS_.GETFEATURE_SERIALIZERS_,\n      _ol_xml_.makeSimpleNodeFactory(condition.getTagName()),\n      [condition], objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.ComparisonBinary} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\n_ol_format_WFS_.writeComparisonFilter_ = function(node, filter, objectStack) {\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n  _ol_format_WFS_.writeOgcPropertyName_(node, filter.propertyName);\n  _ol_format_WFS_.writeOgcLiteral_(node, '' + filter.expression);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.IsNull} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\n_ol_format_WFS_.writeIsNullFilter_ = function(node, filter, objectStack) {\n  _ol_format_WFS_.writeOgcPropertyName_(node, filter.propertyName);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.IsBetween} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\n_ol_format_WFS_.writeIsBetweenFilter_ = function(node, filter, objectStack) {\n  _ol_format_WFS_.writeOgcPropertyName_(node, filter.propertyName);\n\n  var lowerBoundary = _ol_xml_.createElementNS(_ol_format_WFS_.OGCNS, 'LowerBoundary');\n  node.appendChild(lowerBoundary);\n  _ol_format_WFS_.writeOgcLiteral_(lowerBoundary, '' + filter.lowerBoundary);\n\n  var upperBoundary = _ol_xml_.createElementNS(_ol_format_WFS_.OGCNS, 'UpperBoundary');\n  node.appendChild(upperBoundary);\n  _ol_format_WFS_.writeOgcLiteral_(upperBoundary, '' + filter.upperBoundary);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {ol.format.filter.IsLike} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\n_ol_format_WFS_.writeIsLikeFilter_ = function(node, filter, objectStack) {\n  node.setAttribute('wildCard', filter.wildCard);\n  node.setAttribute('singleChar', filter.singleChar);\n  node.setAttribute('escapeChar', filter.escapeChar);\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n  _ol_format_WFS_.writeOgcPropertyName_(node, filter.propertyName);\n  _ol_format_WFS_.writeOgcLiteral_(node, '' + filter.pattern);\n};\n\n\n/**\n * @param {string} tagName Tag name.\n * @param {Node} node Node.\n * @param {string} value Value.\n * @private\n */\n_ol_format_WFS_.writeOgcExpression_ = function(tagName, node, value) {\n  var property = _ol_xml_.createElementNS(_ol_format_WFS_.OGCNS, tagName);\n  _ol_format_XSD_.writeStringTextNode(property, value);\n  node.appendChild(property);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n * @private\n */\n_ol_format_WFS_.writeOgcPropertyName_ = function(node, value) {\n  _ol_format_WFS_.writeOgcExpression_('PropertyName', node, value);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n * @private\n */\n_ol_format_WFS_.writeOgcLiteral_ = function(node, value) {\n  _ol_format_WFS_.writeOgcExpression_('Literal', node, value);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} time PropertyName value.\n * @private\n */\n_ol_format_WFS_.writeTimeInstant_ = function(node, time) {\n  var timeInstant = _ol_xml_.createElementNS(_ol_format_GMLBase_.GMLNS, 'TimeInstant');\n  node.appendChild(timeInstant);\n\n  var timePosition = _ol_xml_.createElementNS(_ol_format_GMLBase_.GMLNS, 'timePosition');\n  timeInstant.appendChild(timePosition);\n  _ol_format_XSD_.writeStringTextNode(timePosition, time);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, ol.XmlSerializer>>}\n * @private\n */\n_ol_format_WFS_.GETFEATURE_SERIALIZERS_ = {\n  'http://www.opengis.net/wfs': {\n    'Query': _ol_xml_.makeChildAppender(_ol_format_WFS_.writeQuery_)\n  },\n  'http://www.opengis.net/ogc': {\n    'During': _ol_xml_.makeChildAppender(_ol_format_WFS_.writeDuringFilter_),\n    'And': _ol_xml_.makeChildAppender(_ol_format_WFS_.writeLogicalFilter_),\n    'Or': _ol_xml_.makeChildAppender(_ol_format_WFS_.writeLogicalFilter_),\n    'Not': _ol_xml_.makeChildAppender(_ol_format_WFS_.writeNotFilter_),\n    'BBOX': _ol_xml_.makeChildAppender(_ol_format_WFS_.writeBboxFilter_),\n    'Contains': _ol_xml_.makeChildAppender(_ol_format_WFS_.writeContainsFilter_),\n    'Intersects': _ol_xml_.makeChildAppender(_ol_format_WFS_.writeIntersectsFilter_),\n    'Within': _ol_xml_.makeChildAppender(_ol_format_WFS_.writeWithinFilter_),\n    'PropertyIsEqualTo': _ol_xml_.makeChildAppender(_ol_format_WFS_.writeComparisonFilter_),\n    'PropertyIsNotEqualTo': _ol_xml_.makeChildAppender(_ol_format_WFS_.writeComparisonFilter_),\n    'PropertyIsLessThan': _ol_xml_.makeChildAppender(_ol_format_WFS_.writeComparisonFilter_),\n    'PropertyIsLessThanOrEqualTo': _ol_xml_.makeChildAppender(_ol_format_WFS_.writeComparisonFilter_),\n    'PropertyIsGreaterThan': _ol_xml_.makeChildAppender(_ol_format_WFS_.writeComparisonFilter_),\n    'PropertyIsGreaterThanOrEqualTo': _ol_xml_.makeChildAppender(_ol_format_WFS_.writeComparisonFilter_),\n    'PropertyIsNull': _ol_xml_.makeChildAppender(_ol_format_WFS_.writeIsNullFilter_),\n    'PropertyIsBetween': _ol_xml_.makeChildAppender(_ol_format_WFS_.writeIsBetweenFilter_),\n    'PropertyIsLike': _ol_xml_.makeChildAppender(_ol_format_WFS_.writeIsLikeFilter_)\n  }\n};\n\n\n/**\n * Encode filter as WFS `Filter` and return the Node.\n *\n * @param {ol.format.filter.Filter} filter Filter.\n * @return {Node} Result.\n * @api\n */\n_ol_format_WFS_.writeFilter = function(filter) {\n  var child = _ol_xml_.createElementNS(_ol_format_WFS_.OGCNS, 'Filter');\n  _ol_format_WFS_.writeFilterCondition_(child, filter, []);\n  return child;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<string>} featureTypes Feature types.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\n_ol_format_WFS_.writeGetFeature_ = function(node, featureTypes, objectStack) {\n  var context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  var item = /** @type {ol.XmlNodeStackItem} */ (_ol_obj_.assign({}, context));\n  item.node = node;\n  _ol_xml_.pushSerializeAndPop(item,\n      _ol_format_WFS_.GETFEATURE_SERIALIZERS_,\n      _ol_xml_.makeSimpleNodeFactory('Query'), featureTypes,\n      objectStack);\n};\n\n\n/**\n * Encode format as WFS `GetFeature` and return the Node.\n *\n * @param {olx.format.WFSWriteGetFeatureOptions} options Options.\n * @return {Node} Result.\n * @api\n */\n_ol_format_WFS_.prototype.writeGetFeature = function(options) {\n  var node = _ol_xml_.createElementNS(_ol_format_WFS_.WFSNS, 'GetFeature');\n  node.setAttribute('service', 'WFS');\n  node.setAttribute('version', '1.1.0');\n  var filter;\n  if (options) {\n    if (options.handle) {\n      node.setAttribute('handle', options.handle);\n    }\n    if (options.outputFormat) {\n      node.setAttribute('outputFormat', options.outputFormat);\n    }\n    if (options.maxFeatures !== undefined) {\n      node.setAttribute('maxFeatures', options.maxFeatures);\n    }\n    if (options.resultType) {\n      node.setAttribute('resultType', options.resultType);\n    }\n    if (options.startIndex !== undefined) {\n      node.setAttribute('startIndex', options.startIndex);\n    }\n    if (options.count !== undefined) {\n      node.setAttribute('count', options.count);\n    }\n    filter = options.filter;\n    if (options.bbox) {\n      _ol_asserts_.assert(options.geometryName,\n          12); // `options.geometryName` must also be provided when `options.bbox` is set\n      var bbox = _ol_format_filter_.bbox(\n          /** @type {string} */ (options.geometryName), options.bbox, options.srsName);\n      if (filter) {\n        // if bbox and filter are both set, combine the two into a single filter\n        filter = _ol_format_filter_.and(filter, bbox);\n      } else {\n        filter = bbox;\n      }\n    }\n  }\n  _ol_xml_.setAttributeNS(node, 'http://www.w3.org/2001/XMLSchema-instance',\n      'xsi:schemaLocation', this.schemaLocation_);\n  /** @type {ol.XmlNodeStackItem} */\n  var context = {\n    node: node,\n    'srsName': options.srsName,\n    'featureNS': options.featureNS ? options.featureNS : this.featureNS_,\n    'featurePrefix': options.featurePrefix,\n    'geometryName': options.geometryName,\n    'filter': filter,\n    'propertyNames': options.propertyNames ? options.propertyNames : []\n  };\n  _ol_asserts_.assert(Array.isArray(options.featureTypes),\n      11); // `options.featureTypes` should be an Array\n  _ol_format_WFS_.writeGetFeature_(node, /** @type {!Array.<string>} */ (options.featureTypes), [context]);\n  return node;\n};\n\n\n/**\n * Encode format as WFS `Transaction` and return the Node.\n *\n * @param {Array.<ol.Feature>} inserts The features to insert.\n * @param {Array.<ol.Feature>} updates The features to update.\n * @param {Array.<ol.Feature>} deletes The features to delete.\n * @param {olx.format.WFSWriteTransactionOptions} options Write options.\n * @return {Node} Result.\n * @api\n */\n_ol_format_WFS_.prototype.writeTransaction = function(inserts, updates, deletes,\n    options) {\n  var objectStack = [];\n  var node = _ol_xml_.createElementNS(_ol_format_WFS_.WFSNS, 'Transaction');\n  var version = options.version ?\n    options.version : _ol_format_WFS_.DEFAULT_VERSION;\n  var gmlVersion = version === '1.0.0' ? 2 : 3;\n  node.setAttribute('service', 'WFS');\n  node.setAttribute('version', version);\n  var baseObj;\n  /** @type {ol.XmlNodeStackItem} */\n  var obj;\n  if (options) {\n    baseObj = options.gmlOptions ? options.gmlOptions : {};\n    if (options.handle) {\n      node.setAttribute('handle', options.handle);\n    }\n  }\n  var schemaLocation = _ol_format_WFS_.SCHEMA_LOCATIONS[version];\n  _ol_xml_.setAttributeNS(node, 'http://www.w3.org/2001/XMLSchema-instance',\n      'xsi:schemaLocation', schemaLocation);\n  var featurePrefix = options.featurePrefix ? options.featurePrefix : _ol_format_WFS_.FEATURE_PREFIX;\n  if (inserts) {\n    obj = {node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'hasZ': options.hasZ, 'srsName': options.srsName};\n    _ol_obj_.assign(obj, baseObj);\n    _ol_xml_.pushSerializeAndPop(obj,\n        _ol_format_WFS_.TRANSACTION_SERIALIZERS_,\n        _ol_xml_.makeSimpleNodeFactory('Insert'), inserts,\n        objectStack);\n  }\n  if (updates) {\n    obj = {node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'hasZ': options.hasZ, 'srsName': options.srsName};\n    _ol_obj_.assign(obj, baseObj);\n    _ol_xml_.pushSerializeAndPop(obj,\n        _ol_format_WFS_.TRANSACTION_SERIALIZERS_,\n        _ol_xml_.makeSimpleNodeFactory('Update'), updates,\n        objectStack);\n  }\n  if (deletes) {\n    _ol_xml_.pushSerializeAndPop({node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'srsName': options.srsName},\n    _ol_format_WFS_.TRANSACTION_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Delete'), deletes,\n    objectStack);\n  }\n  if (options.nativeElements) {\n    _ol_xml_.pushSerializeAndPop({node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'srsName': options.srsName},\n    _ol_format_WFS_.TRANSACTION_SERIALIZERS_,\n    _ol_xml_.makeSimpleNodeFactory('Native'), options.nativeElements,\n    objectStack);\n  }\n  return node;\n};\n\n\n/**\n * Read the projection from a WFS source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @return {?ol.proj.Projection} Projection.\n * @api\n */\n_ol_format_WFS_.prototype.readProjection;\n\n\n/**\n * @inheritDoc\n */\n_ol_format_WFS_.prototype.readProjectionFromDocument = function(doc) {\n  for (var n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readProjectionFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_format_WFS_.prototype.readProjectionFromNode = function(node) {\n  if (node.firstElementChild &&\n      node.firstElementChild.firstElementChild) {\n    node = node.firstElementChild.firstElementChild;\n    for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (!(n.childNodes.length === 0 ||\n          (n.childNodes.length === 1 &&\n          n.firstChild.nodeType === 3))) {\n        var objectStack = [{}];\n        this.gmlFormat_.readGeometryElement(n, objectStack);\n        return _ol_proj_.get(objectStack.pop().srsName);\n      }\n    }\n  }\n\n  return null;\n};\nexport default _ol_format_WFS_;\n","'use strict';\nvar $ = require('../internals/export');\nvar toObject = require('../internals/to-object');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\nvar setArrayLength = require('../internals/array-set-length');\nvar doesNotExceedSafeInteger = require('../internals/does-not-exceed-safe-integer');\nvar fails = require('../internals/fails');\n\nvar INCORRECT_TO_LENGTH = fails(function () {\n  return [].push.call({ length: 0x100000000 }, 1) !== 4294967297;\n});\n\n// V8 and Safari <= 15.4, FF < 23 throws InternalError\n// https://bugs.chromium.org/p/v8/issues/detail?id=12681\nvar SILENT_ON_NON_WRITABLE_LENGTH = !function () {\n  try {\n    // eslint-disable-next-line es/no-object-defineproperty -- safe\n    Object.defineProperty([], 'length', { writable: false }).push();\n  } catch (error) {\n    return error instanceof TypeError;\n  }\n}();\n\n// `Array.prototype.push` method\n// https://tc39.es/ecma262/#sec-array.prototype.push\n$({ target: 'Array', proto: true, arity: 1, forced: INCORRECT_TO_LENGTH || SILENT_ON_NON_WRITABLE_LENGTH }, {\n  // eslint-disable-next-line no-unused-vars -- required for `.length`\n  push: function push(item) {\n    var O = toObject(this);\n    var len = lengthOfArrayLike(O);\n    var argCount = arguments.length;\n    doesNotExceedSafeInteger(len + argCount);\n    for (var i = 0; i < argCount; i++) {\n      O[len] = arguments[i];\n      len++;\n    }\n    setArrayLength(O, len);\n    return len;\n  }\n});\n","'use strict';\nvar DESCRIPTORS = require('../internals/descriptors');\nvar isArray = require('../internals/is-array');\n\nvar $TypeError = TypeError;\n// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n\n// Safari < 13 does not throw an error in this case\nvar SILENT_ON_NON_WRITABLE_LENGTH_SET = DESCRIPTORS && !function () {\n  // makes no sense without proper strict mode support\n  if (this !== undefined) return true;\n  try {\n    // eslint-disable-next-line es/no-object-defineproperty -- safe\n    Object.defineProperty([], 'length', { writable: false }).length = 1;\n  } catch (error) {\n    return error instanceof TypeError;\n  }\n}();\n\nmodule.exports = SILENT_ON_NON_WRITABLE_LENGTH_SET ? function (O, length) {\n  if (isArray(O) && !getOwnPropertyDescriptor(O, 'length').writable) {\n    throw $TypeError('Cannot set read only .length');\n  } return O.length = length;\n} : function (O, length) {\n  return O.length = length;\n};\n","/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature filters.\n *\n * deprecated: This class will no longer be exported starting from the next major version.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @struct\n * @api\n */\nvar _ol_format_filter_Filter_ = function(tagName) {\n\n  /**\n   * @private\n   * @type {!string}\n   */\n  this.tagName_ = tagName;\n};\n\n/**\n * The XML tag name for a filter.\n * @returns {!string} Name.\n */\n_ol_format_filter_Filter_.prototype.getTagName = function() {\n  return this.tagName_;\n};\nexport default _ol_format_filter_Filter_;\n","import _ol_ from '../../index.js';\nimport _ol_asserts_ from '../../asserts.js';\nimport _ol_format_filter_Filter_ from '../filter/filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature n-ary logical filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {...ol.format.filter.Filter} conditions Conditions.\n * @extends {ol.format.filter.Filter}\n */\nvar _ol_format_filter_LogicalNary_ = function(tagName, conditions) {\n\n  _ol_format_filter_Filter_.call(this, tagName);\n\n  /**\n   * @public\n   * @type {Array.<ol.format.filter.Filter>}\n   */\n  this.conditions = Array.prototype.slice.call(arguments, 1);\n  _ol_asserts_.assert(this.conditions.length >= 2, 57); // At least 2 conditions are required.\n};\n\n_ol_.inherits(_ol_format_filter_LogicalNary_, _ol_format_filter_Filter_);\nexport default _ol_format_filter_LogicalNary_;\n","import _ol_ from '../../index.js';\nimport _ol_format_filter_LogicalNary_ from '../filter/logicalnary.js';\n\n/**\n * @classdesc\n * Represents a logical `<And>` operator between two or more filter conditions.\n *\n * deprecated: This class will no longer be exported starting from the next major version.\n *\n * @constructor\n * @abstract\n * @param {...ol.format.filter.Filter} conditions Conditions.\n * @extends {ol.format.filter.LogicalNary}\n * @api\n */\nvar _ol_format_filter_And_ = function(conditions) {\n  var params = ['And'].concat(Array.prototype.slice.call(arguments));\n  _ol_format_filter_LogicalNary_.apply(this, params);\n};\n\n_ol_.inherits(_ol_format_filter_And_, _ol_format_filter_LogicalNary_);\nexport default _ol_format_filter_And_;\n","import _ol_ from '../../index.js';\nimport _ol_format_filter_Filter_ from '../filter/filter.js';\n\n/**\n * @classdesc\n * Represents a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.Extent} extent Extent.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Filter}\n * @api\n */\nvar _ol_format_filter_Bbox_ = function(geometryName, extent, opt_srsName) {\n\n  _ol_format_filter_Filter_.call(this, 'BBOX');\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.geometryName = geometryName;\n\n  /**\n   * @public\n   * @type {ol.Extent}\n   */\n  this.extent = extent;\n\n  /**\n   * @public\n   * @type {string|undefined}\n   */\n  this.srsName = opt_srsName;\n};\n\n_ol_.inherits(_ol_format_filter_Bbox_, _ol_format_filter_Filter_);\nexport default _ol_format_filter_Bbox_;\n","import _ol_ from '../../index.js';\nimport _ol_format_filter_Filter_ from '../filter/filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Represents a spatial operator to test whether a geometry-valued property\n * relates to a given geometry.\n *\n * deprecated: This class will no longer be exported starting from the next major version.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Filter}\n * @api\n */\nvar _ol_format_filter_Spatial_ = function(tagName, geometryName, geometry, opt_srsName) {\n\n  _ol_format_filter_Filter_.call(this, tagName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.geometryName = geometryName || 'the_geom';\n\n  /**\n   * @public\n   * @type {ol.geom.Geometry}\n   */\n  this.geometry = geometry;\n\n  /**\n   * @public\n   * @type {string|undefined}\n   */\n  this.srsName = opt_srsName;\n};\n\n_ol_.inherits(_ol_format_filter_Spatial_, _ol_format_filter_Filter_);\nexport default _ol_format_filter_Spatial_;\n","import _ol_ from '../../index.js';\nimport _ol_format_filter_Spatial_ from '../filter/spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Contains>` operator to test whether a geometry-valued property\n * contains a given geometry.\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Spatial}\n * @api\n */\nvar _ol_format_filter_Contains_ = function(geometryName, geometry, opt_srsName) {\n\n  _ol_format_filter_Spatial_.call(this, 'Contains', geometryName, geometry, opt_srsName);\n\n};\n\n_ol_.inherits(_ol_format_filter_Contains_, _ol_format_filter_Spatial_);\nexport default _ol_format_filter_Contains_;\n","import _ol_ from '../../index.js';\nimport _ol_format_filter_Filter_ from '../filter/filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature property comparison filters.\n *\n * deprecated: This class will no longer be exported starting from the next major version.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {!string} propertyName Name of the context property to compare.\n * @extends {ol.format.filter.Filter}\n * @api\n */\nvar _ol_format_filter_Comparison_ = function(tagName, propertyName) {\n\n  _ol_format_filter_Filter_.call(this, tagName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.propertyName = propertyName;\n};\n\n_ol_.inherits(_ol_format_filter_Comparison_, _ol_format_filter_Filter_);\nexport default _ol_format_filter_Comparison_;\n","import _ol_ from '../../index.js';\nimport _ol_format_filter_Comparison_ from '../filter/comparison.js';\n\n/**\n * @classdesc\n * Represents a `<During>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} begin The begin date in ISO-8601 format.\n * @param {!string} end The end date in ISO-8601 format.\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nvar _ol_format_filter_During_ = function(propertyName, begin, end) {\n  _ol_format_filter_Comparison_.call(this, 'During', propertyName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.begin = begin;\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.end = end;\n};\n\n_ol_.inherits(_ol_format_filter_During_, _ol_format_filter_Comparison_);\nexport default _ol_format_filter_During_;\n","import _ol_ from '../../index.js';\nimport _ol_format_filter_Comparison_ from '../filter/comparison.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature property binary comparison filters.\n *\n * deprecated: This class will no longer be exported starting from the next major version.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nvar _ol_format_filter_ComparisonBinary_ = function(\n    tagName, propertyName, expression, opt_matchCase) {\n\n  _ol_format_filter_Comparison_.call(this, tagName, propertyName);\n\n  /**\n   * @public\n   * @type {!(string|number)}\n   */\n  this.expression = expression;\n\n  /**\n   * @public\n   * @type {boolean|undefined}\n   */\n  this.matchCase = opt_matchCase;\n};\n\n_ol_.inherits(_ol_format_filter_ComparisonBinary_, _ol_format_filter_Comparison_);\nexport default _ol_format_filter_ComparisonBinary_;\n","import _ol_ from '../../index.js';\nimport _ol_format_filter_ComparisonBinary_ from '../filter/comparisonbinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nvar _ol_format_filter_EqualTo_ = function(propertyName, expression, opt_matchCase) {\n  _ol_format_filter_ComparisonBinary_.call(this, 'PropertyIsEqualTo', propertyName, expression, opt_matchCase);\n};\n\n_ol_.inherits(_ol_format_filter_EqualTo_, _ol_format_filter_ComparisonBinary_);\nexport default _ol_format_filter_EqualTo_;\n","import _ol_ from '../../index.js';\nimport _ol_format_filter_ComparisonBinary_ from '../filter/comparisonbinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsGreaterThan>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nvar _ol_format_filter_GreaterThan_ = function(propertyName, expression) {\n  _ol_format_filter_ComparisonBinary_.call(this, 'PropertyIsGreaterThan', propertyName, expression);\n};\n\n_ol_.inherits(_ol_format_filter_GreaterThan_, _ol_format_filter_ComparisonBinary_);\nexport default _ol_format_filter_GreaterThan_;\n","import _ol_ from '../../index.js';\nimport _ol_format_filter_ComparisonBinary_ from '../filter/comparisonbinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsGreaterThanOrEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nvar _ol_format_filter_GreaterThanOrEqualTo_ = function(propertyName, expression) {\n  _ol_format_filter_ComparisonBinary_.call(this, 'PropertyIsGreaterThanOrEqualTo', propertyName, expression);\n};\n\n_ol_.inherits(_ol_format_filter_GreaterThanOrEqualTo_, _ol_format_filter_ComparisonBinary_);\nexport default _ol_format_filter_GreaterThanOrEqualTo_;\n","import _ol_ from '../../index.js';\nimport _ol_format_filter_Spatial_ from '../filter/spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Intersects>` operator to test whether a geometry-valued property\n * intersects a given geometry.\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Spatial}\n * @api\n */\nvar _ol_format_filter_Intersects_ = function(geometryName, geometry, opt_srsName) {\n\n  _ol_format_filter_Spatial_.call(this, 'Intersects', geometryName, geometry, opt_srsName);\n\n};\n\n_ol_.inherits(_ol_format_filter_Intersects_, _ol_format_filter_Spatial_);\nexport default _ol_format_filter_Intersects_;\n","import _ol_ from '../../index.js';\nimport _ol_format_filter_Comparison_ from '../filter/comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsBetween>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} lowerBoundary The lower bound of the range.\n * @param {!number} upperBoundary The upper bound of the range.\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nvar _ol_format_filter_IsBetween_ = function(propertyName, lowerBoundary, upperBoundary) {\n  _ol_format_filter_Comparison_.call(this, 'PropertyIsBetween', propertyName);\n\n  /**\n   * @public\n   * @type {!number}\n   */\n  this.lowerBoundary = lowerBoundary;\n\n  /**\n   * @public\n   * @type {!number}\n   */\n  this.upperBoundary = upperBoundary;\n};\n\n_ol_.inherits(_ol_format_filter_IsBetween_, _ol_format_filter_Comparison_);\nexport default _ol_format_filter_IsBetween_;\n","import _ol_ from '../../index.js';\nimport _ol_format_filter_Comparison_ from '../filter/comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLike>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} pattern Text pattern.\n * @param {string=} opt_wildCard Pattern character which matches any sequence of\n *    zero or more string characters. Default is '*'.\n * @param {string=} opt_singleChar pattern character which matches any single\n *    string character. Default is '.'.\n * @param {string=} opt_escapeChar Escape character which can be used to escape\n *    the pattern characters. Default is '!'.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nvar _ol_format_filter_IsLike_ = function(propertyName, pattern,\n    opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase) {\n  _ol_format_filter_Comparison_.call(this, 'PropertyIsLike', propertyName);\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.pattern = pattern;\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.wildCard = (opt_wildCard !== undefined) ? opt_wildCard : '*';\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.singleChar = (opt_singleChar !== undefined) ? opt_singleChar : '.';\n\n  /**\n   * @public\n   * @type {!string}\n   */\n  this.escapeChar = (opt_escapeChar !== undefined) ? opt_escapeChar : '!';\n\n  /**\n   * @public\n   * @type {boolean|undefined}\n   */\n  this.matchCase = opt_matchCase;\n};\n\n_ol_.inherits(_ol_format_filter_IsLike_, _ol_format_filter_Comparison_);\nexport default _ol_format_filter_IsLike_;\n","import _ol_ from '../../index.js';\nimport _ol_format_filter_Comparison_ from '../filter/comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsNull>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @extends {ol.format.filter.Comparison}\n * @api\n */\nvar _ol_format_filter_IsNull_ = function(propertyName) {\n  _ol_format_filter_Comparison_.call(this, 'PropertyIsNull', propertyName);\n};\n\n_ol_.inherits(_ol_format_filter_IsNull_, _ol_format_filter_Comparison_);\nexport default _ol_format_filter_IsNull_;\n","import _ol_ from '../../index.js';\nimport _ol_format_filter_ComparisonBinary_ from '../filter/comparisonbinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLessThan>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nvar _ol_format_filter_LessThan_ = function(propertyName, expression) {\n  _ol_format_filter_ComparisonBinary_.call(this, 'PropertyIsLessThan', propertyName, expression);\n};\n\n_ol_.inherits(_ol_format_filter_LessThan_, _ol_format_filter_ComparisonBinary_);\nexport default _ol_format_filter_LessThan_;\n","import _ol_ from '../../index.js';\nimport _ol_format_filter_ComparisonBinary_ from '../filter/comparisonbinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLessThanOrEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nvar _ol_format_filter_LessThanOrEqualTo_ = function(propertyName, expression) {\n  _ol_format_filter_ComparisonBinary_.call(this, 'PropertyIsLessThanOrEqualTo', propertyName, expression);\n};\n\n_ol_.inherits(_ol_format_filter_LessThanOrEqualTo_, _ol_format_filter_ComparisonBinary_);\nexport default _ol_format_filter_LessThanOrEqualTo_;\n","import _ol_ from '../../index.js';\nimport _ol_format_filter_Filter_ from '../filter/filter.js';\n\n/**\n * @classdesc\n * Represents a logical `<Not>` operator for a filter condition.\n *\n * @constructor\n * @param {!ol.format.filter.Filter} condition Filter condition.\n * @extends {ol.format.filter.Filter}\n * @api\n */\nvar _ol_format_filter_Not_ = function(condition) {\n\n  _ol_format_filter_Filter_.call(this, 'Not');\n\n  /**\n   * @public\n   * @type {!ol.format.filter.Filter}\n   */\n  this.condition = condition;\n};\n\n_ol_.inherits(_ol_format_filter_Not_, _ol_format_filter_Filter_);\nexport default _ol_format_filter_Not_;\n","import _ol_ from '../../index.js';\nimport _ol_format_filter_ComparisonBinary_ from '../filter/comparisonbinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsNotEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {ol.format.filter.ComparisonBinary}\n * @api\n */\nvar _ol_format_filter_NotEqualTo_ = function(propertyName, expression, opt_matchCase) {\n  _ol_format_filter_ComparisonBinary_.call(this, 'PropertyIsNotEqualTo', propertyName, expression, opt_matchCase);\n};\n\n_ol_.inherits(_ol_format_filter_NotEqualTo_, _ol_format_filter_ComparisonBinary_);\nexport default _ol_format_filter_NotEqualTo_;\n","import _ol_ from '../../index.js';\nimport _ol_format_filter_LogicalNary_ from '../filter/logicalnary.js';\n\n/**\n * @classdesc\n * Represents a logical `<Or>` operator between two ore more filter conditions.\n *\n * @constructor\n * @param {...ol.format.filter.Filter} conditions Conditions.\n * @extends {ol.format.filter.LogicalNary}\n * @api\n */\nvar _ol_format_filter_Or_ = function(conditions) {\n  var params = ['Or'].concat(Array.prototype.slice.call(arguments));\n  _ol_format_filter_LogicalNary_.apply(this, params);\n};\n\n_ol_.inherits(_ol_format_filter_Or_, _ol_format_filter_LogicalNary_);\nexport default _ol_format_filter_Or_;\n","import _ol_ from '../../index.js';\nimport _ol_format_filter_Spatial_ from '../filter/spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Within>` operator to test whether a geometry-valued property\n * is within a given geometry.\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {ol.format.filter.Spatial}\n * @api\n */\nvar _ol_format_filter_Within_ = function(geometryName, geometry, opt_srsName) {\n\n  _ol_format_filter_Spatial_.call(this, 'Within', geometryName, geometry, opt_srsName);\n\n};\n\n_ol_.inherits(_ol_format_filter_Within_, _ol_format_filter_Spatial_);\nexport default _ol_format_filter_Within_;\n","import _ol_format_filter_And_ from '../format/filter/and.js';\nimport _ol_format_filter_Bbox_ from '../format/filter/bbox.js';\nimport _ol_format_filter_Contains_ from '../format/filter/contains.js';\nimport _ol_format_filter_During_ from '../format/filter/during.js';\nimport _ol_format_filter_EqualTo_ from '../format/filter/equalto.js';\nimport _ol_format_filter_GreaterThan_ from '../format/filter/greaterthan.js';\nimport _ol_format_filter_GreaterThanOrEqualTo_ from '../format/filter/greaterthanorequalto.js';\nimport _ol_format_filter_Intersects_ from '../format/filter/intersects.js';\nimport _ol_format_filter_IsBetween_ from '../format/filter/isbetween.js';\nimport _ol_format_filter_IsLike_ from '../format/filter/islike.js';\nimport _ol_format_filter_IsNull_ from '../format/filter/isnull.js';\nimport _ol_format_filter_LessThan_ from '../format/filter/lessthan.js';\nimport _ol_format_filter_LessThanOrEqualTo_ from '../format/filter/lessthanorequalto.js';\nimport _ol_format_filter_Not_ from '../format/filter/not.js';\nimport _ol_format_filter_NotEqualTo_ from '../format/filter/notequalto.js';\nimport _ol_format_filter_Or_ from '../format/filter/or.js';\nimport _ol_format_filter_Within_ from '../format/filter/within.js';\nvar _ol_format_filter_ = {};\n\n\n/**\n * Create a logical `<And>` operator between two or more filter conditions.\n *\n * @param {...ol.format.filter.Filter} conditions Filter conditions.\n * @returns {!ol.format.filter.And} `<And>` operator.\n * @api\n */\n_ol_format_filter_.and = function(conditions) {\n  var params = [null].concat(Array.prototype.slice.call(arguments));\n  return new (Function.prototype.bind.apply(_ol_format_filter_And_, params));\n};\n\n\n/**\n * Create a logical `<Or>` operator between two or more filter conditions.\n *\n * @param {...ol.format.filter.Filter} conditions Filter conditions.\n * @returns {!ol.format.filter.Or} `<Or>` operator.\n * @api\n */\n_ol_format_filter_.or = function(conditions) {\n  var params = [null].concat(Array.prototype.slice.call(arguments));\n  return new (Function.prototype.bind.apply(_ol_format_filter_Or_, params));\n};\n\n\n/**\n * Represents a logical `<Not>` operator for a filter condition.\n *\n * @param {!ol.format.filter.Filter} condition Filter condition.\n * @returns {!ol.format.filter.Not} `<Not>` operator.\n * @api\n */\n_ol_format_filter_.not = function(condition) {\n  return new _ol_format_filter_Not_(condition);\n};\n\n\n/**\n * Create a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.Extent} extent Extent.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Bbox} `<BBOX>` operator.\n * @api\n */\n_ol_format_filter_.bbox = function(geometryName, extent, opt_srsName) {\n  return new _ol_format_filter_Bbox_(geometryName, extent, opt_srsName);\n};\n\n/**\n * Create a `<Contains>` operator to test whether a geometry-valued property\n * contains a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Contains} `<Contains>` operator.\n * @api\n */\n_ol_format_filter_.contains = function(geometryName, geometry, opt_srsName) {\n  return new _ol_format_filter_Contains_(geometryName, geometry, opt_srsName);\n};\n\n/**\n * Create a `<Intersects>` operator to test whether a geometry-valued property\n * intersects a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Intersects} `<Intersects>` operator.\n * @api\n */\n_ol_format_filter_.intersects = function(geometryName, geometry, opt_srsName) {\n  return new _ol_format_filter_Intersects_(geometryName, geometry, opt_srsName);\n};\n\n/**\n * Create a `<Within>` operator to test whether a geometry-valued property\n * is within a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!ol.geom.Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!ol.format.filter.Within} `<Within>` operator.\n * @api\n */\n_ol_format_filter_.within = function(geometryName, geometry, opt_srsName) {\n  return new _ol_format_filter_Within_(geometryName, geometry, opt_srsName);\n};\n\n\n/**\n * Creates a `<PropertyIsEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!ol.format.filter.EqualTo} `<PropertyIsEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.equalTo = function(propertyName, expression, opt_matchCase) {\n  return new _ol_format_filter_EqualTo_(propertyName, expression, opt_matchCase);\n};\n\n\n/**\n * Creates a `<PropertyIsNotEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!ol.format.filter.NotEqualTo} `<PropertyIsNotEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.notEqualTo = function(propertyName, expression, opt_matchCase) {\n  return new _ol_format_filter_NotEqualTo_(propertyName, expression, opt_matchCase);\n};\n\n\n/**\n * Creates a `<PropertyIsLessThan>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.LessThan} `<PropertyIsLessThan>` operator.\n * @api\n */\n_ol_format_filter_.lessThan = function(propertyName, expression) {\n  return new _ol_format_filter_LessThan_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsLessThanOrEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.LessThanOrEqualTo} `<PropertyIsLessThanOrEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.lessThanOrEqualTo = function(propertyName, expression) {\n  return new _ol_format_filter_LessThanOrEqualTo_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsGreaterThan>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.GreaterThan} `<PropertyIsGreaterThan>` operator.\n * @api\n */\n_ol_format_filter_.greaterThan = function(propertyName, expression) {\n  return new _ol_format_filter_GreaterThan_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsGreaterThanOrEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!ol.format.filter.GreaterThanOrEqualTo} `<PropertyIsGreaterThanOrEqualTo>` operator.\n * @api\n */\n_ol_format_filter_.greaterThanOrEqualTo = function(propertyName, expression) {\n  return new _ol_format_filter_GreaterThanOrEqualTo_(propertyName, expression);\n};\n\n\n/**\n * Creates a `<PropertyIsNull>` comparison operator to test whether a property value\n * is null.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @returns {!ol.format.filter.IsNull} `<PropertyIsNull>` operator.\n * @api\n */\n_ol_format_filter_.isNull = function(propertyName) {\n  return new _ol_format_filter_IsNull_(propertyName);\n};\n\n\n/**\n * Creates a `<PropertyIsBetween>` comparison operator to test whether an expression\n * value lies within a range given by a lower and upper bound (inclusive).\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} lowerBoundary The lower bound of the range.\n * @param {!number} upperBoundary The upper bound of the range.\n * @returns {!ol.format.filter.IsBetween} `<PropertyIsBetween>` operator.\n * @api\n */\n_ol_format_filter_.between = function(propertyName, lowerBoundary, upperBoundary) {\n  return new _ol_format_filter_IsBetween_(propertyName, lowerBoundary, upperBoundary);\n};\n\n\n/**\n * Represents a `<PropertyIsLike>` comparison operator that matches a string property\n * value against a text pattern.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} pattern Text pattern.\n * @param {string=} opt_wildCard Pattern character which matches any sequence of\n *    zero or more string characters. Default is '*'.\n * @param {string=} opt_singleChar pattern character which matches any single\n *    string character. Default is '.'.\n * @param {string=} opt_escapeChar Escape character which can be used to escape\n *    the pattern characters. Default is '!'.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!ol.format.filter.IsLike} `<PropertyIsLike>` operator.\n * @api\n */\n_ol_format_filter_.like = function(propertyName, pattern,\n    opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase) {\n  return new _ol_format_filter_IsLike_(propertyName, pattern,\n      opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase);\n};\n\n\n/**\n * Create a `<During>` temporal operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} begin The begin date in ISO-8601 format.\n * @param {!string} end The end date in ISO-8601 format.\n * @returns {!ol.format.filter.During} `<During>` operator.\n * @api\n */\n_ol_format_filter_.during = function(propertyName, begin, end) {\n  return new _ol_format_filter_During_(propertyName, begin, end);\n};\nexport default _ol_format_filter_;\n","import Feature from 'ol/feature';\r\nimport VectorLayer from 'ol/layer/vector';\r\nimport TileLayer from \"ol/layer/tile\";\r\nimport XYZ from \"ol/source/xyz\";\r\nimport Vector from 'ol/source/vector';\r\nimport GeoJSON from 'ol/format/geojson';\r\nimport WFS from 'ol/format/wfs';\r\nimport Style from 'ol/style/style';\r\nimport Stroke from 'ol/style/stroke';\r\nimport Circle from 'ol/style/circle';\r\nimport Fill from 'ol/style/fill';\r\nimport Filter from 'ol/format/filter';\r\nimport Extent from 'ol/extent';\r\n\r\nlet SPACE_NAME = \"tiger\";//geoserver工作空间\r\nlet SRS_NAME = \"EPSG:4326\";//坐标系\r\n//全局存储高亮图层\r\nlet searchLayer = null\r\n//全局存储空间查询要素\r\nlet filterLayer = null\r\n//存储返回的GeoJSON数据\r\nlet GeoJSONData = null\r\n\r\n/**\r\n * poi:地名信息，landmarks:地标，roads:道路\r\n * @param i\r\n * @returns {string}\r\n * @constructor\r\n */\r\nconst TYPE = (i) => {\r\n    return {\r\n        poi: 'poi',\r\n        landmarks: 'poly_landmarks',\r\n        roads: 'tiger_roads'\r\n    }[i] || 'poi,poly_landmarks,tiger_roads';\r\n}\r\n\r\n/**\r\n * 不同图层的空间字段，和主键排序字段\r\n * @param i\r\n * @param j\r\n * @returns {*}\r\n * @constructor\r\n */\r\nconst GEOTYPE = (i, j) => {\r\n    return {\r\n        poi: ['the_geom', 'NAME', 'POI'],\r\n        poly_landmarks: ['the_geom', 'LANAME', '地标'],\r\n        tiger_roads: ['the_geom', 'NAME', '道路']\r\n    }[i][j];\r\n}\r\n\r\nconst FIELD = (i) => {\r\n    return {\r\n        NAME: 'NAME',\r\n        LANAME: 'LANAME'\r\n    }[i] || false;\r\n}\r\n\r\nconst FIELD_NAME = (i) => {\r\n    return {\r\n        NAME: 'name',\r\n        LANAME: 'name'\r\n    }[i] || false;\r\n}\r\n\r\n/**\r\n * 多个url异步请求\r\n * @param urls url数组\r\n * @param max 最大异步数量\r\n * @param callback 回调函数\r\n */\r\nconst getRequestAll = function (urls, max, callback) {\r\n    let fetchArr = [],  // 存储并发max的promise数组\r\n        i = 0;\r\n    function toFetch() {\r\n        if (i === urls.length) {   // 所有的都处理完了， 返回一个resolve\r\n            return Promise.resolve();\r\n        }\r\n        let one = fetch(urls[i++]).then(response => response.json())\r\n            .then(data => {\r\n                fetchArr.splice(fetchArr.indexOf(one), 1);\r\n                return data\r\n            })\r\n            .catch(() => {\r\n                fetchArr.splice(fetchArr.indexOf(one), 1);\r\n                return {\r\n                    crs: { properties: { name: \"urn:ogc:def:crs:EPSG::4326\" }, type: \"name\" },\r\n                    features: [],\r\n                    numberMatched: 0,\r\n                    numberReturned: 0,\r\n                    timeStamp: formatDate(new Date().getTime()),\r\n                    totalFeatures: 0,\r\n                    type: \"FeatureCollection\"\r\n                }\r\n            })\r\n        // 取出第i个url， 放入fetch里面 , 每取一次i++\r\n        fetchArr.push(one);  //将当前的promise存入并发数组中\r\n        let p = Promise.resolve();\r\n        if (fetchArr.length >= max) {\r\n            // 当并行数量达到最大后， 用race比较 第一个完成的， 然后再调用一下函数自身。\r\n            p = Promise.race(fetchArr);\r\n        }\r\n        return p.then(() => toFetch());\r\n    }\r\n    // arr循环完后， 现在fetchArr里面剩下最后max个promise对象， 使用all等待所有的都完成之后执行callback\r\n    toFetch().then(() => Promise.all(fetchArr)).then((a) => {\r\n        callback(a);\r\n    })\r\n}\r\n\r\n/**\r\n * 多个url异步请求POST\r\n * @param url BaseURL\r\n * @param body 传入请求数据 与arr一一对应\r\n * @param max 最大异步数量\r\n * @param callback 回调函数\r\n */\r\nconst postRequestAll = function (url, body, max, callback) {\r\n    let fetchArr = [],  // 存储并发max的promise数组\r\n        i = 0;\r\n\r\n    function toFetch() {\r\n        if (i === body.length) {   // 所有的都处理完了， 返回一个resolve\r\n            return Promise.resolve();\r\n        }\r\n        let one = fetch(url, {\r\n            method: 'POST',\r\n            body: body[i++],\r\n        }).then(response => response.json())\r\n            .then(data => {\r\n                fetchArr.splice(fetchArr.indexOf(one), 1);\r\n                return data\r\n            })\r\n            .catch(() => {\r\n                fetchArr.splice(fetchArr.indexOf(one), 1);\r\n                return {\r\n                    crs: { properties: { name: \"urn:ogc:def:crs:EPSG::4326\" }, type: \"name\" },\r\n                    features: [],\r\n                    numberMatched: 0,\r\n                    numberReturned: 0,\r\n                    timeStamp: formatDate(new Date().getTime()),\r\n                    totalFeatures: 0,\r\n                    type: \"FeatureCollection\"\r\n                }\r\n            })\r\n        // 取出第i个url， 放入fetch里面 , 每取一次i++\r\n        fetchArr.push(one);  //将当前的promise存入并发数组中\r\n        let p = Promise.resolve();\r\n        if (fetchArr.length >= max) {\r\n            // 当并行数量达到最大后， 用race比较 第一个完成的， 然后再调用一下函数自身。\r\n            p = Promise.race(fetchArr);\r\n        }\r\n        return p.then(() => toFetch());\r\n    }\r\n    // arr循环完后， 现在fetchArr里面剩下最后max个promise对象， 使用all等待所有的都完成之后执行callback\r\n    toFetch().then(() => Promise.all(fetchArr)).then((a) => {\r\n        callback(a);\r\n    })\r\n}\r\n\r\n/**\r\n * 时间戳转换方法    date:时间戳数字\r\n */\r\nconst formatDate = function (d) {\r\n    let date = new Date(d);\r\n    let YY = date.getFullYear() + '-';\r\n    let MM = (date.getMonth() + 1 < 10 ? '0' + (date.getMonth() + 1) : date.getMonth() + 1) + '-';\r\n    let DD = (date.getDate() < 10 ? '0' + (date.getDate()) : date.getDate());\r\n    let hh = (date.getHours() < 10 ? '0' + date.getHours() : date.getHours()) + ':';\r\n    let mm = (date.getMinutes() < 10 ? '0' + date.getMinutes() : date.getMinutes()) + ':';\r\n    let ss = (date.getSeconds() < 10 ? '0' + date.getSeconds() : date.getSeconds());\r\n    return YY + MM + DD + \" \" + hh + mm + ss;\r\n}\r\n\r\n/**\r\n * 拼接sql语句\r\n * @param featureTypes 要素字段\r\n * @param keyword 查询关键字\r\n * @returns {*[\r\n *     {\r\n *         typeName:'buidling',\r\n           cql:`( name ILIKE '%搜索关键字%')`\r\n *     }\r\n * ]}\r\n */\r\n\r\nconst getLikeSQL = (featureTypes, keyword) => {\r\n    let sql = []\r\n    featureTypes.forEach(featureType => {\r\n        let like = '';\r\n        featureType.properties.forEach(propertie => {\r\n            if (FIELD(propertie.name)) {\r\n                like += ' ' + propertie.name + ` ILIKE '%${keyword}%' OR`\r\n            }\r\n        })\r\n        like = like.substring(0, like.lastIndexOf('OR'));\r\n        sql.push({\r\n            typeName: featureType.typeName,\r\n            cql: `( ${like} )`\r\n        })\r\n    })\r\n    return sql;\r\n}\r\n\r\n/**\r\n * 获取查询拼接链接\r\n * @param url baseURL\r\n * @param type 查询类型\r\n * @param keyword 查询关键字\r\n * @returns {Promise<unknown>}\r\n [\r\n {\r\n          typeName:'buidling',\r\n           cql:`( name ILIKE '%搜索关键字%')`\r\n      },...\r\n ]\r\n */\r\nconst getDescribeToSql = (url, type, keyword) => {\r\n    type = TYPE(type);\r\n    return new Promise((resolve) => {\r\n        fetch(url + `geoserver/wfs?service=WFS&version=1.1.0&outputFormat=application/json&request=DescribeFeatureType&typeName=${type}`\r\n        ).then(function (response) {\r\n            return response.json();\r\n        }).then(function (json) {\r\n            resolve(getLikeSQL(json.featureTypes, keyword))\r\n        }).catch((e) => {\r\n            console.error(e)\r\n            return resolve([])\r\n        });\r\n    })\r\n}\r\n\r\n/**\r\n * 返回查询链接集合\r\n * @param url baseURL\r\n * @param type 查询类型\r\n * @param keyword 查询关键字\r\n * @param pageSize 查询数量\r\n * @returns {Promise<unknown>}\r\n * [url1,url2,url3,.....]\r\n */\r\n\r\nconst getSearchURLs = (url, type, keyword, pageSize) => {\r\n    let baseURL = url + `geoserver/wfs?service=WFS&version=1.1.0&request=GetFeature&outputFormat=application/json&sortBy=&srsName=${SRS_NAME}&`\r\n    let urls = [];\r\n    return new Promise((resolve) => {\r\n        getDescribeToSql(url, type, keyword).then(r => {\r\n            if (r.length > 0) {\r\n                r.forEach(item => {\r\n                    let typeName = item.typeName;\r\n                    let cql = item.cql;\r\n                    urls.push(encodeURI(baseURL + `maxFeatures=${pageSize}&typeName=${SPACE_NAME}:${typeName}&cql_filter=${cql}`))\r\n                })\r\n                return urls\r\n            }\r\n            return urls\r\n        }).then(data => {\r\n            return resolve(data)\r\n        }).catch((e) => {\r\n            console.error(e)\r\n            return resolve([])\r\n        })\r\n    })\r\n}\r\n\r\n/**\r\n * 根据url集合进行请求获取查询结果\r\n * @param url baseURL\r\n * @param type 查询类型\r\n * @param keyword 查询关键字\r\n * @param pageSize 查询数量\r\n */\r\nconst getSearch = (url, type, keyword, pageSize) => {\r\n    return new Promise((resolve) => {\r\n        getSearchURLs(url, type, keyword, pageSize).then(re => {\r\n            getRequestAll(re, re.length + 1, (data) => {\r\n                let features = []\r\n                data.forEach(feature => {\r\n                    if (feature !== undefined) {\r\n                        feature.features.forEach(item => {\r\n                            features.push(item)\r\n                        })\r\n                    }\r\n                })\r\n                GeoJSONData = {\r\n                    crs: { properties: { name: \"urn:ogc:def:crs:EPSG::4326\" }, type: \"name\" },\r\n                    features: features,\r\n                    numberMatched: pageSize,\r\n                    numberReturned: features.length,\r\n                    timeStamp: formatDate(new Date().getTime()),\r\n                    totalFeatures: features.length,\r\n                    type: 'FeatureCollection'\r\n                }\r\n                return resolve(GeoJSONData)\r\n            })\r\n        }).catch((err) => {\r\n            console.error(\"查询失败:\", err)\r\n        })\r\n    })\r\n}\r\n\r\n/**\r\n * 返回过滤后XML\r\n * @param layerName 图层名称\r\n * @param pageSize  每页数据量\r\n * @param filter 过滤条件\r\n * @returns {string}\r\n */\r\nconst getFeatureRequest = (layerName, pageSize, filter) => {\r\n    let options = {\r\n        srsName: SRS_NAME,\r\n        featureNS: 'http://www.census.gov',\r\n        featurePrefix: SPACE_NAME,\r\n        featureTypes: [layerName],\r\n        maxFeatures: pageSize,\r\n        outputFormat: 'application/json',\r\n        filter: filter\r\n    }\r\n    let featureRequest = new WFS().writeGetFeature(options);\r\n    let request = new XMLSerializer().serializeToString(featureRequest);\r\n    //XML中添加排序规则\r\n    //let sortBy = `<SortBy xmlns=\"http://www.opengis.net/ogc\"><SortProperty><PropertyName>${GEOTYPE(layerName, 1)}</PropertyName><SortOrder>0</SortOrder></SortProperty></SortBy>`;\r\n    //在<Filter之前插入sortBy字符串\r\n    //request = request.slice(0, request.indexOf('<Filter')) + sortBy + request.slice(request.indexOf('<Filter'));\r\n    return request;\r\n}\r\n\r\n/**\r\n * post请求\r\n * @param url BaseURL\r\n * @param body 提交数据\r\n * @param pageSize 单页数量\r\n * @param resolve Promise.resolve\r\n */\r\nconst postWFS = (url, body, pageSize, resolve) => {\r\n    postRequestAll(url + 'geoserver/wfs', body, body.length + 1, (data) => {\r\n        let features = []\r\n        data.forEach(feature => {\r\n            if (feature !== undefined) {\r\n                feature.features.forEach(item => {\r\n                    features.push(item)\r\n                })\r\n            }\r\n        })\r\n        GeoJSONData = {\r\n            crs: { properties: { name: \"urn:ogc:def:crs:EPSG::4326\" }, type: \"name\" },\r\n            features: features,\r\n            numberMatched: pageSize,\r\n            numberReturned: features.length,\r\n            timeStamp: formatDate(new Date().getTime()),\r\n            totalFeatures: features.length,\r\n            type: 'FeatureCollection'\r\n        }\r\n        return resolve(GeoJSONData)\r\n    })\r\n}\r\n\r\n/**\r\n * space filter 空间查询\r\n * @param map 地图对象\r\n * @param url baseURL\r\n * @param type 查询类型\r\n * @param pageSize  分页数量\r\n * @param polygon 多边形geometry类型\r\n * @returns {Promise<unknown>}\r\n */\r\nconst spaceFilter = (map, url, type, pageSize, polygon) => {\r\n    map.removeLayer(filterLayer);\r\n    let source = new Vector();\r\n    let style = ('getStyle' in polygon) ? polygon.getStyle() : new Style({\r\n        stroke: new Stroke({\r\n            color: 'rgba(144,233,253,0.60)',\r\n            width: 1,\r\n        }),\r\n        fill: new Fill({\r\n            color: 'rgba(128,225,255,0.10)',\r\n        }),\r\n    });\r\n    polygon = ('getGeometry' in polygon) ? polygon.getGeometry() : polygon;\r\n    source.addFeature(new Feature({ geometry: polygon, }));\r\n    filterLayer = new VectorLayer({\r\n        source: source,\r\n        style: style\r\n    });\r\n    map.addLayer(filterLayer);\r\n\r\n    //坐标系为EPSG:4326,需要转换经纬度，不然查询结果为空\r\n    polygon.applyTransform((flatCoordinates, flatCoordinates2, stride) => {\r\n        for (let j = 0; j < flatCoordinates.length; j += stride) {\r\n            let y = flatCoordinates[j]\r\n            let x = flatCoordinates[j + 1]\r\n            flatCoordinates[j] = x\r\n            flatCoordinates[j + 1] = y\r\n        }\r\n    });\r\n    let layerNames = TYPE(type).split(',') || [TYPE(type)];\r\n    let body = [];\r\n    layerNames.forEach(layerName => {\r\n        let filter = Filter.intersects(GEOTYPE(layerName, 0), polygon, SRS_NAME)\r\n        body.push(getFeatureRequest(layerName, pageSize, filter));\r\n    });\r\n    return new Promise((resolve) => {\r\n        postWFS(url, body, pageSize, resolve);\r\n    })\r\n}\r\n\r\n/**\r\n * 整理返回的GeoJSON数据\r\n * @param re GeoJSON数据\r\n * @returns {*[]}\r\n [{\r\n     id: \"meiyibao_station.fid-4c06493f_17c55e0b8df_10e3\",\r\n     name: \"查询结果\"\r\n },....]\r\n */\r\nconst getSearchData = (re) => {\r\n    let data = [];\r\n    re.features.forEach(item => {\r\n        let keys = Object.keys(item.properties);\r\n        let name = '', type = item.id.substring(0, item.id.lastIndexOf('.'));\r\n        let property = {\r\n            id: item.id\r\n        }\r\n        keys.forEach(key => {\r\n            if (FIELD(key) && FIELD_NAME(key)) {\r\n                if (FIELD_NAME(key) === 'name') {\r\n                    name += item.properties[FIELD(key)] + '/'\r\n                } else {\r\n                    property[FIELD_NAME(key)] = item.properties[FIELD(key)]\r\n                }\r\n            }\r\n        })\r\n        //删除最后一个/字符\r\n        name = name.substring(0, name.lastIndexOf('/'));\r\n        property['name'] = GEOTYPE(type, 2) + ':' + name;\r\n        data.push(property)\r\n    })\r\n    return data;\r\n}\r\n\r\n//创建样式\r\nconst styleFunction = function (feature) {\r\n    const image = new Circle({\r\n        radius: 4,\r\n        fill: new Fill({\r\n            color: 'rgb(255,0,0)',\r\n        }),\r\n        stroke: new Stroke({ color: 'rgb(31,37,154)', width: 1 }),\r\n    });\r\n    const styles = {\r\n        'Point': new Style({\r\n            image: image,\r\n        }),\r\n        'LineString': new Style({\r\n            stroke: new Stroke({\r\n                color: 'rgb(255,89,0)',\r\n                width: 3,\r\n            }),\r\n        }),\r\n        'MultiLineString': new Style({\r\n            stroke: new Stroke({\r\n                color: 'rgb(255,89,0)',\r\n                width: 3,\r\n            }),\r\n        }),\r\n        'MultiPoint': new Style({\r\n            image: image,\r\n        }),\r\n        'MultiPolygon': new Style({\r\n            stroke: new Stroke({\r\n                color: 'yellow',\r\n                width: 1,\r\n            }),\r\n            fill: new Fill({\r\n                color: 'rgba(255,255,0,0.29)',\r\n            }),\r\n        }),\r\n        'Polygon': new Style({\r\n            stroke: new Stroke({\r\n                color: 'blue',\r\n                lineDash: [4],\r\n                width: 3,\r\n            }),\r\n            fill: new Fill({\r\n                color: 'rgba(0,0,255,0.47)',\r\n            }),\r\n        }),\r\n        'GeometryCollection': new Style({\r\n            stroke: new Stroke({\r\n                color: 'rgb(208,0,255)',\r\n                width: 2,\r\n            }),\r\n            fill: new Fill({\r\n                color: 'rgb(208,0,255)',\r\n            }),\r\n            image: new Circle({\r\n                radius: 10,\r\n                fill: null,\r\n                stroke: new Stroke({\r\n                    color: 'rgb(208,0,255)',\r\n                }),\r\n            }),\r\n        }),\r\n        'Circle': new Style({\r\n            stroke: new Stroke({\r\n                color: 'rgba(255,0,0,0.2)',\r\n                width: 2,\r\n            }),\r\n            fill: new Fill({\r\n                color: 'rgba(255,0,0,0.2)',\r\n            }),\r\n        }),\r\n    };\r\n    return styles[feature.getGeometry().getType()];\r\n};\r\n\r\n/**\r\n * 添加GeoJSON到地图\r\n * @param map ol map对象\r\n * @param features geojson\r\n * @param featureId 指定id\r\n */\r\nconst addGeoJSON = (map, featureId) => {\r\n    let features = GeoJSONData;\r\n    map.removeLayer(searchLayer);\r\n    if (features === null) return null;\r\n    const source = new Vector();\r\n    if (featureId === undefined || featureId === null || featureId === '') {\r\n        //读取数据表中geojson创建为feature对象\r\n        let feature = new GeoJSON().readFeatures(features);\r\n        source.addFeatures(feature);\r\n    } else {\r\n        //循环data 加载要素到地图\r\n        features.features.forEach(item => {\r\n            if (item.id === featureId) {\r\n                //读取数据表中wkt创建为feature对象\r\n                let feature = new GeoJSON().readFeature(item);\r\n                source.addFeature(feature);\r\n            }\r\n        });\r\n    }\r\n    if (source.getFeatures().length === 0) return null;\r\n    searchLayer = new VectorLayer({\r\n        source: source,\r\n        style: styleFunction\r\n    });\r\n    //添加geojson图层到地图\r\n    map.addLayer(searchLayer);\r\n    //通过extent缩放至范围\r\n    let extent = source.getExtent();\r\n    let r = map.getView().getResolutionForExtent(extent, map.getSize());\r\n    //设置地图显示缩放等级\r\n    map.getView().setResolution(r);\r\n    //设置地图中心点\r\n    map.getView().setCenter(Extent.getCenter(extent));\r\n}\r\n\r\n/**\r\n * 加载天地图\r\n * @param lyr\r\n * @returns {_ol_layer_Tile_}\r\n */\r\nconst getTdtLayer = (lyr) => {\r\n    // let url = \"http://t0.tianditu.gov.cn/DataServer?T=\"+lyr+\"&X={x}&Y={y}&L={z}\";\r\n    let urls = [];\r\n    for (let i = 0; i < 8; i++) {\r\n        urls.push(\"http://t\" + i + \".tianditu.gov.cn/DataServer?T=\" + lyr + \"&X={x}&Y={y}&L={z}&tk=16c5722fed64bcdbb390cc21a5548cf9\");\r\n    }\r\n    return new TileLayer({\r\n        source: new XYZ({\r\n            urls: urls\r\n        })\r\n    });\r\n}\r\n\r\nexport {\r\n    getRequestAll,\r\n    postRequestAll,\r\n    formatDate,\r\n    getLikeSQL,\r\n    getDescribeToSql,\r\n    getSearchURLs,\r\n    getSearch,\r\n    getFeatureRequest,\r\n    postWFS,\r\n    spaceFilter,\r\n    getSearchData,\r\n    styleFunction,\r\n    addGeoJSON,\r\n    getTdtLayer\r\n}\r\n","'use strict';\nvar $ = require('../internals/export');\nvar toObject = require('../internals/to-object');\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\nvar toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\nvar setArrayLength = require('../internals/array-set-length');\nvar doesNotExceedSafeInteger = require('../internals/does-not-exceed-safe-integer');\nvar arraySpeciesCreate = require('../internals/array-species-create');\nvar createProperty = require('../internals/create-property');\nvar deletePropertyOrThrow = require('../internals/delete-property-or-throw');\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\n\nvar HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('splice');\n\nvar max = Math.max;\nvar min = Math.min;\n\n// `Array.prototype.splice` method\n// https://tc39.es/ecma262/#sec-array.prototype.splice\n// with adding support of @@species\n$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT }, {\n  splice: function splice(start, deleteCount /* , ...items */) {\n    var O = toObject(this);\n    var len = lengthOfArrayLike(O);\n    var actualStart = toAbsoluteIndex(start, len);\n    var argumentsLength = arguments.length;\n    var insertCount, actualDeleteCount, A, k, from, to;\n    if (argumentsLength === 0) {\n      insertCount = actualDeleteCount = 0;\n    } else if (argumentsLength === 1) {\n      insertCount = 0;\n      actualDeleteCount = len - actualStart;\n    } else {\n      insertCount = argumentsLength - 2;\n      actualDeleteCount = min(max(toIntegerOrInfinity(deleteCount), 0), len - actualStart);\n    }\n    doesNotExceedSafeInteger(len + insertCount - actualDeleteCount);\n    A = arraySpeciesCreate(O, actualDeleteCount);\n    for (k = 0; k < actualDeleteCount; k++) {\n      from = actualStart + k;\n      if (from in O) createProperty(A, k, O[from]);\n    }\n    A.length = actualDeleteCount;\n    if (insertCount < actualDeleteCount) {\n      for (k = actualStart; k < len - actualDeleteCount; k++) {\n        from = k + actualDeleteCount;\n        to = k + insertCount;\n        if (from in O) O[to] = O[from];\n        else deletePropertyOrThrow(O, to);\n      }\n      for (k = len; k > len - actualDeleteCount + insertCount; k--) deletePropertyOrThrow(O, k - 1);\n    } else if (insertCount > actualDeleteCount) {\n      for (k = len - actualDeleteCount; k > actualStart; k--) {\n        from = k + actualDeleteCount - 1;\n        to = k + insertCount - 1;\n        if (from in O) O[to] = O[from];\n        else deletePropertyOrThrow(O, to);\n      }\n    }\n    for (k = 0; k < insertCount; k++) {\n      O[k + actualStart] = arguments[k + 2];\n    }\n    setArrayLength(O, len - actualDeleteCount + insertCount);\n    return A;\n  }\n});\n","var DESCRIPTORS = require('../internals/descriptors');\nvar FUNCTION_NAME_EXISTS = require('../internals/function-name').EXISTS;\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar defineProperty = require('../internals/object-define-property').f;\n\nvar FunctionPrototype = Function.prototype;\nvar functionToString = uncurryThis(FunctionPrototype.toString);\nvar nameRE = /function\\b(?:\\s|\\/\\*[\\S\\s]*?\\*\\/|\\/\\/[^\\n\\r]*[\\n\\r]+)*([^\\s(/]*)/;\nvar regExpExec = uncurryThis(nameRE.exec);\nvar NAME = 'name';\n\n// Function instances `.name` property\n// https://tc39.es/ecma262/#sec-function-instances-name\nif (DESCRIPTORS && !FUNCTION_NAME_EXISTS) {\n  defineProperty(FunctionPrototype, NAME, {\n    configurable: true,\n    get: function () {\n      try {\n        return regExpExec(nameRE, functionToString(this))[1];\n      } catch (error) {\n        return '';\n      }\n    }\n  });\n}\n","var $ = require('../internals/export');\nvar toObject = require('../internals/to-object');\nvar nativeKeys = require('../internals/object-keys');\nvar fails = require('../internals/fails');\n\nvar FAILS_ON_PRIMITIVES = fails(function () { nativeKeys(1); });\n\n// `Object.keys` method\n// https://tc39.es/ecma262/#sec-object.keys\n$({ target: 'Object', stat: true, forced: FAILS_ON_PRIMITIVES }, {\n  keys: function keys(it) {\n    return nativeKeys(toObject(it));\n  }\n});\n"],"sourceRoot":""}