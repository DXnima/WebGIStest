{"version":3,"sources":["webpack:///./node_modules/core-js/modules/es.array.join.js","webpack:///./src/components/geoserver/wfs/UpdateWFS.vue","webpack:///src/components/geoserver/wfs/UpdateWFS.vue","webpack:///./src/components/geoserver/wfs/UpdateWFS.vue?efa1","webpack:///./src/components/geoserver/wfs/UpdateWFS.vue?0898"],"names":["$","uncurryThis","IndexedObject","toIndexedObject","arrayMethodIsStrict","nativeJoin","join","ES3_STRINGS","Object","STRICT_METHOD","target","proto","forced","separator","this","undefined","render","_vm","_c","_self","attrs","path","_v","staticRenderFns","data","geoserverData","wsName","uri","wfsURL","layer","created","mounted","methods","initMap","format","url","that","extent","strategy","title","source","style","geometry","image","radius","fill","color","getTdtLayer","layers","view","projection","center","zoom","features","map","edit","select","feature","wfsLayer","updateFeature","ft","id","properties","coordinates","flatCoordinates","WFSTSerializer","featObject","featureType","featureNS","srsName","serializer","featString","headers","res","console","alert","window","component"],"mappings":"gHACA,IAAIA,EAAI,EAAQ,QACZC,EAAc,EAAQ,QACtBC,EAAgB,EAAQ,QACxBC,EAAkB,EAAQ,QAC1BC,EAAsB,EAAQ,QAE9BC,EAAaJ,EAAY,GAAGK,MAE5BC,EAAcL,GAAiBM,OAC/BC,EAAgBL,EAAoB,OAAQ,KAIhDJ,EAAE,CAAEU,OAAQ,QAASC,OAAO,EAAMC,OAAQL,IAAgBE,GAAiB,CACzEH,KAAM,SAAcO,GAClB,OAAOR,EAAWF,EAAgBW,WAAqBC,IAAdF,EAA0B,IAAMA,O,yCChB7E,IAAIG,EAAS,WAAkB,IAAIC,EAAIH,KAAKI,EAAGD,EAAIE,MAAMD,GAAG,OAAOA,EAAG,MAAM,CAACA,EAAG,gBAAgB,CAACE,MAAM,CAAC,kBAAkB,wBAAwB,CAACF,EAAG,qBAAqB,CAACE,MAAM,CAAC,GAAK,CAAEC,KAAM,WAAY,CAACJ,EAAIK,GAAG,QAAQJ,EAAG,qBAAqB,CAACD,EAAIK,GAAG,eAAeJ,EAAG,qBAAqB,CAACD,EAAIK,GAAG,SAASJ,EAAG,qBAAqB,CAACD,EAAIK,GAAG,cAAc,GAAGJ,EAAG,UAAU,CAACA,EAAG,MAAM,CAACE,MAAM,CAAC,GAAK,YAAY,IAEjZG,EAAkB,G,gMC2BP,GACfC,gBACA,OAEAC,eACAC,oBACAC,0CACAC,mDACAC,gBAIAC,qBAEAC,mBACA,gBAEAC,SACAC,mBACA,WAEA,cACAC,kBACAC,gBACA,OACAC,gFACAA,2BACAA,sBAFAA,yDAGAC,0BAEAC,uBAGA,cACAC,kBACAC,SACAC,kBACA,mBACAC,yBACAC,kBACAC,SACAC,iBACAC,sBAOA,GACAC,wBACAA,2BAGA,cACArC,aACAsC,SACAC,iBACAC,uBACAC,2CACAC,WAIA,cACAJ,WACAP,kBACAE,kBACAC,SACAC,iBACAC,qBAMA,cACAO,2BAGAC,oBACAA,oBACAC,gBAEAC,2BACA,iBACA,aACAC,KACAC,4BAIAH,8BAEA,iBACA,YACAnB,sBAGAkB,0BACA,6BAGAC,gBAFAA,mBAKAD,gCACA,6BACAA,4CAEAA,gDAIAK,0BAAA,4KAoCA,OAlCAC,YAEAC,YACAD,WACAE,oBACAA,mBAEAC,mCACAD,WACAA,WAEAF,mBAGAA,gDACA,6BACA,WACA,SACAI,OACAA,aAIAJ,0BAGAK,aACAC,0BACA,UACAC,kCACAC,8BACAC,sBAEAC,oBACAC,yBAAA,UACA,oCACAA,EACA,CACAC,SAEA,oCAEA,iBAPAC,UAQA,2BACAC,eACAC,mBAGAA,eACAC,0BACA,2CApDA,MC/IiX,I,YCO7WC,EAAY,eACd,EACA7D,EACAO,GACA,EACA,KACA,WACA,MAIa,aAAAsD,E","file":"js/chunk-548ddc74.33af6b92.js","sourcesContent":["'use strict';\nvar $ = require('../internals/export');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar IndexedObject = require('../internals/indexed-object');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar arrayMethodIsStrict = require('../internals/array-method-is-strict');\n\nvar nativeJoin = uncurryThis([].join);\n\nvar ES3_STRINGS = IndexedObject != Object;\nvar STRICT_METHOD = arrayMethodIsStrict('join', ',');\n\n// `Array.prototype.join` method\n// https://tc39.es/ecma262/#sec-array.prototype.join\n$({ target: 'Array', proto: true, forced: ES3_STRINGS || !STRICT_METHOD }, {\n  join: function join(separator) {\n    return nativeJoin(toIndexedObject(this), separator === undefined ? ',' : separator);\n  }\n});\n","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[_c('el-breadcrumb',{attrs:{\"separator-class\":\"el-icon-arrow-right\"}},[_c('el-breadcrumb-item',{attrs:{\"to\":{ path: '/home' }}},[_vm._v(\"首页\")]),_c('el-breadcrumb-item',[_vm._v(\"GeoServer\")]),_c('el-breadcrumb-item',[_vm._v(\"WFS\")]),_c('el-breadcrumb-item',[_vm._v(\"WFS更新数据\")])],1),_c('el-card',[_c('div',{attrs:{\"id\":\"map\"}})])],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div>\r\n        <!--面包屑导航区域-->\r\n        <el-breadcrumb separator-class=\"el-icon-arrow-right\">\r\n            <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\r\n            <el-breadcrumb-item>GeoServer</el-breadcrumb-item>\r\n            <el-breadcrumb-item>WFS</el-breadcrumb-item>\r\n            <el-breadcrumb-item>WFS更新数据</el-breadcrumb-item>\r\n        </el-breadcrumb>\r\n        <!--卡片区域-->\r\n        <el-card>\r\n            <div id=\"map\"></div>\r\n        </el-card>\r\n    </div>\r\n</template>\r\n<script>\r\nimport Map from 'ol/map';\r\nimport View from 'ol/view';\r\nimport VectorLayer from 'ol/layer/vector';\r\nimport Vector from 'ol/source/vector';\r\nimport GeoJSON from 'ol/format/geojson';\r\nimport WFS from 'ol/format/wfs';\r\nimport Select from 'ol/interaction/select';\r\nimport Modify from 'ol/interaction/modify';\r\nimport Style from 'ol/style/style';\r\nimport Circle from 'ol/style/circle';\r\nimport Fill from 'ol/style/fill';\r\nimport loadingstrategy from 'ol/loadingstrategy';\r\nimport {getTdtLayer} from \"../../../utils/searchUtils\";\r\nexport default {\r\n    data() {\r\n        return {\r\n            // 服务配置，命名空间、图层、服务地址等\r\n            geoserverData: {\r\n                wsName: 'webgistest',\r\n                uri: 'http://www.openplans.org/webgistest',\r\n                wfsURL: process.env.VUE_APP_GEOSERVER + 'geoserver/wfs?',\r\n                layer: 'port'\r\n            }\r\n        }\r\n    },\r\n    created() {\r\n    },\r\n    mounted() {\r\n        this.initMap()\r\n    },\r\n    methods: {\r\n        initMap() {\r\n            let that = this\r\n            //测试数据 添加WFS数据  添加所有\r\n            let wfsSource = new Vector({\r\n                format: new GeoJSON(),\r\n                url: function (extent) {\r\n                    return (\r\n                        that.geoserverData.wfsURL + 'service=WFS&version=1.1.0&request=GetFeature&typeName=' +\r\n                        that.geoserverData.wsName + \":\" +\r\n                        that.geoserverData.layer + '&' + 'outputFormat=application/json&srsname=EPSG:3857&bbox=' +\r\n                        extent.join(',') + ',EPSG:3857');\r\n                },\r\n                strategy: loadingstrategy.bbox\r\n            });\r\n\r\n            let wfsLayer = new VectorLayer({\r\n                title: 'add Layer',\r\n                source: wfsSource,\r\n                style: function (feature) {\r\n                    return new Style({\r\n                        geometry: feature.getGeometry(),\r\n                        image: new Circle({\r\n                            radius: 5,\r\n                            fill: new Fill({\r\n                                color: \"blue\"\r\n                            })\r\n                        })\r\n                    })\r\n                },\r\n            })\r\n\r\n            let layers = [\r\n              getTdtLayer(\"vec_w\"),\r\n              getTdtLayer(\"cva_w\"), wfsLayer\r\n            ];\r\n\r\n            let map = new Map({\r\n                target: 'map',\r\n                layers: layers,\r\n                view: new View({\r\n                  projection: \"EPSG:3857\",\r\n                  center: [12690421.9504332, 3632749.14338443],\r\n                    zoom: 4\r\n                })\r\n            });\r\n\r\n            let select = new Select({\r\n                layers: [wfsLayer],\r\n                style: new Style({\r\n                    image: new Circle({\r\n                        radius: 8,\r\n                        fill: new Fill({\r\n                            color: \"#f00\"\r\n                        })\r\n                    })\r\n                })\r\n            });\r\n\r\n            let edit = new Modify({\r\n                features: select.getFeatures()\r\n            });\r\n\r\n            map.addInteraction(select);\r\n            map.addInteraction(edit);\r\n            edit.setActive(false);\r\n            let feature\r\n            select.on(\"select\", function (e) {\r\n                let features = e.selected;\r\n                if (features.length > 0) {\r\n                    feature = features[0];\r\n                    wfsLayer.getSource().changed();\r\n                }\r\n            });\r\n\r\n            edit.on(\"modifyend\", function (e) {\r\n                // 把修改完成的feature暂存起来\r\n                let features = e.features;\r\n                let feature = features.item(0);\r\n                that.updateFeature(feature);\r\n            });\r\n\r\n            map.on('click', function (evt) {\r\n                if (!map.hasFeatureAtPixel(evt.pixel)) {\r\n                    edit.setActive(false);\r\n                } else {\r\n                    edit.setActive(true);\r\n                }\r\n            });\r\n            map.on('pointermove', function (evt) {\r\n                if (map.hasFeatureAtPixel(evt.pixel)) {\r\n                    map.getTargetElement().style.cursor = \"pointer\"\r\n                } else {\r\n                    map.getTargetElement().style.cursor = \"default\"\r\n                }\r\n            });\r\n        },\r\n        async updateFeature(feature) {\r\n            // 1、构造Feature\r\n            let ft = feature.clone()\r\n            // 更新操作必须要有id\r\n            let id = feature.getId()\r\n            ft.setId(id)\r\n            let properties = ft.getProperties()\r\n            properties.address = \"测试要素修改\"\r\n\r\n            let coordinates = ft.getGeometry().getCoordinates()\r\n            properties.lng = coordinates[0]\r\n            properties.lat = coordinates[1]\r\n\r\n            ft.setProperties(properties)\r\n\r\n            //经纬度换位置\r\n            ft.getGeometry().applyTransform((flatCoordinates, flatCoordinates2, stride) => {\r\n                for (let j = 0; j < flatCoordinates.length; j += stride) {\r\n                    let y = flatCoordinates[j]\r\n                    let x = flatCoordinates[j + 1]\r\n                    flatCoordinates[j] = x\r\n                    flatCoordinates[j + 1] = y\r\n                }\r\n            })\r\n\r\n            ft.setGeometryName('geom')// postgis字段为geom、shp字段名为the_geom\r\n\r\n            // 2、更新到后台\r\n            let WFSTSerializer = new WFS()\r\n            let featObject = WFSTSerializer.writeTransaction(null,\r\n                [ft], null, {\r\n                featureType: this.geoserverData.layer,\r\n                featureNS: this.geoserverData.uri,\r\n                srsName: 'EPSG:3857'\r\n            })\r\n            let serializer = new XMLSerializer()\r\n            let featString = serializer.serializeToString(featObject)\r\n            const { data: res } = await this.$http.post(this.geoserverData.wfsURL,\r\n                featString,\r\n                {\r\n                    headers: {\r\n                        //根据接扣文档需要加的请求头\r\n                        \"Content-Type\": \"application/xml\"\r\n                    }\r\n                })\r\n            if (res.indexOf(\"Exception\") != -1) {\r\n                console.log(res);\r\n                alert(\"添加失败！\" + res)\r\n            }\r\n            else {\r\n                alert(\"添加成功！\")\r\n                window.location.reload();\r\n            }\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n\r\n</style>\r\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./UpdateWFS.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./UpdateWFS.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./UpdateWFS.vue?vue&type=template&id=e318ed12&scoped=true&\"\nimport script from \"./UpdateWFS.vue?vue&type=script&lang=js&\"\nexport * from \"./UpdateWFS.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"e318ed12\",\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}