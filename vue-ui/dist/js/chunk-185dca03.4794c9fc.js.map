{"version":3,"sources":["webpack:///./node_modules/core-js/internals/same-value.js","webpack:///./node_modules/ol/control/scalelineunits.js","webpack:///./node_modules/ol/control/scaleline.js","webpack:///./src/components/geoserver_rest/feature/EditFeature.vue","webpack:///src/components/geoserver_rest/feature/EditFeature.vue","webpack:///./src/components/geoserver_rest/feature/EditFeature.vue?f68d","webpack:///./src/components/geoserver_rest/feature/EditFeature.vue?2e78","webpack:///./node_modules/core-js/modules/es.string.search.js","webpack:///./node_modules/ol/source/osm.js"],"names":["module","exports","Object","is","x","y","_ol_control_ScaleLineUnits_","DEGREES","IMPERIAL","NAUTICAL","METRIC","US","_ol_control_ScaleLine_","opt_options","options","className","undefined","this","innerElement_","document","createElement","element_","CLASS_UNSELECTABLE","appendChild","viewState_","minWidth_","minWidth","renderedVisible_","renderedWidth_","renderedHTML_","render","call","element","target","listen","getChangeEventType","Property_","UNITS","handleUnitsChanged_","setUnits","inherits","LEADING_DIGITS","prototype","getUnits","get","mapEvent","frameState","viewState","updateElement_","units","set","center","projection","pointResolutionUnits","METERS","pointResolution","getPointResolution","resolution","getMetersPerUnit","nominalCount","suffix","metersPerDegree","METERS_PER_UNIT","assert","count","width","i","Math","floor","log","pow","round","isNaN","style","display","html","innerHTML","_vm","_c","_self","staticStyle","attrs","on","getQueryData","inputChange","model","value","queryInfo","query","callback","$$v","$set","expression","getFindData","slot","addFeatures","_v","removeCheck","datas","pageNum","pageSize","total","handleSizeChange","handleCurrentChange","_e","ref","staticClass","trigger","mode","autoClear","rowClassName","scopedSlots","_u","key","fn","_ref","row","$refs","xTable","isActiveByRow","$event","saveRowEvent","cancelRowEvent","removeEvent","editRowEvent","_l","fields","item","data","name","type","staticRenderFns","layerName","geoURL","process","tableName","geom","isFind","isInput","map","oldGeoJSON","wktLayer","select","modify","draw","drawFeature","isDraw","created","$route","params","mounted","initMap","getTableData","methods","that","Map","layers","TileLayer","source","OSM","view","View","zoom","e","pixel","getEventPixel","originalEvent","hit","hasFeatureAtPixel","getTargetElement","cursor","addControl","ScaleLine","Select","addInteraction","feature","selected","getProperties","info","geoJSON","$table","addGeoJSON","setActiveRow","editFeatures","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","fieldName","ref1","wrap","_context","prev","next","$API","describeFeatureType","sent","abrupt","featureTypes","properties","forEach","search","getJsonFeature","crs","features","geometry","push","totalFeatures","stop","_this2","_callee2","_context2","$message","success","removeLayer","VectorSource","GeoJSON","readFeature","setProperties","VectorLayer","styleFunction","addLayer","extent","getExtent","r","getView","getResolutionForExtent","getSize","length","setResolution","setCenter","Extent","getCenter","setZoom","Modify","getSource","array_","JSON","parse","writeGeometry","getGeometry","_this3","_callee4","_context4","setActive","Draw","_callee3","_yield$$table$insertA","newRow","_context3","insertAt","removeInteraction","_x","apply","arguments","_this4","selectRecords","getCheckboxRecords","$confirm","confirmButtonText","cancelButtonText","then","_callee5","_context5","console","error","_this5","clearActived","_callee6","_context6","revertData","_this6","_callee7","_context7","image","CircleStyle","radius","fill","Fill","color","stroke","Stroke","styles","Style","lineDash","getType","watch","handler","val","oldVal","component","fixRegExpWellKnownSymbolLogic","anObject","isNullOrUndefined","requireObjectCoercible","sameValue","toString","getMethod","regExpExec","SEARCH","nativeSearch","maybeCallNative","regexp","O","searcher","RegExp","string","rx","S","res","done","previousLastIndex","lastIndex","result","index","_ol_source_OSM_","attributions","ATTRIBUTION","crossOrigin","url","cacheSize","opaque","maxZoom","reprojectionErrorThreshold","tileLoadFunction","wrapX"],"mappings":"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","file":"js/chunk-185dca03.4794c9fc.js","sourcesContent":["'use strict';\n// `SameValue` abstract operation\n// https://tc39.es/ecma262/#sec-samevalue\n// eslint-disable-next-line es/no-object-is -- safe\nmodule.exports = Object.is || function is(x, y) {\n  // eslint-disable-next-line no-self-compare -- NaN check\n  return x === y ? x !== 0 || 1 / x === 1 / y : x !== x && y !== y;\n};\n","/**\n * Units for the scale line. Supported values are `'degrees'`, `'imperial'`,\n * `'nautical'`, `'metric'`, `'us'`.\n * @enum {string}\n */\nvar _ol_control_ScaleLineUnits_ = {\n  DEGREES: 'degrees',\n  IMPERIAL: 'imperial',\n  NAUTICAL: 'nautical',\n  METRIC: 'metric',\n  US: 'us'\n};\n\nexport default _ol_control_ScaleLineUnits_;\n","import _ol_ from '../index.js';\nimport _ol_Object_ from '../object.js';\nimport _ol_asserts_ from '../asserts.js';\nimport _ol_control_Control_ from '../control/control.js';\nimport _ol_control_ScaleLineUnits_ from '../control/scalelineunits.js';\nimport _ol_css_ from '../css.js';\nimport _ol_events_ from '../events.js';\nimport _ol_proj_ from '../proj.js';\nimport _ol_proj_Units_ from '../proj/units.js';\n\n/**\n * @classdesc\n * A control displaying rough y-axis distances, calculated for the center of the\n * viewport. For conformal projections (e.g. EPSG:3857, the default view\n * projection in OpenLayers), the scale is valid for all directions.\n * No scale line will be shown when the y-axis distance of a pixel at the\n * viewport center cannot be calculated in the view projection.\n * By default the scale line will show in the bottom left portion of the map,\n * but this can be changed by using the css selector `.ol-scale-line`.\n *\n * @constructor\n * @extends {ol.control.Control}\n * @param {olx.control.ScaleLineOptions=} opt_options Scale line options.\n * @api\n */\nvar _ol_control_ScaleLine_ = function(opt_options) {\n\n  var options = opt_options ? opt_options : {};\n\n  var className = options.className !== undefined ? options.className : 'ol-scale-line';\n\n  /**\n   * @private\n   * @type {Element}\n   */\n  this.innerElement_ = document.createElement('DIV');\n  this.innerElement_.className = className + '-inner';\n\n  /**\n   * @private\n   * @type {Element}\n   */\n  this.element_ = document.createElement('DIV');\n  this.element_.className = className + ' ' + _ol_css_.CLASS_UNSELECTABLE;\n  this.element_.appendChild(this.innerElement_);\n\n  /**\n   * @private\n   * @type {?olx.ViewState}\n   */\n  this.viewState_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.minWidth_ = options.minWidth !== undefined ? options.minWidth : 64;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.renderedVisible_ = false;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.renderedWidth_ = undefined;\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.renderedHTML_ = '';\n\n  var render = options.render ? options.render : _ol_control_ScaleLine_.render;\n\n  _ol_control_Control_.call(this, {\n    element: this.element_,\n    render: render,\n    target: options.target\n  });\n\n  _ol_events_.listen(\n      this, _ol_Object_.getChangeEventType(_ol_control_ScaleLine_.Property_.UNITS),\n      this.handleUnitsChanged_, this);\n\n  this.setUnits(/** @type {ol.control.ScaleLineUnits} */ (options.units) ||\n      _ol_control_ScaleLineUnits_.METRIC);\n\n};\n\n_ol_.inherits(_ol_control_ScaleLine_, _ol_control_Control_);\n\n\n/**\n * @const\n * @type {Array.<number>}\n */\n_ol_control_ScaleLine_.LEADING_DIGITS = [1, 2, 5];\n\n\n/**\n * Return the units to use in the scale line.\n * @return {ol.control.ScaleLineUnits|undefined} The units to use in the scale\n *     line.\n * @observable\n * @api\n */\n_ol_control_ScaleLine_.prototype.getUnits = function() {\n  return (\n    /** @type {ol.control.ScaleLineUnits|undefined} */ this.get(_ol_control_ScaleLine_.Property_.UNITS)\n  );\n};\n\n\n/**\n * Update the scale line element.\n * @param {ol.MapEvent} mapEvent Map event.\n * @this {ol.control.ScaleLine}\n * @api\n */\n_ol_control_ScaleLine_.render = function(mapEvent) {\n  var frameState = mapEvent.frameState;\n  if (!frameState) {\n    this.viewState_ = null;\n  } else {\n    this.viewState_ = frameState.viewState;\n  }\n  this.updateElement_();\n};\n\n\n/**\n * @private\n */\n_ol_control_ScaleLine_.prototype.handleUnitsChanged_ = function() {\n  this.updateElement_();\n};\n\n\n/**\n * Set the units to use in the scale line.\n * @param {ol.control.ScaleLineUnits} units The units to use in the scale line.\n * @observable\n * @api\n */\n_ol_control_ScaleLine_.prototype.setUnits = function(units) {\n  this.set(_ol_control_ScaleLine_.Property_.UNITS, units);\n};\n\n\n/**\n * @private\n */\n_ol_control_ScaleLine_.prototype.updateElement_ = function() {\n  var viewState = this.viewState_;\n\n  if (!viewState) {\n    if (this.renderedVisible_) {\n      this.element_.style.display = 'none';\n      this.renderedVisible_ = false;\n    }\n    return;\n  }\n\n  var center = viewState.center;\n  var projection = viewState.projection;\n  var units = this.getUnits();\n  var pointResolutionUnits = units == _ol_control_ScaleLineUnits_.DEGREES ?\n    _ol_proj_Units_.DEGREES :\n    _ol_proj_Units_.METERS;\n  var pointResolution =\n      _ol_proj_.getPointResolution(projection, viewState.resolution, center, pointResolutionUnits);\n  if (units != _ol_control_ScaleLineUnits_.DEGREES) {\n    pointResolution *= projection.getMetersPerUnit();\n  }\n\n  var nominalCount = this.minWidth_ * pointResolution;\n  var suffix = '';\n  if (units == _ol_control_ScaleLineUnits_.DEGREES) {\n    var metersPerDegree = _ol_proj_.METERS_PER_UNIT[_ol_proj_Units_.DEGREES];\n    if (projection.getUnits() == _ol_proj_Units_.DEGREES) {\n      nominalCount *= metersPerDegree;\n    } else {\n      pointResolution /= metersPerDegree;\n    }\n    if (nominalCount < metersPerDegree / 60) {\n      suffix = '\\u2033'; // seconds\n      pointResolution *= 3600;\n    } else if (nominalCount < metersPerDegree) {\n      suffix = '\\u2032'; // minutes\n      pointResolution *= 60;\n    } else {\n      suffix = '\\u00b0'; // degrees\n    }\n  } else if (units == _ol_control_ScaleLineUnits_.IMPERIAL) {\n    if (nominalCount < 0.9144) {\n      suffix = 'in';\n      pointResolution /= 0.0254;\n    } else if (nominalCount < 1609.344) {\n      suffix = 'ft';\n      pointResolution /= 0.3048;\n    } else {\n      suffix = 'mi';\n      pointResolution /= 1609.344;\n    }\n  } else if (units == _ol_control_ScaleLineUnits_.NAUTICAL) {\n    pointResolution /= 1852;\n    suffix = 'nm';\n  } else if (units == _ol_control_ScaleLineUnits_.METRIC) {\n    if (nominalCount < 0.001) {\n      suffix = 'μm';\n      pointResolution *= 1000000;\n    } else if (nominalCount < 1) {\n      suffix = 'mm';\n      pointResolution *= 1000;\n    } else if (nominalCount < 1000) {\n      suffix = 'm';\n    } else {\n      suffix = 'km';\n      pointResolution /= 1000;\n    }\n  } else if (units == _ol_control_ScaleLineUnits_.US) {\n    if (nominalCount < 0.9144) {\n      suffix = 'in';\n      pointResolution *= 39.37;\n    } else if (nominalCount < 1609.344) {\n      suffix = 'ft';\n      pointResolution /= 0.30480061;\n    } else {\n      suffix = 'mi';\n      pointResolution /= 1609.3472;\n    }\n  } else {\n    _ol_asserts_.assert(false, 33); // Invalid units\n  }\n\n  var i = 3 * Math.floor(\n      Math.log(this.minWidth_ * pointResolution) / Math.log(10));\n  var count, width;\n  while (true) {\n    count = _ol_control_ScaleLine_.LEADING_DIGITS[((i % 3) + 3) % 3] *\n        Math.pow(10, Math.floor(i / 3));\n    width = Math.round(count / pointResolution);\n    if (isNaN(width)) {\n      this.element_.style.display = 'none';\n      this.renderedVisible_ = false;\n      return;\n    } else if (width >= this.minWidth_) {\n      break;\n    }\n    ++i;\n  }\n\n  var html = count + ' ' + suffix;\n  if (this.renderedHTML_ != html) {\n    this.innerElement_.innerHTML = html;\n    this.renderedHTML_ = html;\n  }\n\n  if (this.renderedWidth_ != width) {\n    this.innerElement_.style.width = width + 'px';\n    this.renderedWidth_ = width;\n  }\n\n  if (!this.renderedVisible_) {\n    this.element_.style.display = '';\n    this.renderedVisible_ = true;\n  }\n\n};\n\n\n/**\n * @enum {string}\n * @private\n */\n_ol_control_ScaleLine_.Property_ = {\n  UNITS: 'units'\n};\nexport default _ol_control_ScaleLine_;\n","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[_c('div',{staticStyle:{\"max-height\":\"630px\"},attrs:{\"id\":\"map\"}}),_c('el-card',[_c('el-row',{attrs:{\"gutter\":20}},[_c('el-col',{attrs:{\"span\":8}},[_c('el-input',{attrs:{\"placeholder\":\"请输入内容\",\"clearable\":\"\"},on:{\"clear\":_vm.getQueryData,\"input\":_vm.inputChange},model:{value:(_vm.queryInfo.query),callback:function ($$v) {_vm.$set(_vm.queryInfo, \"query\", $$v)},expression:\"queryInfo.query\"}},[_c('el-button',{attrs:{\"slot\":\"append\",\"icon\":\"el-icon-search\"},on:{\"click\":_vm.getFindData},slot:\"append\"})],1)],1),_c('el-col',{attrs:{\"span\":4}},[_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.addFeatures}},[_vm._v(\"添加\")]),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.removeCheck}},[_vm._v(\"批量删除\")])],1)],1),(_vm.datas !== null)?_c('el-pagination',{attrs:{\"current-page\":_vm.queryInfo.pageNum,\"page-sizes\":[5, 10, 15, 30, 100],\"page-size\":_vm.queryInfo.pageSize,\"layout\":\"total, sizes, prev, pager, next, jumper\",\"total\":_vm.total},on:{\"size-change\":_vm.handleSizeChange,\"current-change\":_vm.handleCurrentChange}}):_vm._e(),_c('vxe-table',{ref:\"xTable\",staticClass:\"mytable-style\",attrs:{\"border\":\"\",\"stripe\":\"\",\"highlight-hover-row\":\"\",\"data\":_vm.datas,\"edit-config\":{trigger: 'manual', mode: 'row', autoClear: false},\"size\":\"mini\",\"row-class-name\":_vm.rowClassName,\"max-height\":\"350\"}},[_c('vxe-table-column',{attrs:{\"type\":\"checkbox\",\"width\":\"40\"}}),_c('vxe-table-column',{attrs:{\"title\":\"操作\",\"width\":\"140\"},scopedSlots:_vm._u([{key:\"default\",fn:function({ row }){return [(_vm.$refs.xTable.isActiveByRow(row))?[_c('el-tooltip',{attrs:{\"effect\":\"dark\",\"content\":\"保存\",\"placement\":\"bottom\"}},[_c('el-button',{attrs:{\"type\":\"success\",\"size\":\"mini\",\"circle\":\"\",\"icon\":\"el-icon-s-order\"},on:{\"click\":function($event){return _vm.saveRowEvent(row)}}})],1),_c('el-tooltip',{attrs:{\"effect\":\"dark\",\"content\":\"取消\",\"placement\":\"bottom\"}},[_c('el-button',{attrs:{\"type\":\"info\",\"size\":\"mini\",\"circle\":\"\",\"icon\":\"el-icon-close\"},on:{\"click\":function($event){return _vm.cancelRowEvent(row)}}})],1),_c('el-tooltip',{attrs:{\"effect\":\"dark\",\"content\":\"删除\",\"placement\":\"bottom\"}},[_c('el-button',{attrs:{\"type\":\"danger\",\"size\":\"mini\",\"circle\":\"\",\"icon\":\"el-icon-delete-solid\"},on:{\"click\":function($event){return _vm.removeEvent(row)}}})],1)]:[_c('el-tooltip',{attrs:{\"effect\":\"dark\",\"content\":\"编辑\",\"placement\":\"bottom\"}},[_c('el-button',{attrs:{\"circle\":\"\",\"size\":\"mini\",\"icon\":\"el-icon-setting\"},on:{\"click\":function($event){return _vm.editRowEvent(row)}}})],1)]]}}])}),_vm._l((_vm.fields),function(item){return (_vm.data[1] !== item.name)?_c('vxe-table-column',{attrs:{\"field\":item.name,\"title\":item.name,\"min-width\":\"80px\",\"height\":\"20px\",\"show-header-overflow\":\"\",\"show-overflow\":\"title\",\"show-footer-overflow\":\"\",\"edit-render\":{name: 'input', attrs: {type: 'text'}}}}):_vm._e()})],2),(_vm.datas === null)?_c('el-empty',{attrs:{\"description\":\"无数据\"}}):_vm._e()],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div>\r\n    <div id=\"map\" style=\"max-height: 630px;\"></div>\r\n    <el-card>\r\n      <!--输入框和添加按钮-->\r\n      <el-row :gutter=\"20\">\r\n        <el-col :span=\"8\">\r\n          <el-input placeholder=\"请输入内容\" v-model=\"queryInfo.query\" clearable @clear=\"getQueryData\" @input=\"inputChange\">\r\n            <el-button slot=\"append\" icon=\"el-icon-search\" @click=\"getFindData\"></el-button>\r\n          </el-input>\r\n        </el-col>\r\n        <el-col :span=\"4\">\r\n          <el-button type=\"primary\" @click=\"addFeatures\">添加</el-button>\r\n          <el-button type=\"primary\" @click=\"removeCheck\">批量删除</el-button>\r\n        </el-col>\r\n      </el-row>\r\n      <!--分页-->\r\n      <el-pagination v-if=\"datas !== null\" @size-change=\"handleSizeChange\" @current-change=\"handleCurrentChange\" :current-page=\"queryInfo.pageNum\"\r\n                     :page-sizes=\"[5, 10, 15, 30, 100]\" :page-size=\"queryInfo.pageSize\" layout=\"total, sizes, prev, pager, next, jumper\" :total=\"total\">\r\n      </el-pagination>\r\n      <!--列表-->\r\n      <vxe-table ref=\"xTable\" class=\"mytable-style\" border stripe highlight-hover-row\r\n                 :data=\"datas\" :edit-config=\"{trigger: 'manual', mode: 'row', autoClear: false}\"\r\n                 size=\"mini\" :row-class-name=\"rowClassName\" max-height=\"350\">\r\n        <vxe-table-column type=\"checkbox\" width=\"40\"></vxe-table-column>\r\n        <vxe-table-column title=\"操作\" width=\"140\">\r\n          <template #default=\"{ row }\">\r\n            <template v-if=\"$refs.xTable.isActiveByRow(row)\">\r\n              <el-tooltip effect=\"dark\" content=\"保存\" placement=\"bottom\">\r\n                <el-button type=\"success\" size=\"mini\" circle  icon=\"el-icon-s-order\" @click=\"saveRowEvent(row)\"></el-button>\r\n              </el-tooltip>\r\n              <el-tooltip effect=\"dark\" content=\"取消\" placement=\"bottom\">\r\n                <el-button type=\"info\" size=\"mini\" circle  icon=\"el-icon-close\" @click=\"cancelRowEvent(row)\"></el-button>\r\n              </el-tooltip>\r\n              <el-tooltip effect=\"dark\" content=\"删除\" placement=\"bottom\">\r\n                <el-button type=\"danger\" size=\"mini\" circle  icon=\"el-icon-delete-solid\" @click=\"removeEvent(row)\"></el-button>\r\n              </el-tooltip>\r\n            </template>\r\n            <template v-else>\r\n              <el-tooltip effect=\"dark\" content=\"编辑\" placement=\"bottom\">\r\n                <el-button circle size=\"mini\" icon=\"el-icon-setting\" @click=\"editRowEvent(row)\"></el-button>\r\n              </el-tooltip>\r\n            </template>\r\n          </template>\r\n        </vxe-table-column>\r\n        <vxe-table-column v-for=\"item in fields\" v-if=\"data[1] !== item.name\"\r\n                          :field=\"item.name\" :title=\"item.name\" min-width=\"80px\" height=\"20px\"\r\n                          show-header-overflow show-overflow=\"title\" show-footer-overflow\r\n                          :edit-render=\"{name: 'input', attrs: {type: 'text'}}\">\r\n        </vxe-table-column>\r\n      </vxe-table>\r\n      <el-empty v-if=\"datas === null\" description=\"无数据\"></el-empty>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport \"ol/ol.css\";\r\nimport Map from 'ol/map';\r\nimport View from 'ol/view';\r\nimport Point from 'ol/geom/point';\r\nimport TileLayer from 'ol/layer/tile';\r\nimport VectorLayer from 'ol/layer/vector';\r\nimport OSM from \"ol/source/osm\";\r\nimport VectorSource from 'ol/source/vector';\r\nimport GeoJSON from 'ol/format/geojson';\r\nimport Draw from 'ol/interaction/draw';\r\nimport Select from 'ol/interaction/select';\r\nimport Modify from 'ol/interaction/modify';\r\nimport Style from 'ol/style/style';\r\nimport Stroke from 'ol/style/stroke';\r\nimport Fill from 'ol/style/fill';\r\nimport ScaleLine from 'ol/control/scaleline';\r\nimport CircleStyle from \"ol/style/circle\";\r\nimport Extent from 'ol/extent';\r\nimport {searchFeature} from \"@/api\";\r\nimport {getLikeSQL, getSearchURLs} from \"@/utils/searchUtils\";\r\nexport default {\r\n  name: \"EditFeature\",\r\n  data() {\r\n    return {\r\n      data: [],//[表名,geometry字段名,geometry类型],例[china_boundry,geom,LINE]\r\n      layerName: '',\r\n      geoURL: process.env.VUE_APP_GEOSERVER,\r\n      fields:[],\r\n      //存储表格数据\r\n      datas: [],\r\n      //表数据总条数\r\n      total: 0,\r\n      //查询数据请求表单\r\n      queryInfo: {\r\n        //表名\r\n        tableName: '',\r\n        //geometry字段名\r\n        geom: '',\r\n        //查询内容\r\n        query: '',\r\n        //页码\r\n        pageNum: 1,\r\n        //每页数据量\r\n        pageSize: 10,\r\n        //表所有字段名称\r\n        fields: []\r\n      },\r\n      //是否处于查询状态\r\n      isFind: false,\r\n      //是否处于输入状态\r\n      isInput: false,\r\n      //地图对象\r\n      map: null,\r\n      //存储更新前wkt数据，取消时使用\r\n      oldGeoJSON: '',\r\n      //wkt图层对象\r\n      wktLayer: null,\r\n      //select查询对象\r\n      select: null,\r\n      //modify编辑对象\r\n      modify: null,\r\n      //draw绘画对象\r\n      draw:null,\r\n      //绘制新要素对象\r\n      drawFeature: null,\r\n      //是否处于编辑状态\r\n      isDraw:false\r\n    }\r\n  },\r\n  created() {\r\n    this.layerName = this.$route.params.name;\r\n    this.data[0] = this.layerName;\r\n  },\r\n  mounted() {\r\n    //初始化地图\r\n    this.initMap();\r\n    //请求获取指定表数据\r\n    this.getTableData();\r\n  },\r\n  methods: {\r\n    //初始化地图\r\n    initMap() {\r\n      let that = this;\r\n      //创建地图对象\r\n      const map = new Map({\r\n        target: \"map\", //绑定页面中DOM元素的id\r\n        layers: [\r\n          new TileLayer({\r\n            //数据源\r\n            source: new OSM(), //openlayers内置的数据源\r\n            name: \"OSM地图\",\r\n          }),\r\n        ],\r\n        view: new View({\r\n          projection: \"EPSG:3857\", //坐标系3857\r\n          //视图配置\r\n          center: [12233037.3, 4861921.87], //地图中心点坐标，经度、纬度\r\n          zoom: 5, //定义地图显示层级\r\n        }),\r\n      });\r\n      // 为map添加鼠标移动事件监听，当指向标注时改变鼠标光标状态\r\n      map.on('pointermove', function (e) {\r\n        let pixel = map.getEventPixel(e.originalEvent);\r\n        let hit = map.hasFeatureAtPixel(pixel);\r\n        map.getTargetElement().style.cursor = hit ? 'pointer' : '';\r\n      });\r\n      //添加比例尺控件\r\n      map.addControl(new ScaleLine());\r\n      //创建select对象\r\n      let select = new Select();\r\n      this.select = select;\r\n      map.addInteraction(select);\r\n      //select处于选择事件时\r\n      select.on(\"select\", function (e) {\r\n        let feature = e.selected;\r\n        //获取选中要素属性信息\r\n        let row = feature[0].getProperties().info;\r\n        //保存选中要素旧wkt数据\r\n        that.oldGeoJSON = row.geoJSON;\r\n        //获取table元素\r\n        const $table = that.$refs.xTable;\r\n        //添加wkt图层\r\n        that.addGeoJSON([row]);\r\n        //激活编辑数据行\r\n        $table.setActiveRow(row);\r\n        //激活要素编辑\r\n        that.editFeatures(row);\r\n      });\r\n      this.map = map;\r\n\r\n    },\r\n    //请求获取表数据\r\n    async getTableData() {\r\n      //非查询状态\r\n      this.isFind = false;\r\n      //请求指定表格数据\r\n      const ref = await this.$API.describeFeatureType(this.geoURL, this.layerName);\r\n      //如果请求状态码404，则返回\r\n      if (!ref) return;\r\n      //表字段名称赋值\r\n      this.fields = ref.featureTypes[0].properties;\r\n      let fieldName=''\r\n      this.fields.forEach(item => {\r\n        if (item.type.search('gml') !== -1) {\r\n          // this.data[2] = item.type.split(':')[1];\r\n          this.data[1] = item.name;\r\n        } else fieldName = item.name\r\n      });\r\n      //请求指定图层属性信息\r\n      let ref1 = await this.$API.getJsonFeature(this.geoURL, this.layerName, {\r\n        pageNum: this.queryInfo.pageNum,\r\n        pageSize: this.queryInfo.pageSize,\r\n        name: fieldName,\r\n        crs: 'EPSG:3857'\r\n      });\r\n      //如果请求状态码404，则返回\r\n      if (!ref1) return;\r\n      this.datas = [];\r\n      //表格数据赋值\r\n      ref1.features.forEach(item => {\r\n        //获取要素GeoJSON\r\n        item.properties.geoJSON = item.geometry\r\n        this.datas.push(item.properties)\r\n      });\r\n      //设置要素类型\r\n      this.data[2] = ref1.features[0].geometry.type\r\n      //如果表数据为空 数据总条数赋值0\r\n      this.total = ref1.totalFeatures;\r\n      //添加WKT图层到地图上\r\n      this.addGeoJSON(this.datas);\r\n    },\r\n    //分页大小修改事件\r\n    handleSizeChange(e) {\r\n      //分页数据量更改 跳转到第一页\r\n      this.queryInfo.pageNum = 1;\r\n      this.queryInfo.pageSize = e;\r\n      //如果查询状态 请求查询接口\r\n      if (this.isFind) this.getFindData();\r\n      else this.getTableData();\r\n    },\r\n    //下一页分页修改事件\r\n    handleCurrentChange(e) {\r\n      this.queryInfo.pageNum = e;\r\n      if (this.isFind) this.getFindData();\r\n      else this.getTableData();\r\n    },\r\n    //查询输入框清除时更新数据\r\n    getQueryData() {\r\n      this.queryInfo.pageNum = 1;\r\n      this.getTableData();\r\n    },\r\n    //请求查询表数据\r\n    async getFindData() {\r\n      if(!this.isFind || this.isInput) this.queryInfo.pageNum = 1;\r\n      //输入状态\r\n      this.isInput = false;\r\n      //查询状态赋值为真\r\n      this.isFind = true;\r\n      //请求查询接口\r\n      /*let ref1 = await this.$API.getJsonFeature(this.geoURL, this.layerName, {\r\n        pageNum: this.queryInfo.pageNum,\r\n        pageSize: this.queryInfo.pageSize,\r\n        name: fieldName,\r\n        crs: 'EPSG:3857'\r\n      });\r\n      //如果请求状态码404，则返回\r\n      if (!ref1) return;\r\n      this.datas = [];\r\n      //表格数据赋值\r\n      ref1.features.forEach(item => {\r\n        //获取要素GeoJSON\r\n        item.properties.geoJSON = item.geometry\r\n        this.datas.push(item.properties)\r\n      });\r\n      //设置要素类型\r\n      this.data[2] = ref1.features[0].geometry.type\r\n      //如果表数据为空 数据总条数赋值0\r\n      this.total = ref1.totalFeatures;\r\n      //添加WKT图层到地图上\r\n      this.addGeoJSON(this.datas);*/\r\n      this.$message.success(\"查询接口待完善！\")\r\n    },\r\n    //输入框事件\r\n    inputChange(){\r\n      this.isInput = true;\r\n    },\r\n    //添加wkt到地图\r\n    addGeoJSON(data) {\r\n      const map = this.map;\r\n      //清除上一次加载的wkt图层\r\n      map.removeLayer(this.wktLayer);\r\n      if (data === null) return;\r\n      let source = new VectorSource();\r\n      let features = []\r\n      //循环data 加载要素到地图\r\n      data.forEach(item => {\r\n        //读取数据表中wkt创建为feature对象\r\n        let feature = new GeoJSON().readFeature(item.geoJSON);\r\n        //feature赋值属性信息\r\n        feature.setProperties({info: item});\r\n        features.push(feature);\r\n      });\r\n      source.addFeatures(features);\r\n      //加载要素到地图\r\n      this.wktLayer = new VectorLayer({\r\n        source: source,\r\n        style: this.styleFunction,\r\n      });\r\n      //添加wkt图层到地图\r\n      map.addLayer(this.wktLayer);\r\n      //通过extent缩放至范围\r\n      let extent = source.getExtent();\r\n      let r = map.getView().getResolutionForExtent(extent, map.getSize());\r\n      if (data.length > 1) {\r\n        //设置地图显示缩放等级\r\n        map.getView().setResolution(r);\r\n        //设置地图中心点\r\n        map.getView().setCenter(Extent.getCenter(extent));\r\n      } else {//如果只有一条数据\r\n        //设置地图中心点\r\n        map.getView().setCenter(Extent.getCenter(extent));\r\n        if (this.data[2] === 'Point') {//如果地理要素类型为点\r\n          //设置地图缩放等级为11\r\n          map.getView().setZoom(11);\r\n        } else {//如果地理要素类型不是点\r\n          //设置地图缩放等级\r\n          map.getView().setResolution(r);\r\n        }\r\n      }\r\n    },\r\n    //编辑地图要素\r\n    editFeatures(row) {\r\n      let map = this.map;\r\n      //创建Modify编辑对象\r\n      let modify = new Modify({source: this.wktLayer.getSource()});\r\n      map.addInteraction(modify);\r\n      //编辑结束后\r\n      modify.on(\"modifyend\", function (e) {\r\n        let features = e.features;\r\n        let feature = features.array_[0];\r\n        //获取要素的wkt数据\r\n        row.geoJSON = JSON.parse(new GeoJSON().writeGeometry(feature.getGeometry()));\r\n      });\r\n      this.modify = modify;\r\n    },\r\n    //绘制新要素\r\n    async addFeatures() {\r\n      let that = this;\r\n      this.isDraw = true;\r\n      let map = this.map;\r\n      this.select.setActive(false);\r\n      //创建编辑对象Draw\r\n      let draw = new Draw({\r\n        source: this.wktLayer.getSource(),//绑定wkt图层源\r\n        type: this.data[2],//要素类型\r\n      });\r\n      map.addInteraction(draw);\r\n      const $table = this.$refs.xTable;\r\n      //编辑结束时\r\n      draw.on(\"drawend\", async function (e) {\r\n        //存储feature\r\n        that.drawFeature = e.feature;\r\n        const { row: newRow } = await $table.insertAt({\r\n            geoJSON: JSON.parse(new GeoJSON().writeGeometry(e.feature.getGeometry()))\r\n        }, 0)\r\n        await $table.setActiveRow(newRow);\r\n        that.editFeatures(newRow);\r\n        //移除编辑对象\r\n        map.removeInteraction(draw);\r\n      });\r\n    },\r\n    //删除选中数据\r\n    removeCheck() {\r\n      const $table = this.$refs.xTable;\r\n      const selectRecords = $table.getCheckboxRecords();\r\n      if (selectRecords.length === 0) {\r\n        this.$message.error(\"没有选中数据！\");\r\n        return;\r\n      }\r\n      //打开弹窗\r\n      this.$confirm('此操作将永久删除数据, 是否继续?', '提示', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }).then(async () => {\r\n        let geoms = [];\r\n        selectRecords.forEach(item => {\r\n          console.log(item)\r\n        });\r\n        //当弹窗点击修改后 请求删除接口\r\n        if(false) {\r\n          this.$message.success(\"删除成功！\");\r\n          await this.$refs.xTable.removeCheckboxRow();\r\n          this.handleCurrentChange(1);\r\n        }\r\n        else {\r\n          this.$message.success(\"删除接口待完善！\")\r\n        }\r\n      });\r\n    },\r\n    //编辑表格某一行数据\r\n    editRowEvent(row) {\r\n      //修改前的wkt赋值，供取消修改时使用\r\n      this.oldGeoJSON = row.geoJSON;\r\n      this.isDraw = false;\r\n      //获取tabley元素\r\n      const $table = this.$refs.xTable;\r\n      //激活编辑的数据行\r\n      $table.setActiveRow(row);\r\n      //将编辑数据行的地理数据在地图上显示\r\n      this.addGeoJSON([row]);\r\n      //编辑feature\r\n      this.editFeatures(row);\r\n    },\r\n    //保存修改行数据\r\n    saveRowEvent(row) {\r\n      let that = this;\r\n      const $table = this.$refs.xTable;\r\n      //表格数据保存时\r\n      $table.clearActived().then(async () => {\r\n        //移除编辑对象modify\r\n        that.map.removeInteraction(that.modify);\r\n        //更新地图要素\r\n        that.addGeoJSON(that.datas);\r\n        //是否处于绘制状态\r\n        if (!that.isDraw) {\r\n          console.log(\"修改后数据\", row)\r\n          this.$message.success(\"修改接口待完善！\")\r\n        } else {\r\n          console.log(\"添加的新数据\", row)\r\n          this.$message.success(\"添加接口待完善！\")\r\n        }\r\n        //如果查询状态 请求查询接口\r\n        if (this.isFind) await this.getFindData();\r\n        else await this.getTableData();\r\n      });\r\n    },\r\n    //取消修改行数据\r\n    cancelRowEvent(row) {\r\n      let that = this;\r\n      const $table = this.$refs.xTable;\r\n      //表格数据取消修改时\r\n      $table.clearActived().then(() => {\r\n        //将旧wkt地理数据还原\r\n        row.geoJSON = that.oldGeoJSON;\r\n        // 还原行数据\r\n        $table.revertData(row);\r\n        //移除编辑modify对象\r\n        that.map.removeInteraction(that.modify);\r\n        //更新wkt图层数据\r\n        that.addGeoJSON(that.datas);\r\n      });\r\n    },\r\n    //删除行数据\r\n    removeEvent(row) {\r\n      //打开弹窗\r\n      this.$confirm('此操作将永久删除该数据, 是否继续?', '提示', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }).then(async () => {\r\n        //当弹窗点击修改后 请求删除接口\r\n        if(false) {\r\n          this.$message.success(\"删除成功！\");\r\n          this.$refs.xTable.remove(row);\r\n          this.handleCurrentChange(1);\r\n        }\r\n        else {\r\n          this.$message.success(\"删除接口待完善！\")\r\n        }\r\n      });\r\n    },\r\n    //创建样式\r\n    styleFunction(feature){\r\n      const image = new CircleStyle({\r\n        radius: 4,\r\n        fill: new Fill({\r\n          color: 'rgb(255,0,0)',\r\n        }),\r\n        stroke: new Stroke({color: 'rgb(0,7,255)', width: 1}),\r\n      });\r\n      const styles = {\r\n        'Point': new Style({\r\n          image: image,\r\n        }),\r\n        'LineString': new Style({\r\n          stroke: new Stroke({\r\n            color: 'rgb(255,89,0)',\r\n            width: 3,\r\n          }),\r\n        }),\r\n        'MultiLineString': new Style({\r\n          stroke: new Stroke({\r\n            color: 'rgb(255,89,0)',\r\n            width: 3,\r\n          }),\r\n        }),\r\n        'MultiPoint': new Style({\r\n          image: image,\r\n        }),\r\n        'MultiPolygon': new Style({\r\n          stroke: new Stroke({\r\n            color: 'yellow',\r\n            width: 1,\r\n          }),\r\n          fill: new Fill({\r\n            color: 'rgba(255,255,0,0.29)',\r\n          }),\r\n        }),\r\n        'Polygon': new Style({\r\n          stroke: new Stroke({\r\n            color: 'blue',\r\n            lineDash: [4],\r\n            width: 3,\r\n          }),\r\n          fill: new Fill({\r\n            color: 'rgba(0,0,255,0.47)',\r\n          }),\r\n        }),\r\n        'GeometryCollection': new Style({\r\n          stroke: new Stroke({\r\n            color: 'rgb(208,0,255)',\r\n            width: 2,\r\n          }),\r\n          fill: new Fill({\r\n            color: 'rgb(208,0,255)',\r\n          }),\r\n          image: new CircleStyle({\r\n            radius: 10,\r\n            fill: null,\r\n            stroke: new Stroke({\r\n              color: 'rgb(208,0,255)',\r\n            }),\r\n          }),\r\n        }),\r\n        'Circle': new Style({\r\n          stroke: new Stroke({\r\n            color: 'rgba(255,0,0,0.2)',\r\n            width: 2,\r\n          }),\r\n          fill: new Fill({\r\n            color: 'rgba(255,0,0,0.2)',\r\n          }),\r\n        }),\r\n      };\r\n      return styles[feature.getGeometry().getType()];\r\n    },\r\n    //设置表格行样式\r\n    rowClassName() {\r\n      // 返回类名row-height\r\n      return 'row-height';\r\n    }\r\n  },\r\n  watch: {\r\n    //监听路由变化\r\n    $route: {\r\n      handler: function (val, oldVal) {\r\n        //更新图层名称\r\n        this.layerName = val.params.name;\r\n        //更新分页页码为1\r\n        this.queryInfo.pageNum = 1;\r\n        //获取该表格数据\r\n        this.getTableData();\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n<style>\r\n</style>\r\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./EditFeature.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./EditFeature.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./EditFeature.vue?vue&type=template&id=f8afb806&\"\nimport script from \"./EditFeature.vue?vue&type=script&lang=js&\"\nexport * from \"./EditFeature.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","'use strict';\nvar call = require('../internals/function-call');\nvar fixRegExpWellKnownSymbolLogic = require('../internals/fix-regexp-well-known-symbol-logic');\nvar anObject = require('../internals/an-object');\nvar isNullOrUndefined = require('../internals/is-null-or-undefined');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar sameValue = require('../internals/same-value');\nvar toString = require('../internals/to-string');\nvar getMethod = require('../internals/get-method');\nvar regExpExec = require('../internals/regexp-exec-abstract');\n\n// @@search logic\nfixRegExpWellKnownSymbolLogic('search', function (SEARCH, nativeSearch, maybeCallNative) {\n  return [\n    // `String.prototype.search` method\n    // https://tc39.es/ecma262/#sec-string.prototype.search\n    function search(regexp) {\n      var O = requireObjectCoercible(this);\n      var searcher = isNullOrUndefined(regexp) ? undefined : getMethod(regexp, SEARCH);\n      return searcher ? call(searcher, regexp, O) : new RegExp(regexp)[SEARCH](toString(O));\n    },\n    // `RegExp.prototype[@@search]` method\n    // https://tc39.es/ecma262/#sec-regexp.prototype-@@search\n    function (string) {\n      var rx = anObject(this);\n      var S = toString(string);\n      var res = maybeCallNative(nativeSearch, rx, S);\n\n      if (res.done) return res.value;\n\n      var previousLastIndex = rx.lastIndex;\n      if (!sameValue(previousLastIndex, 0)) rx.lastIndex = 0;\n      var result = regExpExec(rx, S);\n      if (!sameValue(rx.lastIndex, previousLastIndex)) rx.lastIndex = previousLastIndex;\n      return result === null ? -1 : result.index;\n    }\n  ];\n});\n","import _ol_ from '../index.js';\nimport _ol_source_XYZ_ from '../source/xyz.js';\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n *\n * @constructor\n * @extends {ol.source.XYZ}\n * @param {olx.source.OSMOptions=} opt_options Open Street Map options.\n * @api\n */\nvar _ol_source_OSM_ = function(opt_options) {\n\n  var options = opt_options || {};\n\n  var attributions;\n  if (options.attributions !== undefined) {\n    attributions = options.attributions;\n  } else {\n    attributions = [_ol_source_OSM_.ATTRIBUTION];\n  }\n\n  var crossOrigin = options.crossOrigin !== undefined ?\n    options.crossOrigin : 'anonymous';\n\n  var url = options.url !== undefined ?\n    options.url : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n  _ol_source_XYZ_.call(this, {\n    attributions: attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: crossOrigin,\n    opaque: options.opaque !== undefined ? options.opaque : true,\n    maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileLoadFunction: options.tileLoadFunction,\n    url: url,\n    wrapX: options.wrapX\n  });\n\n};\n\n_ol_.inherits(_ol_source_OSM_, _ol_source_XYZ_);\n\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\n_ol_source_OSM_.ATTRIBUTION = '&copy; ' +\n      '<a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> ' +\n      'contributors.';\nexport default _ol_source_OSM_;\n"],"sourceRoot":""}