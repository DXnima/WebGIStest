{"version":3,"sources":["webpack:///./node_modules/ol/style/text.js","webpack:///./src/components/openlayers/ShowGeoJSON.vue","webpack:///src/components/openlayers/ShowGeoJSON.vue","webpack:///./src/components/openlayers/ShowGeoJSON.vue?68c1","webpack:///./src/components/openlayers/ShowGeoJSON.vue?a885"],"names":["_ol_style_Text_","opt_options","options","this","font_","font","rotation_","rotation","rotateWithView_","rotateWithView","scale_","scale","text_","text","textAlign_","textAlign","textBaseline_","textBaseline","fill_","undefined","fill","color","DEFAULT_FILL_COLOR_","maxAngle_","maxAngle","Math","PI","placement_","placement","POINT","overflow","exceedLength","overflow_","stroke_","stroke","offsetX_","offsetX","offsetY_","offsetY","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","padding_","padding","prototype","clone","getFont","getPlacement","getMaxAngle","getOverflow","getRotation","getRotateWithView","getScale","getText","getTextAlign","getTextBaseline","getFill","getStroke","getOffsetX","getOffsetY","getBackgroundFill","getBackgroundStroke","getPadding","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setFill","setRotation","setScale","setStroke","setText","setTextAlign","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","render","_vm","_c","_self","attrs","path","_v","staticRenderFns","data","map","geojson","created","mounted","methods","initMap","zoom","center","controls","attribution","target","layers","getTdtLayer","view","_geom","features","source","style","renderMode","console","styleFunction","width","_name","_radius2","_radius","styles","image","points","radius","radius2","angle","geometry","component"],"mappings":"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","file":"js/chunk-027b4908.f36a236e.js","sourcesContent":["import _ol_style_Fill_ from '../style/fill.js';\nimport _ol_style_TextPlacement_ from '../style/textplacement.js';\n\n/**\n * @classdesc\n * Set text style for vector features.\n *\n * @constructor\n * @param {olx.style.TextOptions=} opt_options Options.\n * @api\n */\nvar _ol_style_Text_ = function(opt_options) {\n\n  var options = opt_options || {};\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.font_ = options.font;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.rotation_ = options.rotation;\n\n  /**\n   * @private\n   * @type {boolean|undefined}\n   */\n  this.rotateWithView_ = options.rotateWithView;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.scale_ = options.scale;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.text_ = options.text;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.textAlign_ = options.textAlign;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.textBaseline_ = options.textBaseline;\n\n  /**\n   * @private\n   * @type {ol.style.Fill}\n   */\n  this.fill_ = options.fill !== undefined ? options.fill :\n    new _ol_style_Fill_({color: _ol_style_Text_.DEFAULT_FILL_COLOR_});\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxAngle_ = options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n  /**\n   * @private\n   * @type {ol.style.TextPlacement|string}\n   */\n  this.placement_ = options.placement !== undefined ? options.placement : _ol_style_TextPlacement_.POINT;\n\n  //TODO Use options.overflow directly after removing @deprecated exceedLength\n  var overflow = options.overflow === undefined ? options.exceedLength : options.overflow;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.overflow_ = overflow !== undefined ? overflow : false;\n\n  /**\n   * @private\n   * @type {ol.style.Stroke}\n   */\n  this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n  /**\n   * @private\n   * @type {ol.style.Fill}\n   */\n  this.backgroundFill_ = options.backgroundFill ? options.backgroundFill : null;\n\n  /**\n   * @private\n   * @type {ol.style.Stroke}\n   */\n  this.backgroundStroke_ = options.backgroundStroke ? options.backgroundStroke : null;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.padding_ = options.padding === undefined ? null : options.padding;\n};\n\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n * @private\n */\n_ol_style_Text_.DEFAULT_FILL_COLOR_ = '#333';\n\n\n/**\n * Clones the style.\n * @return {ol.style.Text} The cloned style.\n * @api\n */\n_ol_style_Text_.prototype.clone = function() {\n  return new _ol_style_Text_({\n    font: this.getFont(),\n    placement: this.getPlacement(),\n    maxAngle: this.getMaxAngle(),\n    overflow: this.getOverflow(),\n    rotation: this.getRotation(),\n    rotateWithView: this.getRotateWithView(),\n    scale: this.getScale(),\n    text: this.getText(),\n    textAlign: this.getTextAlign(),\n    textBaseline: this.getTextBaseline(),\n    fill: this.getFill() ? this.getFill().clone() : undefined,\n    stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n    offsetX: this.getOffsetX(),\n    offsetY: this.getOffsetY()\n  });\n};\n\n\n/**\n * Get the `overflow` configuration.\n * @return {boolean} Let text overflow the length of the path they follow.\n * @api\n */\n_ol_style_Text_.prototype.getOverflow = function() {\n  return this.overflow_;\n};\n\n\n/**\n * Get the font name.\n * @return {string|undefined} Font.\n * @api\n */\n_ol_style_Text_.prototype.getFont = function() {\n  return this.font_;\n};\n\n\n/**\n * Get the maximum angle between adjacent characters.\n * @return {number} Angle in radians.\n * @api\n */\n_ol_style_Text_.prototype.getMaxAngle = function() {\n  return this.maxAngle_;\n};\n\n\n/**\n * Get the label placement.\n * @return {ol.style.TextPlacement|string} Text placement.\n * @api\n */\n_ol_style_Text_.prototype.getPlacement = function() {\n  return this.placement_;\n};\n\n\n/**\n * Get the x-offset for the text.\n * @return {number} Horizontal text offset.\n * @api\n */\n_ol_style_Text_.prototype.getOffsetX = function() {\n  return this.offsetX_;\n};\n\n\n/**\n * Get the y-offset for the text.\n * @return {number} Vertical text offset.\n * @api\n */\n_ol_style_Text_.prototype.getOffsetY = function() {\n  return this.offsetY_;\n};\n\n\n/**\n * Get the fill style for the text.\n * @return {ol.style.Fill} Fill style.\n * @api\n */\n_ol_style_Text_.prototype.getFill = function() {\n  return this.fill_;\n};\n\n\n/**\n * Determine whether the text rotates with the map.\n * @return {boolean|undefined} Rotate with map.\n * @api\n */\n_ol_style_Text_.prototype.getRotateWithView = function() {\n  return this.rotateWithView_;\n};\n\n\n/**\n * Get the text rotation.\n * @return {number|undefined} Rotation.\n * @api\n */\n_ol_style_Text_.prototype.getRotation = function() {\n  return this.rotation_;\n};\n\n\n/**\n * Get the text scale.\n * @return {number|undefined} Scale.\n * @api\n */\n_ol_style_Text_.prototype.getScale = function() {\n  return this.scale_;\n};\n\n\n/**\n * Get the stroke style for the text.\n * @return {ol.style.Stroke} Stroke style.\n * @api\n */\n_ol_style_Text_.prototype.getStroke = function() {\n  return this.stroke_;\n};\n\n\n/**\n * Get the text to be rendered.\n * @return {string|undefined} Text.\n * @api\n */\n_ol_style_Text_.prototype.getText = function() {\n  return this.text_;\n};\n\n\n/**\n * Get the text alignment.\n * @return {string|undefined} Text align.\n * @api\n */\n_ol_style_Text_.prototype.getTextAlign = function() {\n  return this.textAlign_;\n};\n\n\n/**\n * Get the text baseline.\n * @return {string|undefined} Text baseline.\n * @api\n */\n_ol_style_Text_.prototype.getTextBaseline = function() {\n  return this.textBaseline_;\n};\n\n\n/**\n * Get the background fill style for the text.\n * @return {ol.style.Fill} Fill style.\n * @api\n */\n_ol_style_Text_.prototype.getBackgroundFill = function() {\n  return this.backgroundFill_;\n};\n\n\n/**\n * Get the background stroke style for the text.\n * @return {ol.style.Stroke} Stroke style.\n * @api\n */\n_ol_style_Text_.prototype.getBackgroundStroke = function() {\n  return this.backgroundStroke_;\n};\n\n\n/**\n * Get the padding for the text.\n * @return {Array.<number>} Padding.\n * @api\n */\n_ol_style_Text_.prototype.getPadding = function() {\n  return this.padding_;\n};\n\n\n/**\n * Set the `overflow` property.\n *\n * @param {boolean} overflow Let text overflow the path that it follows.\n * @api\n */\n_ol_style_Text_.prototype.setOverflow = function(overflow) {\n  this.overflow_ = overflow;\n};\n\n\n/**\n * Set the font.\n *\n * @param {string|undefined} font Font.\n * @api\n */\n_ol_style_Text_.prototype.setFont = function(font) {\n  this.font_ = font;\n};\n\n\n/**\n * Set the maximum angle between adjacent characters.\n *\n * @param {number} maxAngle Angle in radians.\n * @api\n */\n_ol_style_Text_.prototype.setMaxAngle = function(maxAngle) {\n  this.maxAngle_ = maxAngle;\n};\n\n\n/**\n * Set the x offset.\n *\n * @param {number} offsetX Horizontal text offset.\n * @api\n */\n_ol_style_Text_.prototype.setOffsetX = function(offsetX) {\n  this.offsetX_ = offsetX;\n};\n\n\n/**\n * Set the y offset.\n *\n * @param {number} offsetY Vertical text offset.\n * @api\n */\n_ol_style_Text_.prototype.setOffsetY = function(offsetY) {\n  this.offsetY_ = offsetY;\n};\n\n\n/**\n * Set the text placement.\n *\n * @param {ol.style.TextPlacement|string} placement Placement.\n * @api\n */\n_ol_style_Text_.prototype.setPlacement = function(placement) {\n  this.placement_ = placement;\n};\n\n\n/**\n * Set the fill.\n *\n * @param {ol.style.Fill} fill Fill style.\n * @api\n */\n_ol_style_Text_.prototype.setFill = function(fill) {\n  this.fill_ = fill;\n};\n\n\n/**\n * Set the rotation.\n *\n * @param {number|undefined} rotation Rotation.\n * @api\n */\n_ol_style_Text_.prototype.setRotation = function(rotation) {\n  this.rotation_ = rotation;\n};\n\n\n/**\n * Set the scale.\n *\n * @param {number|undefined} scale Scale.\n * @api\n */\n_ol_style_Text_.prototype.setScale = function(scale) {\n  this.scale_ = scale;\n};\n\n\n/**\n * Set the stroke.\n *\n * @param {ol.style.Stroke} stroke Stroke style.\n * @api\n */\n_ol_style_Text_.prototype.setStroke = function(stroke) {\n  this.stroke_ = stroke;\n};\n\n\n/**\n * Set the text.\n *\n * @param {string|undefined} text Text.\n * @api\n */\n_ol_style_Text_.prototype.setText = function(text) {\n  this.text_ = text;\n};\n\n\n/**\n * Set the text alignment.\n *\n * @param {string|undefined} textAlign Text align.\n * @api\n */\n_ol_style_Text_.prototype.setTextAlign = function(textAlign) {\n  this.textAlign_ = textAlign;\n};\n\n\n/**\n * Set the text baseline.\n *\n * @param {string|undefined} textBaseline Text baseline.\n * @api\n */\n_ol_style_Text_.prototype.setTextBaseline = function(textBaseline) {\n  this.textBaseline_ = textBaseline;\n};\n\n\n/**\n * Set the background fill.\n *\n * @param {ol.style.Fill} fill Fill style.\n * @api\n */\n_ol_style_Text_.prototype.setBackgroundFill = function(fill) {\n  this.backgroundFill_ = fill;\n};\n\n\n/**\n * Set the background stroke.\n *\n * @param {ol.style.Stroke} stroke Stroke style.\n * @api\n */\n_ol_style_Text_.prototype.setBackgroundStroke = function(stroke) {\n  this.backgroundStroke_ = stroke;\n};\n\n\n/**\n * Set the padding (`[top, right, bottom, left]`).\n *\n * @param {!Array.<number>} padding Padding.\n * @api\n */\n_ol_style_Text_.prototype.setPadding = function(padding) {\n  this.padding_ = padding;\n};\nexport default _ol_style_Text_;\n","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[_c('el-breadcrumb',{attrs:{\"separator-class\":\"el-icon-arrow-right\"}},[_c('el-breadcrumb-item',{attrs:{\"to\":{ path: '/home' }}},[_vm._v(\"首页\")]),_c('el-breadcrumb-item',[_vm._v(\"OpenLayers\")]),_c('el-breadcrumb-item',[_vm._v(\"加载GeoJSON\")])],1),_c('el-card',[_c('div',{attrs:{\"id\":\"map\"}})])],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div>\r\n    <!--面包屑导航区域-->\r\n    <el-breadcrumb separator-class=\"el-icon-arrow-right\">\r\n      <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\r\n      <el-breadcrumb-item>OpenLayers</el-breadcrumb-item>\r\n      <el-breadcrumb-item>加载GeoJSON</el-breadcrumb-item>\r\n    </el-breadcrumb>\r\n    <!--卡片区域-->\r\n    <el-card>\r\n      <div id=\"map\"></div>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n<script>\r\nimport Map from 'ol/map';\r\nimport View from 'ol/view';\r\nimport VectorLayer from 'ol/layer/vector';\r\nimport Vector from 'ol/source/vector';\r\nimport GeoJSON from 'ol/format/geojson';\r\nimport Style from 'ol/style/style';\r\nimport Stroke from 'ol/style/stroke';\r\nimport Fill from 'ol/style/fill';\r\nimport Circle from 'ol/style/circle';\r\nimport Text from 'ol/style/text';\r\nimport RegularShape from 'ol/style/regularshape';\r\nimport proj from 'ol/proj';\r\nimport control from 'ol/control';\r\nimport {getTdtLayer} from \"../../utils/searchUtils\";\r\nexport default {\r\n  data() {\r\n    return {\r\n      map: null,\r\n      geojson: {\r\n        \"type\": \"FeatureCollection\",\r\n        \"features\": [\r\n          { \"type\": \"Feature\", \"id\": 0, \"properties\": { \"name\": \"乌鲁木齐\", \"id\": 10.000000, \"lon\": 87.576079, \"lat\": 43.782225, \"heat\": null }, \"geometry\": { \"type\": \"Point\", \"coordinates\": [87.576079383021181, 43.782225203649105] } },\r\n          { \"type\": \"Feature\", \"id\": 1, \"properties\": { \"name\": \"拉萨\", \"id\": 11.000000, \"lon\": 91.163218, \"lat\": 29.710560, \"heat\": null }, \"geometry\": { \"type\": \"Point\", \"coordinates\": [91.163217897611261, 29.710559728178374] } },\r\n          { \"type\": \"Feature\", \"id\": 2, \"properties\": { \"name\": \"西宁\", \"id\": 12.000000, \"lon\": 101.797439, \"lat\": 36.593725, \"heat\": null }, \"geometry\": { \"type\": \"Point\", \"coordinates\": [101.79743904230159, 36.59372482860072] } },\r\n          { \"type\": \"Feature\", \"id\": 3, \"properties\": { \"name\": \"兰州\", \"id\": 13.000000, \"lon\": 103.584421, \"lat\": 36.119175, \"heat\": null }, \"geometry\": { \"type\": \"Point\", \"coordinates\": [103.58442065913421, 36.11917453434188] } },\r\n          { \"type\": \"Feature\", \"id\": 4, \"properties\": { \"name\": \"成都\", \"id\": 14.000000, \"lon\": 104.035634, \"lat\": 30.714315, \"heat\": null }, \"geometry\": { \"type\": \"Point\", \"coordinates\": [104.03563440326465, 30.714314809962257] } },\r\n          { \"type\": \"Feature\", \"id\": 5, \"properties\": { \"name\": \"重庆\", \"id\": 15.000000, \"lon\": 106.519225, \"lat\": 29.479073, \"heat\": null }, \"geometry\": { \"type\": \"Point\", \"coordinates\": [106.51922502209845, 29.479073225153105] } },\r\n          { \"type\": \"Feature\", \"id\": 6, \"properties\": { \"name\": \"贵阳\", \"id\": 16.000000, \"lon\": 106.668183, \"lat\": 26.457486, \"heat\": null }, \"geometry\": { \"type\": \"Point\", \"coordinates\": [106.66818338058295, 26.457485617599374] } },\r\n          { \"type\": \"Feature\", \"id\": 7, \"properties\": { \"name\": \"昆明\", \"id\": 17.000000, \"lon\": 102.726915, \"lat\": 24.969568, \"heat\": null }, \"geometry\": { \"type\": \"Point\", \"coordinates\": [102.72691472988386, 24.969568444466436] } },\r\n          { \"type\": \"Feature\", \"id\": 8, \"properties\": { \"name\": \"银川\", \"id\": 18.000000, \"lon\": 106.167324, \"lat\": 38.598593, \"heat\": null }, \"geometry\": { \"type\": \"Point\", \"coordinates\": [106.16732429995059, 38.598592562909062] } },\r\n          { \"type\": \"Feature\", \"id\": 9, \"properties\": { \"name\": \"西安\", \"id\": 19.000000, \"lon\": 108.967213, \"lat\": 34.276221, \"heat\": null }, \"geometry\": { \"type\": \"Point\", \"coordinates\": [108.96721346583659, 34.276221246005349] } },\r\n          { \"type\": \"Feature\", \"id\": 10, \"properties\": { \"name\": \"南宁\", \"id\": 20.000000, \"lon\": 108.234036, \"lat\": 22.748502, \"heat\": null }, \"geometry\": { \"type\": \"Point\", \"coordinates\": [108.23403628821811, 22.748502136254036] } },\r\n          { \"type\": \"Feature\", \"id\": 11, \"properties\": { \"name\": \"海口\", \"id\": 21.000000, \"lon\": 110.346274, \"lat\": 19.970150, \"heat\": null }, \"geometry\": { \"type\": \"Point\", \"coordinates\": [110.34627437896368, 19.970150077576061] } },\r\n          { \"type\": \"Feature\", \"id\": 12, \"properties\": { \"name\": \"广州\", \"id\": 22.000000, \"lon\": 113.226755, \"lat\": 23.183277, \"heat\": null }, \"geometry\": { \"type\": \"Point\", \"coordinates\": [113.22675511608018, 23.183277095857289] } },\r\n          { \"type\": \"Feature\", \"id\": 13, \"properties\": { \"name\": \"长沙\", \"id\": 23.000000, \"lon\": 112.947996, \"lat\": 28.170082, \"heat\": null }, \"geometry\": { \"type\": \"Point\", \"coordinates\": [112.94799576419183, 28.170081880824668] } },\r\n          { \"type\": \"Feature\", \"id\": 14, \"properties\": { \"name\": \"南昌\", \"id\": 24.000000, \"lon\": 115.893762, \"lat\": 28.652529, \"heat\": null }, \"geometry\": { \"type\": \"Point\", \"coordinates\": [115.89376225263823, 28.652528581920564] } },\r\n          { \"type\": \"Feature\", \"id\": 15, \"properties\": { \"name\": \"福州\", \"id\": 25.000000, \"lon\": 119.246798, \"lat\": 26.070956, \"heat\": null }, \"geometry\": { \"type\": \"Point\", \"coordinates\": [119.24679821001271, 26.07095583016066] } },\r\n          { \"type\": \"Feature\", \"id\": 16, \"properties\": { \"name\": \"台北\", \"id\": 26.000000, \"lon\": 121.503585, \"lat\": 25.008476, \"heat\": null }, \"geometry\": { \"type\": \"Point\", \"coordinates\": [121.50358485991021, 25.008475846011745] } },\r\n          { \"type\": \"Feature\", \"id\": 17, \"properties\": { \"name\": \"杭州\", \"id\": 27.000000, \"lon\": 120.183062, \"lat\": 30.330742, \"heat\": null }, \"geometry\": { \"type\": \"Point\", \"coordinates\": [120.18306242469987, 30.330742397778341] } },\r\n          { \"type\": \"Feature\", \"id\": 18, \"properties\": { \"name\": \"上海\", \"id\": 28.000000, \"lon\": 121.449713, \"lat\": 31.253514, \"heat\": null }, \"geometry\": { \"type\": \"Point\", \"coordinates\": [121.44971306145047, 31.253514397685105] } },\r\n          { \"type\": \"Feature\", \"id\": 19, \"properties\": { \"name\": \"武汉\", \"id\": 29.000000, \"lon\": 114.216652, \"lat\": 30.579401, \"heat\": null }, \"geometry\": { \"type\": \"Point\", \"coordinates\": [114.21665206389655, 30.579400651160647] } },\r\n          { \"type\": \"Feature\", \"id\": 20, \"properties\": { \"name\": \"合肥\", \"id\": 30.000000, \"lon\": 117.262334, \"lat\": 31.838495, \"heat\": null }, \"geometry\": { \"type\": \"Point\", \"coordinates\": [117.26233421444691, 31.838494863931761] } },\r\n          { \"type\": \"Feature\", \"id\": 21, \"properties\": { \"name\": \"南京\", \"id\": 31.000000, \"lon\": 118.805714, \"lat\": 32.085164, \"heat\": null }, \"geometry\": { \"type\": \"Point\", \"coordinates\": [118.80571398101925, 32.085164185755289] } },\r\n          { \"type\": \"Feature\", \"id\": 22, \"properties\": { \"name\": \"郑州\", \"id\": 32.000000, \"lon\": 113.651151, \"lat\": 34.746419, \"heat\": null }, \"geometry\": { \"type\": \"Point\", \"coordinates\": [113.65115064151188, 34.746419209304378] } },\r\n          { \"type\": \"Feature\", \"id\": 23, \"properties\": { \"name\": \"济南\", \"id\": 33.000000, \"lon\": 117.048354, \"lat\": 36.608511, \"heat\": null }, \"geometry\": { \"type\": \"Point\", \"coordinates\": [117.04835397414672, 36.608510842637969] } },\r\n          { \"type\": \"Feature\", \"id\": 24, \"properties\": { \"name\": \"石家庄\", \"id\": 34.000000, \"lon\": 114.478253, \"lat\": 38.033361, \"heat\": null }, \"geometry\": { \"type\": \"Point\", \"coordinates\": [114.47825266281612, 38.033361247307013] } },\r\n          { \"type\": \"Feature\", \"id\": 25, \"properties\": { \"name\": \"太原\", \"id\": 35.000000, \"lon\": 112.483119, \"lat\": 37.798488, \"heat\": null }, \"geometry\": { \"type\": \"Point\", \"coordinates\": [112.4831190608968, 37.798487801001173] } },\r\n          { \"type\": \"Feature\", \"id\": 26, \"properties\": { \"name\": \"呼和浩特\", \"id\": 36.000000, \"lon\": 111.842856, \"lat\": 40.895807, \"heat\": null }, \"geometry\": { \"type\": \"Point\", \"coordinates\": [111.84285564844028, 40.895806530184856] } },\r\n          { \"type\": \"Feature\", \"id\": 27, \"properties\": { \"name\": \"天津\", \"id\": 37.000000, \"lon\": 117.351108, \"lat\": 38.925801, \"heat\": null }, \"geometry\": { \"type\": \"Point\", \"coordinates\": [117.35110819484493, 38.925800640164205] } },\r\n          { \"type\": \"Feature\", \"id\": 28, \"properties\": { \"name\": \"沈阳\", \"id\": 38.000000, \"lon\": 123.296260, \"lat\": 41.801674, \"heat\": null }, \"geometry\": { \"type\": \"Point\", \"coordinates\": [123.29626003649942, 41.801674462394054] } },\r\n          { \"type\": \"Feature\", \"id\": 29, \"properties\": { \"name\": \"长春\", \"id\": 39.000000, \"lon\": 125.261357, \"lat\": 43.982041, \"heat\": null }, \"geometry\": { \"type\": \"Point\", \"coordinates\": [125.26135735800531, 43.982040844340744] } },\r\n          { \"type\": \"Feature\", \"id\": 30, \"properties\": { \"name\": \"哈尔滨\", \"id\": 40.000000, \"lon\": 126.567056, \"lat\": 45.693857, \"heat\": null }, \"geometry\": { \"type\": \"Point\", \"coordinates\": [126.56705607814561, 45.693856553844213] } },\r\n          { \"type\": \"Feature\", \"id\": 31, \"properties\": { \"name\": \"北京\", \"id\": 41.000000, \"lon\": 116.068297, \"lat\": 39.892297, \"heat\": null }, \"geometry\": { \"type\": \"Point\", \"coordinates\": [116.06829681327378, 39.892296888653789] } },\r\n          { \"type\": \"Feature\", \"id\": 32, \"properties\": { \"name\": \"香港\", \"id\": 42.000000, \"lon\": 114.093184, \"lat\": 22.428066, \"heat\": null }, \"geometry\": { \"type\": \"Point\", \"coordinates\": [114.09318425169782, 22.428065990916085] } },\r\n          { \"type\": \"Feature\", \"id\": 33, \"properties\": { \"name\": \"澳门\", \"id\": 43.000000, \"lon\": 113.552554, \"lat\": 22.184710, \"heat\": null }, \"geometry\": { \"type\": \"Point\", \"coordinates\": [113.55255358053526, 22.184709710970235] } }\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n  },\r\n  mounted() {\r\n    this.initMap()\r\n  },\r\n  methods: {\r\n    initMap() {\r\n      const that = this\r\n      let view = new View({\r\n        zoom: 4,\r\n        center: proj.transform([110, 39], \"EPSG:4326\", \"EPSG:3857\")\r\n      });\r\n\r\n      let map = new Map({\r\n        controls: control.defaults({\r\n          attribution: false\r\n        }).extend([]),\r\n        target: \"map\",\r\n        layers: [\r\n          getTdtLayer(\"vec_w\"),\r\n          getTdtLayer(\"cva_w\")\r\n        ],\r\n        view: view\r\n      });\r\n      let features = (new GeoJSON()).readFeatures(this.geojson);\r\n      for (let i = 0; i < features.length; i++) {\r\n        let _geom = features[i].getGeometry();\r\n        _geom.transform(\"EPSG:4326\", \"EPSG:3857\");\r\n      }\r\n      let vectorSource = new Vector({\r\n        features: features\r\n      });\r\n      let vector = new VectorLayer({\r\n        source: vectorSource,\r\n        style: that.styleFunction,\r\n        renderMode: \"vector\"\r\n      });\r\n      map.addLayer(vector);\r\n      this.map = map\r\n      map.on('pointermove', function (evt) {\r\n        if (map.hasFeatureAtPixel(evt.pixel)) {\r\n          map.getTargetElement().style.cursor = \"pointer\"\r\n          map.forEachFeatureAtPixel(evt.pixel, function (features) {\r\n            console.log(features);\r\n            let name = features.get(\"name\");\r\n            console.log(name);\r\n          });\r\n        } else {\r\n          map.getTargetElement().style.cursor = \"default\"\r\n        }\r\n      });\r\n    },\r\n    styleFunction(feature) {\r\n      let stroke = new Stroke({\r\n        color: 'black',\r\n        width: 2\r\n      });\r\n      let fill = new Fill({\r\n        color: 'red'\r\n      });\r\n      let _name = feature.get(\"name\");\r\n      _name = this.map.getView().getZoom() > 6 ? _name : \"\";\r\n      let _radius = 8,\r\n        _radius2 = 8;\r\n      if (_name === \"北京\") {\r\n        _radius = 12;\r\n        _radius2 = 6;\r\n      }\r\n      let styles = [];\r\n      styles.push(new Style({\r\n        stroke: stroke,\r\n        fill: fill,\r\n        image: new RegularShape({\r\n          fill: fill,\r\n          stroke: stroke,\r\n          points: 5,\r\n          radius: _radius,\r\n          radius2: _radius2,\r\n          angle: 0\r\n        }),\r\n        text: new Text({\r\n          text: _name,\r\n          textAlign: \"left\",\r\n          offsetX: 12,\r\n          font: \"bold 13px sans-serif\",\r\n          fill: new Fill({\r\n            color: 'red'\r\n          }),\r\n          stroke: new Stroke({\r\n            color: 'white',\r\n            width: 2\r\n          })\r\n        })\r\n      }));\r\n      styles.push(new Style({\r\n        geometry: feature.getGeometry(),\r\n        image: new Circle({\r\n          radius: 4,\r\n          fill: new Fill({\r\n            color: \"white\"\r\n          })\r\n        })\r\n      }));\r\n\r\n      return styles;\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n\r\n</style>\r\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ShowGeoJSON.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ShowGeoJSON.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ShowGeoJSON.vue?vue&type=template&id=0399ffb6&scoped=true&\"\nimport script from \"./ShowGeoJSON.vue?vue&type=script&lang=js&\"\nexport * from \"./ShowGeoJSON.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"0399ffb6\",\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}