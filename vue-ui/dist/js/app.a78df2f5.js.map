{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"echarts\"","webpack:///external \"NProgress\"","webpack:///./src/utils/coordinatesUtils.js","webpack:///./src/api/control/capital.js","webpack:///./src/api/control/config.js","webpack:///./src/api/control/gdb.js","webpack:///./src/api/control/geotools.js","webpack:///./src/api/control/layeredit.js","webpack:///./src/api/control/mapinfo.js","webpack:///./src/api/control/mapmvt.js","webpack:///./src/api/control/mappublish.js","webpack:///./src/api/control/mapstyle.js","webpack:///./src/api/control/pgedit.js","webpack:///./src/api/control/spatialanalysis.js","webpack:///./src/api/control/university.js","webpack:///./src/api/control/upload.js","webpack:///./src/api/ogc/wfs.js","webpack:///./src/utils/configUtils.js","webpack:///./src/api/ogc/wms.js","webpack:///./src/App.vue","webpack:///src/App.vue","webpack:///./src/App.vue?a7d1","webpack:///./src/App.vue?a938","webpack:///./src/router/index.js","webpack:///./src/main-prod.js","webpack:///external \"_\"","webpack:///external \"VueRouter\"","webpack:///external \"Vue\"","webpack:///./src/utils/searchUtils.js","webpack:///external \"axios\""],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","installedCssChunks","jsonpScriptSrc","p","exports","module","l","e","promises","cssChunks","Promise","resolve","reject","href","fullhref","existingLinkTags","document","getElementsByTagName","tag","dataHref","getAttribute","rel","existingStyleTags","linkTag","createElement","type","onload","onerror","event","request","target","src","err","Error","code","parentNode","removeChild","head","appendChild","then","installedChunkData","promise","onScriptComplete","script","charset","timeout","nc","setAttribute","error","clearTimeout","chunk","errorType","realSrc","message","name","undefined","setTimeout","all","m","c","d","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","oe","console","jsonpArray","window","oldJsonpFunction","slice","echarts","NProgress","CoordinatesUtils","insertCapital","axios","post","getCapital","addWorkspace","getTableInfo","getGdbLayers","getCalculate","getWmsMap","params","getLayerEdit","addLayerEdit","updateLayerEdit","getWorkspaceNames","getDatastores","getLayersInfo","getLayerInfo","getStyles1","getStyles2","getSLD","getMVT","z","x","y","concat","cacheMVT","delWorkspace","delete","addStyle1","addDefStyle","addStyle2","addDefStyle2","updateStyle","put","delStyle","addShpLayer1","addShpLayer2","addPostGISLayer1","addPostGISLayer2","updateDataStore","delDataStore","updateLayer","delLayer","changeStyleByStyleName","changeStyleByLayerName","getStyleValueByStyleName","getStyleValueByLayerName","changeDefaultStyle","getTablesInfo","getTableData","findTableData","addTableData","updateTableData","delTableData","relationAnalysis","interAnalysis","unionAnalysis","diffAnalysis","symDiffAnalysis","buffAnalysis","getUniversity","uploadFile","toDescribeURL","url","typeName","parsed","urlUtil","parse","format","_objectSpread","search","query","service","version","outputFormat","getFeatureSimple","baseUrl","assign","response","_typeof","JSON","getCapabilitiesURL","_ref","arguments","_ref$version","getFeatureURL","_ref2","_ref2$version","_objectWithoutProperties","_excluded","getJsonFeatureURL","defaults","headers","param","pageNum","pageSize","crs","xml","getFeature","getJsonFeature","getCapabilities","describeFeatureType","_ref3","postResult","ft","GeoJSON","readFeature","geoJson","setId","row","id","options","featureNS","split","featureType","srsName","_X_ROW_KEY","setProperties","geom","getGeometry","applyTransform","flatCoordinates","flatCoordinates2","stride","setGeometryName","geomField","setGeometry","addFeatureByWfs","fields","featObject","WFS","writeTransaction","serializer","XMLSerializer","featString","serializeToString","updateFeatureByWfs","deleteFeatureByWfs","defaultConfig","proxyUrl","geoStoreUrl","printUrl","translationsPath","extensionsRegistry","extensionsFolder","configurationFolder","contextPluginsConfiguration","projectionDefs","themePrefix","bingApiKey","mapquestApiKey","defaultSourceType","backgroundGroup","userSessions","enabled","getConfigProp","prop","proj4","Proj4js","FORMULAS","coordinates","p1","p2","_p","_slicedToArray","x1","y1","_p2","x2","y2","parseFloat","geo","vincentySync","longitude","latitude","_p3","_p4","haversineSync","isXY","list","traverseCoords","callback","map","coord","getProjUrl","EPSG","traverseGeoJson","geojson","leafCallback","nodeCallback","cloneDeep","geometry","features","gj","geometries","determineCrs","String","defs","Proj","crsLabels","normalizePoint","point","srs","numberize","outpoint","isNumber","reproject","source","dest","normalize","sourceProj","destProj","isArray","toPoint","transformed","transform","supportedSplitExtentEPSG","normalizeExtent","bounds","projection","extent","minx","miny","maxx","maxy","reduce","a","b","_toConsumableArray","isWorldView","Math","abs","reprojectExtent","isIDL","ext","getPolygonFromExtent","bboxPolygon","getExtentFromNormalized","normalizedXExtent","crsCodeTable","setCrsLabels","labels","getUnits","proj","units","getProjectedBBox","center","resolution","rotation","size","dx","dy","cosRotation","cos","sinRotation","sin","xCos","xSin","yCos","ySin","x0","x3","y0","y3","createBBox","min","max","minX","minY","maxX","maxY","reprojectGeoJson","fromParam","toParam","from","to","forward","bbox","Number","MAX_VALUE","_gj","xy","lineIntersectPolygon","linestring","polygon","polygonLines","polygonToLinestring","lineIntersect","normalizeLng","lng","tLng","reprojectBbox","points","sw","ne","projPoints","projected","getCompatibleSRS","allowedSRS","getEquivalentSRS","getEPSGCode","indexOf","substring","lastIndexOf","normalizeSRS","isAllowedSRS","getAvailableCRS","crsList","label","filterCRSList","availableCRS","filterAllowedCRS","additionalCRS","projDefs","keys","_defineProperty","codeProjections","newAdditionalCRS","calculateAzimuth","pj","p1proj","p2proj","lon1","PI","lat1","lon2","lat2","dLon","azimuth","atan2","calculateDistance","coords","formula","extendExtent","extent1","extent2","newExtent","getGeoJSONExtent","geoJSON","Infinity","reduceCollectionExtent","collectionElement","isValidExtent","flattenDeep","calculateCircleCoordinates","radius","sides","rotatedAngle","angle","transformLineToArcs","npoints","offset","properties","arcs","start","end","grCircle","greatCircle","transformArcsToLine","last","coordsOLtoLeaflet","reverse","mergeToPolyGeom","_ref4","getViewportGeometry","filter","epsg","_getExtentFromNormali","extentToCoordinates","centerX","getExtentFromViewport","_ref5","_CoordinatesUtils$get","_extent$map","_extent$map2","rightExtentWidth","leftExtentWidth","fetchProjRemotely","parseURN","crsCode","parseString","str","isNaN","getWMSBoundingBox","BoundingBox","mapSRS","SRS","$","isSRSAllowed","getNormalizedLatLon","_ref6","_ref6$lng","_ref6$lat","lat","isInsideVisibleArea","layout","normalizedCoords","reprojectedCoords","layoutBounds","left","right","top","bottom","visibleExtent","splittedView","views","val","centerToVisibleArea","visibleSize","width","height","mapExtent","pos","zoom","adjustedPos","calculateCircleRadiusFromPixel","coordinatesFromPixelConverter","pixel","pixelRadius","defaultRadius","radiusA","pixelCoords","isFunction","radiusB","sqrt","roundCoord","_ref7","_ref7$roundingBehavio","roundingBehaviour","_ref7$value","_ref7$maximumFraction","maximumFractionDigits","midpoint","returnArray","pObj1","pObj2","pointObjectToArray","isObject","isPointInsideExtent","contains","isBboxCompatible","overlap","extractCrsFromURN","urnString","parts","validURN","authority","makeNumericEPSG","epsgCode","epsgCodeNum","parseInt","epsgCodeNormalized","replace","toLowerCase","epsgCodeNewNum","makeBboxFromOWS","lcOWS","ucOWS","lc","uc","lcOld","ucOld","getPolygonFromCircle","steps","turfCircle","getProjections","projections","getExtentForProjection","find","project","checkIfLayerFitsExtentForProjection","_layer$bbox","layer","_getExtentForProjecti","crsMinX","crsMinY","crsMaxX","crsMaxY","_turfBbox","turfBbox","_turfBbox2","getLonLatFromPoint","latlng","lngCorrected","round","floor","capabilitiesCache","parseUrl","urls","extractCredits","attribution","title","Title","logo","LogoURL","link","imageUrl","flatLayers","root","Layer","previous","current","Name","getOnlineResource","Request","GetMap","DCPType","HTTP","Get","OnlineResource","searchAndPaginate","json","startPosition","maxRecords","text","WMS_Capabilities","WMT_MS_Capabilities","Capability","Service","onlineResource","SRSList","CRS","toUpperCase","credits","Attribution","rootFormats","Format","layersObj","layers","filteredLayers","Abstract","numberOfRecordsMatched","numberOfRecordsReturned","nextRecord","layerOptions","records","index","formats","getDimensions","castArray","Dimension","dimension","dim","Extent","unitSymbol","default","values","_","describeLayer","describeLayerUrl","require","_require2","unmarshaller","unmarshalString","layerDescription","getRecords","cached","Date","getTime","timestamp","xml2js","explicitArray","ignore","describeLayers","decriptions","WMS_DescribeLayerResponse","LayerDescription","Array","desc","layerName","textSearch","parseLayerCapabilities","capabilities","lyrs","capability","getBBox","record","EX_GeographicBoundingBox","exGeographicBoundingBox","LatLonBoundingBox","latLonBoundingBox","westBoundLongitude","southBoundLatitude","eastBoundLongitude","northBoundLatitude","catalogBounds","reset","forEach","render","_vm","this","_c","_self","attrs","staticRenderFns","component","Login","Home","Welcome","ClickHighlight","ClikLatLon","LayerCheckBox","LayerEcharts","LayerEdit","LayerLink","LayerSwitch","PostPoint","ShowCollege","ShowGeoJSON","ShowPopup","ShowWKT","TargetView","WebGISUI","WMS","WMTS","AddWFS","DeleteWFS","QueryWFS","UpdateWFS","AllWFS","AllQueryWFS","GeoserverRest","TableRest","EditTableRest","FeatureRest","EditFeatureRest","VectorTiles","BuffAnalysis","DiffAnalysis","SymDiffAnalysis","InterAnalysis","SpaceRelation","UnionAnalysis","NetAnalysis","ReadGdb","Vue","use","Router","routes","path","redirect","children","router","beforeEach","next","tokenStr","sessionStorage","getItem","VXETable","baseURL","process","interceptors","config","Authorization","done","$http","$api","API","$API","productionTip","originVal","dt","getFullYear","getMonth","padStart","getDay","hh","getHours","mm","getMinutes","ss","getSeconds","h","App","$mount","VueRouter","SPACE_NAME","SRS_NAME","searchLayer","filterLayer","GeoJSONData","TYPE","poi","landmarks","roads","GEOTYPE","poly_landmarks","tiger_roads","FIELD","NAME","LANAME","FIELD_NAME","getRequestAll","fetchArr","toFetch","one","fetch","catch","numberMatched","numberReturned","timeStamp","formatDate","totalFeatures","race","postRequestAll","body","method","date","YY","MM","DD","getDate","getLikeSQL","featureTypes","keyword","sql","like","propertie","cql","getDescribeToSql","getSearchURLs","item","encodeURI","getSearch","re","feature","getFeatureRequest","featurePrefix","maxFeatures","featureRequest","writeGetFeature","postWFS","spaceFilter","removeLayer","Vector","style","getStyle","Style","stroke","Stroke","color","fill","Fill","addFeature","Feature","VectorLayer","addLayer","layerNames","Filter","intersects","getSearchData","styleFunction","image","Circle","styles","lineDash","getType","addGeoJSON","featureId","readFeatures","addFeatures","getFeatures","getExtent","getView","getResolutionForExtent","getSize","setResolution","setCenter","getCenter","getTdtLayer","lyr","TileLayer","XYZ"],"mappings":"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","file":"js/app.a78df2f5.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded CSS chunks\n \tvar installedCssChunks = {\n \t\t\"app\": 0\n \t}\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"js/\" + ({}[chunkId]||chunkId) + \".\" + {\"chunk-0679a96c\":\"66bfeee5\",\"chunk-350a49ce\":\"bc358f88\",\"chunk-468e3bb6\":\"3cdcf47f\",\"chunk-5df1ee33\":\"c8ea23bc\",\"chunk-78bca34e\":\"8c4fd022\",\"chunk-7d6958fb\":\"305a1606\",\"chunk-027b4908\":\"e1b7d973\",\"chunk-02f645ce\":\"bcca7290\",\"chunk-0aba0619\":\"684612b8\",\"chunk-0abf7c70\":\"314efcaa\",\"chunk-13b149cb\":\"642f7ad8\",\"chunk-22aff422\":\"0a4047de\",\"chunk-25ab1844\":\"10dbd55c\",\"chunk-29cf3694\":\"0da1d34a\",\"chunk-2b3156ee\":\"f47b8883\",\"chunk-2bd07dac\":\"30a532d0\",\"chunk-548ddc74\":\"40a08ac9\",\"chunk-5e56ac5c\":\"d247204d\",\"chunk-00e773d4\":\"783321e3\",\"chunk-185dca03\":\"4794c9fc\",\"chunk-49089243\":\"bc192a19\",\"chunk-6ff2d83d\":\"bc15c3e5\",\"chunk-b559bcd6\":\"b946ce76\",\"chunk-dc6f2514\":\"95e31ba9\",\"chunk-31a8c8ca\":\"51836831\",\"chunk-335612ed\":\"c2eb5cd9\",\"chunk-37184363\":\"08924b0a\",\"chunk-39459bed\":\"d11f466f\",\"chunk-3eeb0ce6\":\"1cb7317f\",\"chunk-40da22a1\":\"d77661c0\",\"chunk-42aa1406\":\"713d1222\",\"chunk-45972eef\":\"5a261716\",\"chunk-4fc6719f\":\"9c676ce8\",\"chunk-589f38e7\":\"b54db4d3\",\"chunk-ebe3fecc\":\"43c2fc8d\",\"chunk-7c048196\":\"7eb65930\",\"chunk-7cb132a2\":\"753d5e95\",\"chunk-7d644c05\":\"858cbcf0\",\"chunk-85155f3c\":\"ccf948f5\",\"chunk-e26540c2\":\"6d2b93ff\",\"chunk-fce75f60\":\"9500b602\",\"chunk-aa05f4b4\":\"f1e5f190\",\"chunk-b3cbb662\":\"88e8667b\",\"chunk-eee1cdb8\":\"9c31aeb8\"}[chunkId] + \".js\"\n \t}\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n\n\n \t\t// mini-css-extract-plugin CSS loading\n \t\tvar cssChunks = {\"chunk-0679a96c\":1,\"chunk-468e3bb6\":1,\"chunk-5df1ee33\":1,\"chunk-78bca34e\":1,\"chunk-0aba0619\":1,\"chunk-0abf7c70\":1,\"chunk-13b149cb\":1,\"chunk-22aff422\":1,\"chunk-185dca03\":1,\"chunk-49089243\":1,\"chunk-6ff2d83d\":1,\"chunk-b559bcd6\":1,\"chunk-dc6f2514\":1,\"chunk-335612ed\":1,\"chunk-37184363\":1,\"chunk-39459bed\":1,\"chunk-3eeb0ce6\":1,\"chunk-45972eef\":1,\"chunk-4fc6719f\":1,\"chunk-7c048196\":1,\"chunk-7cb132a2\":1,\"chunk-7d644c05\":1,\"chunk-85155f3c\":1,\"chunk-e26540c2\":1,\"chunk-aa05f4b4\":1,\"chunk-b3cbb662\":1,\"chunk-eee1cdb8\":1};\n \t\tif(installedCssChunks[chunkId]) promises.push(installedCssChunks[chunkId]);\n \t\telse if(installedCssChunks[chunkId] !== 0 && cssChunks[chunkId]) {\n \t\t\tpromises.push(installedCssChunks[chunkId] = new Promise(function(resolve, reject) {\n \t\t\t\tvar href = \"css/\" + ({}[chunkId]||chunkId) + \".\" + {\"chunk-0679a96c\":\"aa1ecbf7\",\"chunk-350a49ce\":\"31d6cfe0\",\"chunk-468e3bb6\":\"3be569b0\",\"chunk-5df1ee33\":\"dbb33c76\",\"chunk-78bca34e\":\"6e32b203\",\"chunk-7d6958fb\":\"31d6cfe0\",\"chunk-027b4908\":\"31d6cfe0\",\"chunk-02f645ce\":\"31d6cfe0\",\"chunk-0aba0619\":\"56628579\",\"chunk-0abf7c70\":\"92567454\",\"chunk-13b149cb\":\"aae2e905\",\"chunk-22aff422\":\"b9c6daeb\",\"chunk-25ab1844\":\"31d6cfe0\",\"chunk-29cf3694\":\"31d6cfe0\",\"chunk-2b3156ee\":\"31d6cfe0\",\"chunk-2bd07dac\":\"31d6cfe0\",\"chunk-548ddc74\":\"31d6cfe0\",\"chunk-5e56ac5c\":\"31d6cfe0\",\"chunk-00e773d4\":\"31d6cfe0\",\"chunk-185dca03\":\"9990b0dd\",\"chunk-49089243\":\"9990b0dd\",\"chunk-6ff2d83d\":\"b9c6daeb\",\"chunk-b559bcd6\":\"6ef270e7\",\"chunk-dc6f2514\":\"e3d6e702\",\"chunk-31a8c8ca\":\"31d6cfe0\",\"chunk-335612ed\":\"90a81918\",\"chunk-37184363\":\"b9c6daeb\",\"chunk-39459bed\":\"240886da\",\"chunk-3eeb0ce6\":\"b9c6daeb\",\"chunk-40da22a1\":\"31d6cfe0\",\"chunk-42aa1406\":\"31d6cfe0\",\"chunk-45972eef\":\"c69b2492\",\"chunk-4fc6719f\":\"7dcde3a6\",\"chunk-589f38e7\":\"31d6cfe0\",\"chunk-ebe3fecc\":\"31d6cfe0\",\"chunk-7c048196\":\"bcfec197\",\"chunk-7cb132a2\":\"b9c6daeb\",\"chunk-7d644c05\":\"b9c6daeb\",\"chunk-85155f3c\":\"e0e24f6c\",\"chunk-e26540c2\":\"48ba4b89\",\"chunk-fce75f60\":\"31d6cfe0\",\"chunk-aa05f4b4\":\"ce0fdf67\",\"chunk-b3cbb662\":\"3be569b0\",\"chunk-eee1cdb8\":\"00e29ece\"}[chunkId] + \".css\";\n \t\t\t\tvar fullhref = __webpack_require__.p + href;\n \t\t\t\tvar existingLinkTags = document.getElementsByTagName(\"link\");\n \t\t\t\tfor(var i = 0; i < existingLinkTags.length; i++) {\n \t\t\t\t\tvar tag = existingLinkTags[i];\n \t\t\t\t\tvar dataHref = tag.getAttribute(\"data-href\") || tag.getAttribute(\"href\");\n \t\t\t\t\tif(tag.rel === \"stylesheet\" && (dataHref === href || dataHref === fullhref)) return resolve();\n \t\t\t\t}\n \t\t\t\tvar existingStyleTags = document.getElementsByTagName(\"style\");\n \t\t\t\tfor(var i = 0; i < existingStyleTags.length; i++) {\n \t\t\t\t\tvar tag = existingStyleTags[i];\n \t\t\t\t\tvar dataHref = tag.getAttribute(\"data-href\");\n \t\t\t\t\tif(dataHref === href || dataHref === fullhref) return resolve();\n \t\t\t\t}\n \t\t\t\tvar linkTag = document.createElement(\"link\");\n \t\t\t\tlinkTag.rel = \"stylesheet\";\n \t\t\t\tlinkTag.type = \"text/css\";\n \t\t\t\tlinkTag.onload = resolve;\n \t\t\t\tlinkTag.onerror = function(event) {\n \t\t\t\t\tvar request = event && event.target && event.target.src || fullhref;\n \t\t\t\t\tvar err = new Error(\"Loading CSS chunk \" + chunkId + \" failed.\\n(\" + request + \")\");\n \t\t\t\t\terr.code = \"CSS_CHUNK_LOAD_FAILED\";\n \t\t\t\t\terr.request = request;\n \t\t\t\t\tdelete installedCssChunks[chunkId]\n \t\t\t\t\tlinkTag.parentNode.removeChild(linkTag)\n \t\t\t\t\treject(err);\n \t\t\t\t};\n \t\t\t\tlinkTag.href = fullhref;\n\n \t\t\t\tvar head = document.getElementsByTagName(\"head\")[0];\n \t\t\t\thead.appendChild(linkTag);\n \t\t\t}).then(function() {\n \t\t\t\tinstalledCssChunks[chunkId] = 0;\n \t\t\t}));\n \t\t}\n\n \t\t// JSONP chunk loading for javascript\n\n \t\tvar installedChunkData = installedChunks[chunkId];\n \t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n \t\t\t// a Promise means \"currently loading\".\n \t\t\tif(installedChunkData) {\n \t\t\t\tpromises.push(installedChunkData[2]);\n \t\t\t} else {\n \t\t\t\t// setup Promise in chunk cache\n \t\t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n \t\t\t\t});\n \t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n \t\t\t\t// start chunk loading\n \t\t\t\tvar script = document.createElement('script');\n \t\t\t\tvar onScriptComplete;\n\n \t\t\t\tscript.charset = 'utf-8';\n \t\t\t\tscript.timeout = 120;\n \t\t\t\tif (__webpack_require__.nc) {\n \t\t\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t\t\t}\n \t\t\t\tscript.src = jsonpScriptSrc(chunkId);\n\n \t\t\t\t// create error before stack unwound to get useful stacktrace later\n \t\t\t\tvar error = new Error();\n \t\t\t\tonScriptComplete = function (event) {\n \t\t\t\t\t// avoid mem leaks in IE.\n \t\t\t\t\tscript.onerror = script.onload = null;\n \t\t\t\t\tclearTimeout(timeout);\n \t\t\t\t\tvar chunk = installedChunks[chunkId];\n \t\t\t\t\tif(chunk !== 0) {\n \t\t\t\t\t\tif(chunk) {\n \t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n \t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n \t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n \t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n \t\t\t\t\t\t\terror.type = errorType;\n \t\t\t\t\t\t\terror.request = realSrc;\n \t\t\t\t\t\t\tchunk[1](error);\n \t\t\t\t\t\t}\n \t\t\t\t\t\tinstalledChunks[chunkId] = undefined;\n \t\t\t\t\t}\n \t\t\t\t};\n \t\t\t\tvar timeout = setTimeout(function(){\n \t\t\t\t\tonScriptComplete({ type: 'timeout', target: script });\n \t\t\t\t}, 120000);\n \t\t\t\tscript.onerror = script.onload = onScriptComplete;\n \t\t\t\tdocument.head.appendChild(script);\n \t\t\t}\n \t\t}\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","module.exports = echarts;","module.exports = NProgress;","/*\r\n * Copyright 2015, GeoSolutions Sas.\r\n * All rights reserved.\r\n *\r\n * This source code is licensed under the BSD-style license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n*/\r\n\r\nimport geo from 'node-geo-distance';\r\n\r\nimport Proj4js from '@geosolutions/proj4';\r\nconst proj4 = Proj4js;\r\nimport axios from 'axios';\r\nimport assign from 'object-assign';\r\n\r\nimport {\r\n    isArray,\r\n    isObject,\r\n    isFunction,\r\n    flattenDeep,\r\n    chunk,\r\n    cloneDeep,\r\n    isNumber,\r\n    slice,\r\n    head,\r\n    last\r\n} from 'lodash';\r\nimport turfCircle from '@turf/circle';\r\n\r\nimport lineIntersect from '@turf/line-intersect';\r\nimport polygonToLinestring from '@turf/polygon-to-linestring';\r\nimport greatCircle from '@turf/great-circle';\r\nimport toPoint from 'turf-point';\r\nimport bboxPolygon from '@turf/bbox-polygon';\r\nimport overlap from '@turf/boolean-overlap';\r\nimport contains from '@turf/boolean-contains';\r\nimport turfBbox from '@turf/bbox';\r\nimport { getConfigProp } from './configUtils';\r\n\r\nlet CoordinatesUtils;\r\n\r\nexport const FORMULAS = {\r\n    /**\r\n     @param coordinates in EPSG:4326\r\n     return vincenty distance between two points\r\n     */\r\n    \"vincenty\": (coordinates) => {\r\n        let length = 0;\r\n        for (let i = 0; i < coordinates.length - 1; ++i) {\r\n            const p1 = coordinates[i];\r\n            const p2 = coordinates[i + 1];\r\n            const [x1, y1] = p1;\r\n            const [x2, y2] = p2;\r\n            length += parseFloat(geo.vincentySync({longitude: x1, latitude: y1}, {longitude: x2, latitude: y2}));\r\n        }\r\n        return length;\r\n    },\r\n    /**\r\n     @param coordinates in EPSG:4326\r\n     return distance between two points using Geodesic formula\r\n     */\r\n    \"haversine\": (coordinates) => {\r\n        let length = 0;\r\n        for (let i = 0; i < coordinates.length - 1; ++i) {\r\n            const p1 = coordinates[i];\r\n            const p2 = coordinates[i + 1];\r\n            const [x1, y1] = p1;\r\n            const [x2, y2] = p2;\r\n            length += parseFloat(geo.haversineSync({longitude: x1, latitude: y1}, {longitude: x2, latitude: y2}));\r\n        }\r\n        return length;\r\n    }\r\n};\r\n// Checks if `list` looks like a `[x, y]`.\r\nfunction isXY(list) {\r\n    return list.length >= 2 &&\r\n        typeof list[0] === 'number' &&\r\n        typeof list[1] === 'number';\r\n}\r\nfunction traverseCoords(coordinates, callback) {\r\n    if (isXY(coordinates)) return callback(coordinates);\r\n    return coordinates.map(function(coord) { return traverseCoords(coord, callback); });\r\n}\r\nexport const getProjUrl = (EPSG) => {\r\n    return `http://spatialreference.org/ref/epsg/${EPSG}/proj4/`;\r\n};\r\nfunction traverseGeoJson(geojson, leafCallback, nodeCallback) {\r\n    if (geojson === null) return geojson;\r\n\r\n    let r = cloneDeep(geojson);\r\n\r\n    if (geojson.type === 'Feature') {\r\n        r.geometry = traverseGeoJson(geojson.geometry, leafCallback, nodeCallback);\r\n    } else if (geojson.type === 'FeatureCollection') {\r\n        r.features = r.features.map(function(gj) { return traverseGeoJson(gj, leafCallback, nodeCallback); });\r\n    } else if (geojson.type === 'GeometryCollection') {\r\n        r.geometries = r.geometries.map(function(gj) { return traverseGeoJson(gj, leafCallback, nodeCallback); });\r\n    } else {\r\n        if (leafCallback) leafCallback(r);\r\n    }\r\n\r\n    if (nodeCallback) nodeCallback(r);\r\n\r\n    return r;\r\n}\r\n\r\nexport function determineCrs(crs) {\r\n    if (typeof crs === 'string' || crs instanceof String) {\r\n        return Proj4js.defs(crs) ? new Proj4js.Proj(crs) : null;\r\n    }\r\n    return crs;\r\n}\r\n\r\nlet crsLabels = {\r\n    \"EPSG:4326\": \"WGS 84\",\r\n    \"EPSG:3857\": \"EPSG:3857\"\r\n};\r\n\r\nexport const normalizePoint = (point) => {\r\n    return {\r\n        x: point.x || 0.0,\r\n        y: point.y || 0.0,\r\n        srs: point.srs || point.crs || 'EPSG:4326',\r\n        crs: point.srs || point.crs || 'EPSG:4326'\r\n    };\r\n};\r\nconst numberize = (point) => {\r\n    let outpoint = point;\r\n    if (!isNumber(point.x)) {\r\n        outpoint.x = parseFloat(point.x);\r\n    }\r\n    if (!isNumber(point.y)) {\r\n        outpoint.y = parseFloat(point.y);\r\n    }\r\n    return outpoint;\r\n};\r\nexport const reproject = (point, source, dest, normalize = true) => {\r\n    const sourceProj = source && Proj4js.defs(source) ? new Proj4js.Proj(source) : null;\r\n    const destProj = dest && Proj4js.defs(dest) ? new Proj4js.Proj(dest) : null;\r\n    if (sourceProj && destProj) {\r\n        let p = isArray(point) ? Proj4js.toPoint(point) : Proj4js.toPoint([point.x, point.y]);\r\n\r\n        const transformed = assign({}, source === dest ? numberize(p) : Proj4js.transform(sourceProj, destProj, numberize(p)), {srs: dest});\r\n        if (normalize) {\r\n            return normalizePoint(transformed);\r\n        }\r\n        return transformed;\r\n    }\r\n    return null;\r\n};\r\n\r\nconst supportedSplitExtentEPSG = [\r\n    'EPSG:900913',\r\n    'EPSG:4326',\r\n    'EPSG:3857'\r\n];\r\n\r\n/**\r\n * Return an extent array normalized from EPSG:4326 reprojection\r\n * @param bounds {object} bounds {minx, miny, maxx, maxy}\r\n * @param projection {string} the projection of bounds coordinates\r\n * @return {array} extent with x values normalized from 0 to 360\r\n */\r\n\r\nconst normalizeExtent = (bounds, projection) => {\r\n    const extent = projection !== 'EPSG:4326' ? [\r\n\r\n            reproject([parseFloat(bounds.minx), parseFloat(bounds.miny)], projection, 'EPSG:4326'),\r\n            reproject([parseFloat(bounds.maxx), parseFloat(bounds.maxy)], projection, 'EPSG:4326')\r\n        ].reduce((a, b) => [...a, b.x, b.y], [])\r\n        : [parseFloat(bounds.minx), parseFloat(bounds.miny), parseFloat(bounds.maxx), parseFloat(bounds.maxy)];\r\n\r\n    let isWorldView = false;\r\n    if (projection === 'EPSG:4326') {\r\n        isWorldView = Math.abs(bounds.maxx - bounds.minx) >= 360;\r\n    } else if (projection === 'EPSG:900913' || projection === 'EPSG:3857') {\r\n        isWorldView = Math.abs(bounds.maxx - bounds.minx) >= 20037508.342789244 * 2;\r\n    }\r\n\r\n    return isWorldView ? [0, extent[1], 360, extent[3]] :\r\n        [(extent[0] + 180) % 360, extent[1], (extent[2] + 180) % 360, extent[3]].map((e, i) => {\r\n            if (i % 2 === 0) {\r\n                return e < 0 ? 360 + e : e;\r\n            }\r\n            return e;\r\n        });\r\n};\r\n\r\n/**\r\n * Reproject extent from EPSG different from 'EPSG:4326'\r\n * @param extent {array} array of bounds [minx, miny, maxx, maxy] or isIDL `true` [[..bounds], [..bounds]]\r\n * @param projection {string} the projection of extent coordinates\r\n * @param isIDL {boolean} intersect the international date line\r\n * @return {array} extent\r\n */\r\nexport const  reprojectExtent = (extent, projection, isIDL) => {\r\n    if (projection === 'EPSG:4326') {\r\n        return extent;\r\n    }\r\n    return !isIDL ? [\r\n            reproject([extent[0], extent[1]], 'EPSG:4326', projection),\r\n            reproject([extent[2], extent[3]], 'EPSG:4326', projection)\r\n        ].reduce((a, b) => [...a, b.x, b.y], [])\r\n        : extent.map(ext => [\r\n            reproject([ext[0], ext[1]], 'EPSG:4326', projection),\r\n            reproject([ext[2], ext[3]], 'EPSG:4326', projection)\r\n        ].reduce((a, b) => [...a, b.x, b.y], []));\r\n};\r\n\r\nexport const  getPolygonFromExtent = (extent) => {\r\n    if (extent) {\r\n        if (extent.hasOwnProperty('geometry') && extent.geometry.type === \"Polygon\") {\r\n            return extent;\r\n        }\r\n        return bboxPolygon(extent);\r\n    }\r\n    return null;\r\n};\r\n/**\r\n * Reproject extent to verify the intersection with the international date line (isIDL)\r\n * if on IDL return double extent array\r\n * @param bounds {object} {minx, miny, maxx, maxy}\r\n * @param projection {string} the projection of bounds\r\n * @return {object} {extent, isIDL}\r\n */\r\nexport const getExtentFromNormalized = (bounds, projection) => {\r\n    const normalizedXExtent = normalizeExtent(bounds, projection);\r\n    const isIDL = normalizedXExtent[2] < normalizedXExtent[0];\r\n\r\n    if (isIDL) {\r\n        return {\r\n            extent: reprojectExtent([[\r\n                -180,\r\n                normalizedXExtent[1],\r\n                normalizedXExtent[2] - 180,\r\n                normalizedXExtent[3]\r\n            ], [\r\n                normalizedXExtent[0] - 180,\r\n                normalizedXExtent[1],\r\n                180,\r\n                normalizedXExtent[3]\r\n            ]], projection, isIDL),\r\n            isIDL};\r\n    }\r\n    return {\r\n        extent: reprojectExtent([\r\n            normalizedXExtent[0] - 180,\r\n            normalizedXExtent[1],\r\n            normalizedXExtent[2] - 180,\r\n            normalizedXExtent[3]\r\n        ], projection, isIDL),\r\n        isIDL};\r\n};\r\n\r\nexport const crsCodeTable = {\r\n    'wgs84': 4326,\r\n    'wgs1984': 4326,\r\n    'crs84': 4326,\r\n    'ogccrs84': 4326,\r\n    'lambert93': 2154,\r\n    'rgflambert93': 2154\r\n};\r\n\r\n/**\r\n * Utilities for Coordinates conversion.\r\n * @memberof utils\r\n */\r\nexport const setCrsLabels = (labels) => {\r\n    crsLabels = assign({}, crsLabels, labels);\r\n};\r\nexport const getUnits = function(projection) {\r\n    const proj = new Proj4js.Proj(projection);\r\n    return proj.units || 'degrees';\r\n};\r\n/**\r\n * Creates a bbox of size dimensions areund the center point given to it given the\r\n * resolution and the rotation\r\n * @param center {object} the x,y coordinate of the point\r\n * @param resolution {number} the resolution of the map\r\n * @param rotation {number} the optional rotation of the new bbox\r\n * @param size {object} width,height of the desired bbox\r\n * @return {object} the desired bbox {minx, miny, maxx, maxy}\r\n */\r\nexport const getProjectedBBox = function(center, resolution, rotation = 0, size) {\r\n    let dx = resolution * size[0] / 2;\r\n    let dy = resolution * size[1] / 2;\r\n    let cosRotation = Math.cos(rotation);\r\n    let sinRotation = Math.sin(rotation);\r\n    let xCos = dx * cosRotation;\r\n    let xSin = dx * sinRotation;\r\n    let yCos = dy * cosRotation;\r\n    let ySin = dy * sinRotation;\r\n    let x = center.x;\r\n    let y = center.y;\r\n    let x0 = x - xCos + ySin;\r\n    let x1 = x - xCos - ySin;\r\n    let x2 = x + xCos - ySin;\r\n    let x3 = x + xCos + ySin;\r\n    let y0 = y - xSin - yCos;\r\n    let y1 = y - xSin + yCos;\r\n    let y2 = y + xSin + yCos;\r\n    let y3 = y + xSin - yCos;\r\n    let bounds = CoordinatesUtils.createBBox(\r\n        Math.min(x0, x1, x2, x3), Math.min(y0, y1, y2, y3),\r\n        Math.max(x0, x1, x2, x3), Math.max(y0, y1, y2, y3));\r\n    return bounds;\r\n};\r\n/**\r\n * Returns a bounds object.\r\n * @param {number} minX Minimum X.\r\n * @param {number} minY Minimum Y.\r\n * @param {number} maxX Maximum X.\r\n * @param {number} maxY Maximum Y.\r\n * @return {Object} Extent.\r\n */\r\nexport const createBBox = (minX, minY, maxX, maxY) => {\r\n    return { minx: minX, miny: minY, maxx: maxX, maxy: maxY };\r\n};\r\n/**\r\n * Reprojects a geojson from a crs into another\r\n */\r\nexport const reprojectGeoJson = function(geojson, fromParam = \"EPSG:4326\", toParam = \"EPSG:4326\") {\r\n    let from = fromParam;\r\n    let to = toParam;\r\n    if (typeof from === 'string') {\r\n        from = determineCrs(from);\r\n    }\r\n    if (typeof to === 'string') {\r\n        to = determineCrs(to);\r\n    }\r\n    let transform = proj4(from, to);\r\n\r\n    return traverseGeoJson(geojson, (gj) => {\r\n        // No easy way to put correct CRS info into the GeoJSON,\r\n        // and definitely wrong to keep the old, so delete it.\r\n        if (gj.crs) {\r\n            delete gj.crs;\r\n        }\r\n        // Strip Z coord if present fixes #2638 Proj4 transform only bidimensional coordinates\r\n        gj.coordinates = traverseCoords(gj.coordinates, ([x, y]) => {\r\n            return transform.forward([x, y]);\r\n        });\r\n    }, (gj) => {\r\n        if (gj.bbox) {\r\n            // A bbox can't easily be reprojected, just reprojecting\r\n            // the min/max coords definitely will not work since\r\n            // the transform is not linear (in the general case).\r\n            // Workaround is to just re-compute the bbox after the\r\n            // transform.\r\n            gj.bbox = (() => {\r\n                let min = [Number.MAX_VALUE, Number.MAX_VALUE];\r\n                let max = [-Number.MAX_VALUE, -Number.MAX_VALUE];\r\n                traverseGeoJson(gj, function(_gj) {\r\n                    traverseCoords(_gj.coordinates, function(xy) {\r\n                        min[0] = Math.min(min[0], xy[0]);\r\n                        min[1] = Math.min(min[1], xy[1]);\r\n                        max[0] = Math.max(max[0], xy[0]);\r\n                        max[1] = Math.max(max[1], xy[1]);\r\n                    });\r\n                });\r\n                return [min[0], min[1], max[0], max[1]];\r\n            })();\r\n        }\r\n    });\r\n};\r\nexport const lineIntersectPolygon = function(linestring, polygon) {\r\n    let polygonLines = polygonToLinestring(polygon).features[0];\r\n    return lineIntersect(linestring, polygonLines).features.length !== 0;\r\n};\r\nexport const normalizeLng = (lng) => {\r\n    let tLng = lng / 360 % 1 * 360;\r\n    if (tLng < -180) {\r\n        tLng = tLng + 360;\r\n    } else if (tLng > 180) {\r\n        tLng = tLng - 360;\r\n    }\r\n    return tLng;\r\n};\r\n/**\r\n * Reprojects a bounding box.\r\n * @param bbox {array} [minx, miny, maxx, maxy]\r\n * @param source {string} SRS of the given bbox\r\n * @param dest {string} SRS of the returned bbox\r\n * @return {array} [minx, miny, maxx, maxy]\r\n */\r\nexport const reprojectBbox = function(bbox, source, dest, normalize = true) {\r\n    let points;\r\n    if (isArray(bbox)) {\r\n        points = {\r\n            sw: [bbox[0], bbox[1]],\r\n            ne: [bbox[2], bbox[3]]\r\n        };\r\n    } else {\r\n        points = {\r\n            sw: [bbox.minx, bbox.miny],\r\n            ne: [bbox.maxx, bbox.maxy]\r\n        };\r\n    }\r\n    let projPoints = [];\r\n    for (let p in points) {\r\n        if (points.hasOwnProperty(p)) {\r\n            const projected = CoordinatesUtils.reproject(points[p], source, dest, normalize);\r\n            if (projected) {\r\n                let {x, y} = projected;\r\n                projPoints.push(x);\r\n                projPoints.push(y);\r\n            } else {\r\n                return null;\r\n            }\r\n        }\r\n    }\r\n    return projPoints;\r\n};\r\nexport const bboxToFeatureGeometry = (bbox) => {\r\n    const bboxObj = isArray(bbox) ? {\r\n        minx: bbox[0],\r\n        miny: bbox[1],\r\n        maxx: bbox[2],\r\n        maxy: bbox[3]\r\n    } : bbox;\r\n\r\n    const {minx, miny, maxx, maxy} = bboxObj;\r\n\r\n    return {\r\n        type: \"Polygon\",\r\n        coordinates: [[\r\n            [minx, miny],\r\n            [minx, maxy],\r\n            [maxx, maxy],\r\n            [maxx, miny],\r\n            [minx, miny]\r\n        ]]\r\n    };\r\n};\r\nexport const getCompatibleSRS = (srs, allowedSRS) => {\r\n    if (srs === 'EPSG:900913' && !allowedSRS['EPSG:900913'] && allowedSRS['EPSG:3857']) {\r\n        return 'EPSG:3857';\r\n    }\r\n    if (srs === 'EPSG:3857' && !allowedSRS['EPSG:3857'] && allowedSRS['EPSG:900913']) {\r\n        return 'EPSG:900913';\r\n    }\r\n    return srs;\r\n};\r\nexport const getEquivalentSRS = (srs) => {\r\n    if (srs === 'EPSG:900913' || srs === 'EPSG:3857') {\r\n        return ['EPSG:3857', 'EPSG:900913'];\r\n    }\r\n    return [srs];\r\n};\r\nexport const getEPSGCode = (code) => {\r\n    if (code.indexOf(':') !== -1) {\r\n        return 'EPSG:' + code.substring(code.lastIndexOf(':') + 1);\r\n    }\r\n    return code;\r\n};\r\nexport const normalizeSRS = function(srs, allowedSRS) {\r\n    const result = srs === 'EPSG:900913' ? 'EPSG:3857' : srs;\r\n    if (allowedSRS && !allowedSRS[result]) {\r\n        return CoordinatesUtils.getCompatibleSRS(result, allowedSRS);\r\n    }\r\n    return result;\r\n};\r\nexport const isAllowedSRS = (srs, allowedSRS) => {\r\n    return allowedSRS[CoordinatesUtils.getCompatibleSRS(srs, allowedSRS)];\r\n};\r\nexport const getAvailableCRS = function() {\r\n    let crsList = {};\r\n    for (let a in Proj4js.defs) {\r\n        if (Proj4js.defs.hasOwnProperty(a)) {\r\n            crsList[a] = {label: crsLabels[a] || a};\r\n        }\r\n    }\r\n    return crsList;\r\n};\r\nexport const filterCRSList = (availableCRS, filterAllowedCRS, additionalCRS, projDefs ) => {\r\n    let crs = Object.keys(availableCRS).reduce( (p, c) => {\r\n        return assign({}, filterAllowedCRS.indexOf(c) === -1 ? p : {...p, [c]: availableCRS[c]});\r\n    }, {});\r\n    const codeProjections = projDefs.map(p => p.code);\r\n    let newAdditionalCRS = Object.keys(additionalCRS).reduce( (p, c) => {\r\n        return assign({}, codeProjections.indexOf(c) === -1 ? p : {...p, [c]: additionalCRS[c]});\r\n    }, {});\r\n    return assign({}, crs, newAdditionalCRS);\r\n};\r\nexport const calculateAzimuth = function(p1, p2, pj) {\r\n    var p1proj = CoordinatesUtils.reproject(p1, pj, 'EPSG:4326');\r\n    var p2proj = CoordinatesUtils.reproject(p2, pj, 'EPSG:4326');\r\n    var lon1 = p1proj.x * Math.PI / 180.0;\r\n    var lat1 = p1proj.y * Math.PI / 180.0;\r\n    var lon2 = p2proj.x * Math.PI / 180.0;\r\n    var lat2 = p2proj.y * Math.PI / 180.0;\r\n    var dLon = lon2 - lon1;\r\n    var y = Math.sin(dLon) * Math.cos(lat2);\r\n    var x = Math.cos(lat1) * Math.sin(lat2) - Math.sin(lat1) * Math.cos(lat2) * Math.cos(dLon);\r\n\r\n    var azimuth = (Math.atan2(y, x) * 180.0 / Math.PI + 360 ) % 360;\r\n\r\n    return azimuth;\r\n};\r\n/**\r\n * Calculate length based on haversine or vincenty formula\r\n * @param {object[]} coords projected in EPSG:4326\r\n * @return {number} length in meters\r\n */\r\nexport const calculateDistance = (coords = [], formula = \"haversine\") => {\r\n    if (coords.length >= 2 && Object.keys(FORMULAS).indexOf(formula) !== -1) {\r\n        return FORMULAS[formula](coords);\r\n    }\r\n    return 0;\r\n};\r\n\r\n/**\r\n * Extend an extent given another one\r\n *\r\n * @param extent1 {array} [minx, miny, maxx, maxy]\r\n * @param extent2 {array} [minx, miny, maxx, maxy]\r\n *\r\n * @return {array} [minx, miny, maxx, maxy]\r\n */\r\nexport const extendExtent = function(extent1, extent2) {\r\n    let newExtent = extent1.slice();\r\n    if (extent2[0] < extent1[0]) {\r\n        newExtent[0] = extent2[0];\r\n    }\r\n    if (extent2[2] > extent1[2]) {\r\n        newExtent[2] = extent2[2];\r\n    }\r\n    if (extent2[1] < extent1[1]) {\r\n        newExtent[1] = extent2[1];\r\n    }\r\n    if (extent2[3] > extent1[3]) {\r\n        newExtent[3] = extent2[3];\r\n    }\r\n    return newExtent;\r\n};\r\n/**\r\n * Calculates the extent for the geoJSON passed. It used a small buffer for points.\r\n * Like turf/bbox but works only with simple geometries.\r\n * @deprecated  We may replace it with turf/bbox + turf/buffer in the future, so using it with geometry is discouraged\r\n * @param {geoJSON|geometry} GeoJSON or geometry\r\n * @return {array} extent of the geoJSON\r\n */\r\nexport const getGeoJSONExtent = function(geoJSON) {\r\n    let newExtent = [Infinity, Infinity, -Infinity, -Infinity];\r\n    const reduceCollectionExtent = (extent, collectionElement) => {\r\n        let ext = CoordinatesUtils.getGeoJSONExtent(collectionElement);\r\n        if (CoordinatesUtils.isValidExtent(ext)) {\r\n            return CoordinatesUtils.extendExtent(ext, extent);\r\n        }\r\n        return ext;\r\n    };\r\n    if (geoJSON.coordinates) {\r\n        if (geoJSON.type === \"Point\") {\r\n            let point = geoJSON.coordinates;\r\n            newExtent[0] = point[0] - point[0] * 0.01;\r\n            newExtent[1] = point[1] - point[1] * 0.01;\r\n            newExtent[2] = point[0] + point[0] * 0.01;\r\n            newExtent[3] = point[1] + point[1] * 0.01;\r\n        }\r\n        // other kinds of geometry\r\n        const flatCoordinates = chunk(flattenDeep(geoJSON.coordinates), 2);\r\n        return flatCoordinates.reduce((extent, point) => {\r\n            return [\r\n                point[0] < extent[0] ? point[0] : extent[0],\r\n                point[1] < extent[1] ? point[1] : extent[1],\r\n                point[0] > extent[2] ? point[0] : extent[2],\r\n                point[1] > extent[3] ? point[1] : extent[3]\r\n            ];\r\n        }, newExtent);\r\n\r\n    } else if (geoJSON.type === \"GeometryCollection\") {\r\n        let geometries = geoJSON.geometries;\r\n        return geometries.reduce(reduceCollectionExtent, newExtent);\r\n    } else if (geoJSON.type) {\r\n        if (geoJSON.type === \"FeatureCollection\") {\r\n            return geoJSON.features.reduce(reduceCollectionExtent, newExtent);\r\n        } else if (geoJSON.type === \"Feature\" && geoJSON.geometry) {\r\n            return CoordinatesUtils.getGeoJSONExtent(geoJSON.geometry);\r\n        }\r\n    }\r\n\r\n    return newExtent;\r\n};\r\n/**\r\n * Check extent validity\r\n *\r\n * @param extent {array} [minx, miny, maxx, maxy]\r\n *\r\n * @return {bool}\r\n */\r\nexport const isValidExtent = function(extent) {\r\n    return !(\r\n        extent.indexOf(Infinity) !== -1 || extent.indexOf(-Infinity) !== -1 ||\r\n        extent[0] > extent[2] || extent[1] > extent[3]\r\n    );\r\n};\r\nexport const calculateCircleCoordinates = function(center, radius, sides, rotation) {\r\n    let angle = Math.PI * (1 / sides - 1 / 2);\r\n\r\n    if (rotation) {\r\n        angle += rotation / 180 * Math.PI;\r\n    }\r\n\r\n    let rotatedAngle; let x; let y;\r\n    let points = [[]];\r\n    for (let i = 0; i < sides; i++) {\r\n        rotatedAngle = angle + i * 2 * Math.PI / sides;\r\n        x = center.x + radius * Math.cos(rotatedAngle);\r\n        y = center.y + radius * Math.sin(rotatedAngle);\r\n        points[0].push([x, y]);\r\n    }\r\n\r\n    points[0].push(points[0][0]);\r\n    return points;\r\n};\r\n/**\r\n * Generate arcs between a series of points\r\n * @param {number[]} coordinates of points of a LineString reprojected in 4326\r\n * @param {object} options of the great circle drawMethod\r\n * npoints: number of points\r\n * offset: offset controls the likelyhood that lines will be split which cross the dateline. The higher the number the more likely.\r\n * properties: line feature properties\r\n * @return {number[]} for each couple of points it creates an arc of 100 points by default\r\n */\r\nexport const transformLineToArcs = (coordinates, options = {npoints: 100, offset: 10, properties: {}}) => {\r\n    let arcs = [];\r\n    for (let i = 0; i < coordinates.length - 1; ++i) {\r\n        const p1 = coordinates[i];\r\n        const p2 = coordinates[i + 1];\r\n        const start = toPoint(p1);\r\n        const end = toPoint(p2);\r\n        if (!(p1[0] === p2[0] && p1[1] === p2[1])) {\r\n            let grCircle = greatCircle(start, end, options);\r\n            arcs = [...arcs, ...grCircle.geometry.coordinates];\r\n        }\r\n    }\r\n    return arcs;\r\n};\r\nexport const transformArcsToLine = (coordinates, npoints = 100) => {\r\n    if (coordinates.length <= npoints) {\r\n        return [head(coordinates), last(coordinates)];\r\n    } else if (coordinates.length > npoints) {\r\n        return [head(coordinates)].concat(CoordinatesUtils.transformArcsToLine(slice(coordinates, npoints)));\r\n    }\r\n    return [];\r\n};\r\nexport const coordsOLtoLeaflet = ({coordinates, type}) => {\r\n    switch (type) {\r\n        case \"Polygon\": {\r\n            return coordinates.map(c => {\r\n                return c.map(point => point.reverse());\r\n            });\r\n        }\r\n        case \"LineString\": {\r\n            return coordinates.map(point => point.reverse());\r\n        }\r\n        case \"Point\": {\r\n            return coordinates.reverse();\r\n        }\r\n        default: return [];\r\n    }\r\n};\r\nexport const mergeToPolyGeom = (features) => {\r\n    if (features.length === 1) {\r\n        return features[0].geometry;\r\n    }\r\n    return {\r\n        type: \"GeometryCollection\",\r\n        geometries: features.map( ({geometry}) => geometry)\r\n    };\r\n};\r\n/**\r\n * Return the viewport geometry from the view bounds\r\n * @param bounds {object} bounds {minx, miny, maxx, maxy}\r\n * @param projection {string} the projection of bounds coordinates\r\n * @return {object} geometry {type, radius, projection, coordinates, extent, center}\r\n */\r\nexport const getViewportGeometry = (bounds, projection) => {\r\n    if (head(supportedSplitExtentEPSG.filter(epsg => epsg === projection))) {\r\n        const {extent, isIDL} = getExtentFromNormalized(bounds, projection);\r\n\r\n        const extentToCoordinates = isIDL ? extent : [extent];\r\n\r\n        const coordinates = extentToCoordinates.map(ext => {\r\n            const start = [ext[0], ext[1]];\r\n            const end = [ext[2], ext[3]];\r\n            return [[start, [start[0], end[1]], end, [end[0], start[1]], start]];\r\n        });\r\n\r\n        if (isIDL) {\r\n\r\n            let centerX = extent[1][0] + (Math.abs(extent[0][0] - extent[0][2]) + Math.abs(extent[1][0] - extent[1][2])) / 2;\r\n            centerX = centerX > 180 ? centerX - 360 : centerX;\r\n\r\n            return {\r\n                type: 'MultiPolygon',\r\n                radius: 0,\r\n                projection,\r\n                coordinates,\r\n                extent,\r\n                center: [centerX, (extent[0][1] + extent[0][3]) / 2]\r\n            };\r\n        }\r\n\r\n        return {\r\n            type: 'Polygon',\r\n            radius: 0,\r\n            projection,\r\n            coordinates: coordinates[0],\r\n            extent,\r\n            center: [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2]\r\n        };\r\n    }\r\n\r\n    const extent = [bounds.minx, bounds.miny, bounds.maxx, bounds.maxy];\r\n    const center = [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\r\n    const start = [extent[0], extent[1]];\r\n    const end = [extent[2], extent[3]];\r\n    const coordinates = [[start, [start[0], end[1]], end, [end[0], start[1]], start]];\r\n\r\n    return {\r\n        type: 'Polygon',\r\n        radius: 0,\r\n        projection,\r\n        coordinates,\r\n        extent,\r\n        center\r\n    };\r\n};\r\n/**\r\n * Get wider and valid extent in viewport\r\n * @private\r\n * @param bbox {object} viewport bbox\r\n * @param bbox.bounds {object} bounds of bbox {minx, miny, maxx, maxy}\r\n * @param bbox.crs {string} bbox crs\r\n * @param dest {string} SRS of the returned extent\r\n * @return {array} [ minx, miny, maxx, maxy ]\r\n */\r\nexport const getExtentFromViewport = ({ bounds, crs } = {}, dest = 'EPSG:4326') => {\r\n    if (!bounds || !crs) return null;\r\n    const { extent } = CoordinatesUtils.getViewportGeometry(bounds, crs);\r\n    if (extent.length === 4) {\r\n        return CoordinatesUtils.reprojectBbox(extent, crs, dest);\r\n    }\r\n    const [ rightExtentWidth, leftExtentWidth ] = extent.map((bbox) => bbox[2] - bbox[0]);\r\n    return rightExtentWidth > leftExtentWidth\r\n        ? CoordinatesUtils.reprojectBbox(extent[0], crs, dest)\r\n        : CoordinatesUtils.reprojectBbox(extent[1], crs, dest);\r\n};\r\n/**\r\n * @param crs in the form EPSG:4326\r\n * @return {Object} a promise for fetching the proj4 definition\r\n */\r\nexport const fetchProjRemotely = (crs, url) => {\r\n    const EPSG = crs.split(\":\").length === 2 ? crs.split(\":\")[1] : \"3857\";\r\n    return axios.get(url || getProjUrl(EPSG), null, {\r\n        timeout: 2000\r\n    });\r\n};\r\n/**\r\n * Parse the URN to get EPSG code\r\n * @param {object|string} crs object or string\r\n * @return {string} EPSG in the form EPSG:NNNN\r\n */\r\nexport const parseURN = (crs) => {\r\n    const code = crs && crs.properties && crs.properties.name || crs && crs.name || crs && crs.properties && crs.properties.code || crs;\r\n\r\n    let crsCode = code && last(code.split(\":\"));\r\n\r\n    if (crsCode === \"WGS 1984\" || crsCode === \"WGS84\") {\r\n        return \"EPSG:4326\";\r\n    } else if (crsCode) {\r\n        // TODO check is valid EPSG code\r\n        return \"EPSG:\" + crsCode;\r\n    }\r\n    return null;\r\n};\r\nexport const parseString = (str) => {\r\n    const coord = str.split(' ');\r\n    const x = parseFloat(coord[0]);\r\n    const y = parseFloat(coord[1]);\r\n    return !isNaN(x) && !isNaN(y) && {x, y} || null;\r\n};\r\nexport const getWMSBoundingBox = (BoundingBox, mapSRS) => {\r\n    const SRS = mapSRS || 'EPSG:3857';\r\n    const bbox = BoundingBox && isArray(BoundingBox) && head(BoundingBox.filter(b => {\r\n        return b && b.$ && b.$.SRS === SRS && b.$.maxx && b.$.maxy && b.$.minx && b.$.miny;\r\n    }).map(b => b && b.$ && CoordinatesUtils.reprojectBbox([\r\n        parseFloat(b.$.minx),\r\n        parseFloat(b.$.miny),\r\n        parseFloat(b.$.maxx),\r\n        parseFloat(b.$.maxy)\r\n    ], SRS, 'EPSG:4326')));\r\n    return isArray(bbox) && {minx: bbox[0], miny: bbox[1], maxx: bbox[2], maxy: bbox[3]} || null;\r\n};\r\nexport const isSRSAllowed = (srs) => {\r\n    return !!Proj4js.defs(srs);\r\n};\r\n/**\r\n * Return normalized latitude and longitude\r\n * @param coords {object} coordinates {lat, lng}\r\n * @return {object} {lat, lng}\r\n */\r\nexport const getNormalizedLatLon = ({lng = 1, lat = 1}) => {\r\n    return {\r\n        lat: lat,\r\n        lng: CoordinatesUtils.normalizeLng(lng)\r\n    };\r\n};\r\n/**\r\n * Return true if coordinates are inside of visible area\r\n * @param coords {object} coordinates {lat, lng}\r\n * @param map {object} must contain present map\r\n * @param layout {object} current layout on map {bottom, top, left, right}\r\n * @param resolution {number} resolutions of current map zoom\r\n * @return {bool}\r\n */\r\nexport const isInsideVisibleArea = (coords, map, layout = {}, resolution = 0) => {\r\n\r\n    const normalizedCoords = CoordinatesUtils.getNormalizedLatLon(coords);\r\n    const reprojectedCoords = reproject([normalizedCoords.lng, normalizedCoords.lat], 'EPSG:4326', map.projection);\r\n    if (!map.bbox) {\r\n        return false;\r\n    }\r\n    const bbox = CoordinatesUtils.reprojectBbox(map.bbox.bounds, map.bbox.crs, map.projection);\r\n\r\n    const layoutBounds = {\r\n        left: 0,\r\n        right: 0,\r\n        top: 0,\r\n        bottom: 0,\r\n        ...layout\r\n    };\r\n\r\n    const visibleExtent = {\r\n        minx: bbox[0] + layoutBounds.left * resolution,\r\n        miny: bbox[1] + layoutBounds.bottom * resolution,\r\n        maxx: bbox[2] - layoutBounds.right * resolution,\r\n        maxy: bbox[3] - layoutBounds.top * resolution\r\n    };\r\n\r\n    const splittedView = CoordinatesUtils.getViewportGeometry(visibleExtent, map.projection);\r\n    const views = splittedView.extent.length === 4 ? [[...splittedView.extent]] : [...splittedView.extent];\r\n\r\n    return head(views.map(extent =>\r\n        reprojectedCoords.x >= extent[0]\r\n        && reprojectedCoords.y >= extent[1]\r\n        && reprojectedCoords.x <= extent[2]\r\n        && reprojectedCoords.y <= extent[3])\r\n        .filter(val => val)) || false;\r\n};\r\n/**\r\n * Return new center position based of visible area\r\n * @param center {object} new visible center {lat, lng}\r\n * @param map {object} must contain present map\r\n * @param layout {object} current layout on map {bottom, top, left, right}\r\n * @param resolution {number} resolutions of current map zoom\r\n * @return {object} {pos, zoom, crs}\r\n */\r\nexport const centerToVisibleArea = (center, map, layout = {}, resolution = 0) => {\r\n\r\n    const normalizedCoords = CoordinatesUtils.getNormalizedLatLon(center);\r\n    const reprojectedCoords = reproject([normalizedCoords.lng, normalizedCoords.lat], 'EPSG:4326', map.projection);\r\n\r\n    const layoutBounds = {\r\n        left: 0,\r\n        right: 0,\r\n        top: 0,\r\n        bottom: 0,\r\n        ...layout\r\n    };\r\n\r\n    const visibleSize = {\r\n        width: (map.size.width - layoutBounds.right - layoutBounds.left) * resolution,\r\n        height: (map.size.height - layoutBounds.top - layoutBounds.bottom) * resolution\r\n    };\r\n\r\n    const mapExtent = {\r\n        minx: reprojectedCoords.x - visibleSize.width / 2 - layoutBounds.left * resolution,\r\n        miny: reprojectedCoords.y - visibleSize.height / 2 - layoutBounds.bottom * resolution,\r\n        maxx: reprojectedCoords.x + visibleSize.width / 2 + layoutBounds.right * resolution,\r\n        maxy: reprojectedCoords.y + visibleSize.height / 2 + layoutBounds.top * resolution\r\n    };\r\n\r\n    const splittedView = CoordinatesUtils.getViewportGeometry(mapExtent, map.projection);\r\n\r\n    if (splittedView.extent.length === 4) {\r\n        return {\r\n            pos: reproject([splittedView.extent[0] + map.size.width / 2 * resolution, splittedView.extent[1] + map.size.height / 2 * resolution], map.projection, 'EPSG:4326'),\r\n            zoom: map.zoom,\r\n            crs: 'EPSG:4326'\r\n        };\r\n    }\r\n\r\n    if (Math.abs(splittedView.extent[0][2] - splittedView.extent[0][0]) > Math.abs(splittedView.extent[1][2] - splittedView.extent[1][0])) {\r\n        const pos = reproject([splittedView.extent[0][2] - map.size.width / 2 * resolution, splittedView.extent[0][3] - map.size.height / 2 * resolution], map.projection, 'EPSG:4326');\r\n        const adjustedPos = {...pos, x: pos.x + (normalizedCoords.lng > pos.x ? 360 : 0)};\r\n        return {\r\n            pos: adjustedPos,\r\n            zoom: map.zoom,\r\n            crs: 'EPSG:4326'\r\n        };\r\n    }\r\n\r\n    return {\r\n        pos: reproject([splittedView.extent[1][0] + map.size.width / 2 * resolution, splittedView.extent[1][1] + map.size.height / 2 * resolution], map.projection, 'EPSG:4326'),\r\n        zoom: map.zoom,\r\n        crs: 'EPSG:4326'\r\n    };\r\n};\r\nexport const calculateCircleRadiusFromPixel = (coordinatesFromPixelConverter, pixel = {}, center = [], pixelRadius, defaultRadius = 0.01) => {\r\n    const radiusA = isArray(center) ? center : [center.x, center.y];\r\n\r\n    if (isNumber(radiusA[0]) && !isNaN(radiusA[0]) &&\r\n        isNumber(radiusA[1]) && !isNaN(radiusA[1]) &&\r\n        isNumber(pixel.x) && !isNaN(pixel.x) &&\r\n        isNumber(pixel.y) && !isNaN(pixel.y)) {\r\n        const pixelCoords = isFunction(coordinatesFromPixelConverter) ? coordinatesFromPixelConverter([\r\n            pixel.x,\r\n            pixel.y >= pixelRadius ? pixel.y - pixelRadius : pixel.y + pixelRadius\r\n        ]) : null;\r\n        const radiusB = pixelCoords && (isArray(pixelCoords) ? pixelCoords : [pixelCoords.x, pixelCoords.y]);\r\n\r\n        return isArray(radiusB) ? Math.sqrt((radiusA[0] - radiusB[0]) * (radiusA[0] - radiusB[0]) +\r\n            (radiusA[1] - radiusB[1]) * (radiusA[1] - radiusB[1])) :\r\n            defaultRadius;\r\n    }\r\n\r\n    return defaultRadius;\r\n};\r\n/**\r\n * choose to round or floor value incase of 0 fractional digits\r\n * @return {number} the rounded value or the original one\r\n */\r\nexport const roundCoord = ({ roundingBehaviour = \"round\", value = 0, maximumFractionDigits = 0 } = {}) => {\r\n    if (maximumFractionDigits === 0 && Math[roundingBehaviour]) {\r\n        return Math[roundingBehaviour](value);\r\n    }\r\n    return value;\r\n};\r\nexport const midpoint = (p1, p2, returnArray = false) => {\r\n    const pObj1 = isArray(p1) ? {x: p1[0], y: p1[1]} : p1;\r\n    const pObj2 = isArray(p2) ? {x: p2[0], y: p2[1]} : p2;\r\n    const result = {x: 0.5 * (pObj1.x + pObj2.x), y: 0.5 * (pObj1.y + pObj2.y)};\r\n\r\n    return returnArray ? [result.x, result.y] : result;\r\n};\r\nexport const pointObjectToArray = p => isObject(p) && isNumber(p.x) && isNumber(p.y) ? [p.x, p.y] : p;\r\n\r\n\r\nexport const isPointInsideExtent = (point = {lat: 1, lng: 1}, extent) => {\r\n    return contains(getPolygonFromExtent(extent), toPoint([point.lng, point.lat]));\r\n};\r\nexport const isBboxCompatible = (extent1, extent2) => overlap(extent1, extent2) || contains(extent1, extent2) || contains(extent2, extent1);\r\nexport const extractCrsFromURN = (urnString) => {\r\n    if (urnString) {\r\n        const parts = urnString.split(':');\r\n\r\n        const validURN = parts[0] === 'urn' &&\r\n            (parts[1] === 'ogc' || parts[1] === 'x-ogc') &&\r\n            parts[2] === 'def' &&\r\n            parts[3] === 'crs' &&\r\n            (!!parts[4] || !!parts[6]);\r\n\r\n        if (validURN) {\r\n            const authority = parts[4];\r\n            const code = parts[6];\r\n\r\n            return authority ? `${authority}:${code}` : code;\r\n        }\r\n    }\r\n\r\n    return null;\r\n};\r\nexport const makeNumericEPSG = (epsg) => {\r\n    if (!epsg || epsg.slice(0, 5) !== 'EPSG:') {\r\n        return null;\r\n    }\r\n\r\n    const epsgCode = epsg.slice(5);\r\n    const epsgCodeNum = parseInt(epsgCode, 10);\r\n\r\n    if (epsgCodeNum >= 1024 && epsgCodeNum <= 32767) {\r\n        return epsg;\r\n    }\r\n\r\n    const epsgCodeNormalized = epsgCode.replace(' ', '').replace(':', '').toLowerCase();\r\n    const epsgCodeNewNum = crsCodeTable[epsgCodeNormalized];\r\n\r\n    if (epsgCodeNewNum >= 1024 && epsgCodeNewNum <= 32767) {\r\n        return `EPSG:${epsgCodeNewNum}`;\r\n    }\r\n\r\n    return null;\r\n};\r\nexport const makeBboxFromOWS = (lcOWS, ucOWS) => {\r\n    let lc = [lcOWS[0], lcOWS[1]];\r\n    let uc = [ucOWS[0], ucOWS[1]];\r\n\r\n    // lower is actually upper?\r\n    if (lc[1] > uc[1]) {\r\n        const t = lc;\r\n        lc = uc;\r\n        uc = t;\r\n    }\r\n\r\n    // lower right upper left instead of lower left upper right?\r\n    if (lc[0] > uc[0]) {\r\n        const lcOld = lc.slice();\r\n        const ucOld = uc.slice();\r\n\r\n        lc = [ucOld[0], lcOld[1]];\r\n        uc = [lcOld[0], ucOld[1]];\r\n    }\r\n\r\n    return [lc[0], lc[1], uc[0], uc[1]];\r\n};\r\n\r\n\r\n/**\r\n * helper use to create a geojson Feature with a Polygon geometry\r\n * starting from circle data\r\n * @see https://turfjs.org/docs/#circle\r\n * @param {number[]} center in the form of [x, y]\r\n * @param {number} radius\r\n * @param {string} [units=\"degrees\"] the unit measure\r\n * @param {number} [steps=100] number of vertices of the polygon\r\n */\r\nexport const getPolygonFromCircle = (center, radius, units = \"degrees\", steps = 100) => {\r\n    if (!center || !radius) {\r\n        return null;\r\n    }\r\n    return turfCircle(center, radius, {steps, units});\r\n};\r\n\r\n/**\r\n * Returns an array of projections\r\n * @return {array} of projection Definitions [{code, extent}]\r\n */\r\nexport const getProjections = () => {\r\n    const projections = (getConfigProp('projectionDefs') || []).concat([{code: \"EPSG:3857\", extent: [-20026376.39, -20048966.10, 20026376.39, 20048966.10]},\r\n        {code: \"EPSG:4326\", extent: [-180, -90, 180, 90]}\r\n    ]);\r\n    return projections;\r\n};\r\n\r\n/**\r\n * Return a projection from a list of projections\r\n * @param code {string} code for the projection EPSG:3857\r\n * @return {object} {extent, code} fallsback to default {extent: [-20026376.39, -20048966.10, 20026376.39, 20048966.10]}\r\n */\r\nexport const getExtentForProjection = (code = \"EPSG:3857\") => {\r\n    return getProjections().find(project => project.code === code) || {extent: [-20026376.39, -20048966.10, 20026376.39, 20048966.10]};\r\n};\r\n\r\n/**\r\n * Return a boolean to show if a layer fits within a boundary/extent\r\n * @param layer {object} to check if fits with in a projection boundary\r\n * @return {boolean} true or false\r\n */\r\nexport const checkIfLayerFitsExtentForProjection = (layer = {}) => {\r\n    const crs = layer.bbox?.crs || \"EPSG:3857\";\r\n    const [crsMinX, crsMinY, crsMaxX, crsMaxY] = getExtentForProjection(crs).extent;\r\n    const [minx, minY, maxX, maxY] = turfBbox({type: 'FeatureCollection', features: layer.features || []});\r\n    return ((minx >= crsMinX) && (minY >= crsMinY) && (maxX <= crsMaxX) && (maxY <= crsMaxY));\r\n};\r\n\r\n/**\r\n * Generates longitude and latitude value from the point\r\n * @param {object} point with latlng data\r\n * @return {array} corrected longitude and latitude\r\n */\r\nexport const getLonLatFromPoint = (point) => {\r\n    const latlng = point && point.latlng || null;\r\n    let lngCorrected = null;\r\n    /* lngCorrected is the converted longitude in order to have the value between\r\n         * the range (-180 / +180).\r\n         * Precision has to be >= than the coordinate editor precision\r\n         * especially in the case of aeronautical degree editor which is 12\r\n    */\r\n    if (latlng) {\r\n        lngCorrected = latlng && Math.round(latlng.lng * 100000000000000000) / 100000000000000000;\r\n        lngCorrected = lngCorrected - 360 * Math.floor(lngCorrected / 360 + 0.5);\r\n    }\r\n    return [lngCorrected, latlng && latlng.lat];\r\n};\r\n\r\nCoordinatesUtils = {\r\n    setCrsLabels,\r\n    getUnits,\r\n    reproject,\r\n    getProjectedBBox,\r\n    createBBox,\r\n    reprojectGeoJson,\r\n    lineIntersectPolygon,\r\n    normalizePoint,\r\n    normalizeLng,\r\n    reprojectBbox,\r\n    getCompatibleSRS,\r\n    getEquivalentSRS,\r\n    getEPSGCode,\r\n    normalizeSRS,\r\n    isAllowedSRS,\r\n    getAvailableCRS,\r\n    filterCRSList,\r\n    calculateAzimuth,\r\n    calculateDistance,\r\n    FORMULAS,\r\n    extendExtent,\r\n    getGeoJSONExtent,\r\n    isValidExtent,\r\n    calculateCircleCoordinates,\r\n    transformLineToArcs,\r\n    transformArcsToLine,\r\n    coordsOLtoLeaflet,\r\n    mergeToPolyGeom,\r\n    getViewportGeometry,\r\n    getProjUrl,\r\n    getExtentFromViewport,\r\n    fetchProjRemotely,\r\n    parseURN,\r\n    determineCrs,\r\n    parseString,\r\n    getWMSBoundingBox,\r\n    isSRSAllowed,\r\n    getNormalizedLatLon,\r\n    isInsideVisibleArea,\r\n    centerToVisibleArea,\r\n    calculateCircleRadiusFromPixel,\r\n    roundCoord,\r\n    midpoint,\r\n    pointObjectToArray,\r\n    getExtentFromNormalized,\r\n    getPolygonFromExtent,\r\n    isPointInsideExtent,\r\n    isBboxCompatible,\r\n    extractCrsFromURN,\r\n    crsCodeTable,\r\n    makeNumericEPSG,\r\n    makeBboxFromOWS,\r\n    getPolygonFromCircle,\r\n    checkIfLayerFitsExtentForProjection,\r\n    getLonLatFromPoint\r\n};\r\nexport default CoordinatesUtils;\r\n","import axios from \"axios\";\r\n\r\n// 向capital表插入数据\r\nexport const insertCapital = p => {\r\n  return axios.post('capital/insert', p)\r\n};\r\n\r\n// 查询capital表中所有数据\r\nexport const getCapital = () => {\r\n  return axios.get('capital/all')\r\n};\r\n\r\n\r\n","// 创建工作空间\r\nimport axios from \"axios\";\r\n\r\n//Geoserver配置服务的url,用户名，密码\r\nexport const addWorkspace = p => {\r\n  return axios.post('config/geoserver', p)\r\n};\r\n\r\nexport const getTableInfo = p => {\r\n  return axios.post('config/postgis', p)\r\n};\r\n","import axios from \"axios\";\r\n\r\nexport const getGdbLayers = () => {\r\n  return axios.get('gdb/layers')\r\n};\r\n\r\nexport const getCalculate = () => {\r\n  return axios.get('gdb/calculate')\r\n};\r\n","import axios from \"axios\";\r\n\r\nexport const getWmsMap = p => {\r\n  return axios.get('geotools/wms', {params:p})\r\n};\r\n","import axios from \"axios\";\r\n\r\n// 按名称查询\r\nexport const getLayerEdit = p => {\r\n  return axios.get('layer_edit/query', {params:p})\r\n};\r\n\r\n// 添加新数据\r\nexport const addLayerEdit = p => {\r\n  return axios.get('layer_edit/add', {params:p})\r\n};\r\n\r\n// 更新数据\r\nexport const updateLayerEdit = p => {\r\n  return axios.post('layer_edit/update', p)\r\n};\r\n","import axios from \"axios\";\r\n\r\n// 获取所有工作空间\r\nexport const getWorkspaceNames = () => {\r\n  return axios.get('mapinfo/workspacenames')\r\n};\r\n\r\n// 获取所有数据存储\r\nexport const getDatastores = () => {\r\n  return axios.get('mapinfo/datastores')\r\n};\r\n\r\n// 获取所有图层名称和标题\r\nexport const getLayersInfo = () => {\r\n  return axios.get('mapinfo/layers')\r\n};\r\n\r\n// 获取指定图层信息\r\nexport const getLayerInfo = p => {\r\n  return axios.get('mapinfo/layer', {params:p})\r\n};\r\n\r\n// 获取所有样式名称\r\nexport const getStyles1 = () => {\r\n  return axios.get('mapinfo/styles/1')\r\n};\r\n\r\n// 指定工作空间获取所有样式名称\r\nexport const getStyles2 = p => {\r\n  return axios.get('mapinfo/styles/2', {params:p})\r\n};\r\n\r\n// 获取指定样式的SLD\r\nexport const getSLD = p => {\r\n  return axios.get('mapinfo/sld', {params:p})\r\n};\r\n","// 获取指定表数据\r\nimport axios from \"axios\";\r\n\r\n// 获取矢量切片\r\nexport const getMVT = (z,x,y) => {\r\n  return axios.get(`mvt_test/${z}/${x}/${y}.pbf`)\r\n};\r\n\r\n// 缓存矢量切片\r\nexport const cacheMVT = p => {\r\n  return axios.get('mvt_test/cache', {params:p})\r\n};\r\n","import axios from \"axios\";\r\n\r\n// 创建工作空间\r\nexport const addWorkspace = p => {\r\n  return axios.post('publish/workspace', p)\r\n};\r\n\r\n// 删除工作空间\r\nexport const delWorkspace = p => {\r\n  return axios.delete('publish/workspace', {params:p})\r\n};\r\n\r\n// 发布样式\r\nexport const addStyle1 = p => {\r\n  return axios.post('publish/style/1', p)\r\n};\r\n\r\n//发布指定类型的默认样式\r\nexport const addDefStyle = p => {\r\n  return axios.post('publish/defaultstyle/1', p)\r\n};\r\n\r\n// 指定工作空间创建样式\r\nexport const addStyle2 = p => {\r\n  return axios.post('publish/style/2', p)\r\n};\r\n\r\n// 指定工作空间创建默认样式\r\nexport const addDefStyle2 = p => {\r\n  return axios.post('publish/defaultstyle/2', p)\r\n};\r\n\r\n// 修改样式\r\nexport const updateStyle = p => {\r\n  return axios.put('publish/style', p)\r\n};\r\n\r\n// 删除样式\r\nexport const delStyle = p => {\r\n  return axios.delete('publish/style', {params:p})\r\n};\r\n\r\n// 发布shp图层并自动创建样式\r\nexport const addShpLayer1 = (t, p) => {\r\n  return axios.post(`publish/shplayer/${t}`, p)\r\n};\r\n\r\n// 发布shp图层\r\nexport const addShpLayer2 = p => {\r\n  return axios.post('publish/shplayer2', p)\r\n};\r\n\r\n// 发布PostGIS图层并自动创建样式\r\nexport const addPostGISLayer1 = (t, p) => {\r\n  return axios.post(`publish/postgislayer/${t}`, p)\r\n};\r\n\r\n// 发布PostGIS图层\r\nexport const addPostGISLayer2 = p => {\r\n  return axios.post('publish/postgislayer2', p)\r\n};\r\n\r\n// 修改矢量数据存储编码格式\r\nexport const updateDataStore = p => {\r\n  return axios.put('publish/datastore', p)\r\n};\r\n\r\n// 指定工作空间删除指定数据存储\r\nexport const delDataStore = p => {\r\n  return axios.delete('publish/datastore', {params:p})\r\n};\r\n\r\n// 更新图层信息\r\nexport const updateLayer = p => {\r\n  return axios.put('publish/layer', p)\r\n};\r\n\r\n// 指定图层名称删除图层\r\nexport const delLayer = p => {\r\n  return axios.delete('publish/layer', {params:p})\r\n};\r\n","import axios from \"axios\";\r\n\r\n// 指定样式名称修改\r\nexport const changeStyleByStyleName = (n, p) => {\r\n  return axios.post(`style/1/${n}`, p)\r\n};\r\n\r\n// 修改指定图层的样式\r\nexport const changeStyleByLayerName = (n, p) => {\r\n  return axios.post(`style/2/${n}`, p)\r\n};\r\n\r\n// 根据样式名称获取样式参数\r\nexport const getStyleValueByStyleName = p => {\r\n  return axios.get(`style/getvalue/1`, {params:p})\r\n};\r\n\r\n// 根据图层获取样式参数\r\nexport const getStyleValueByLayerName = p => {\r\n  return axios.get(`style/getvalue/2`, {params:p})\r\n};\r\n\r\n// 指定样式更改为默认样式\r\nexport const changeDefaultStyle = p => {\r\n  return axios.post(`style/default`, p)\r\n};\r\n","import axios from \"axios\";\r\n\r\n// 获取表名\r\nexport const getTablesInfo = () => {\r\n  return axios.get('pgedit/table')\r\n};\r\n\r\n// 获取指定表数据\r\nexport const getTableData = p => {\r\n  return axios.post('pgedit/data', p)\r\n};\r\n\r\n// 查询指定表数据\r\nexport const findTableData = p => {\r\n  return axios.post('pgedit/find', p)\r\n};\r\n\r\n// 添加表数据\r\nexport const addTableData = p => {\r\n  return axios.post('pgedit/add', p)\r\n};\r\n\r\n// 更新表数据\r\nexport const updateTableData = p => {\r\n  return axios.post('pgedit/update', p)\r\n};\r\n\r\n// 删除表数据\r\nexport const delTableData = p => {\r\n  return axios.post('pgedit/delete', p)\r\n};\r\n","import axios from \"axios\";\r\n\r\n// 空间关系\r\nexport const relationAnalysis = p => {\r\n  return axios.get('spa/relation', {params:p})\r\n};\r\n\r\n// 叠加分析\r\nexport const interAnalysis = p => {\r\n  return axios.get('spa/inter', {params:p})\r\n};\r\n\r\n// 合并分析\r\nexport const unionAnalysis = p => {\r\n  return axios.get('spa/union', {params:p})\r\n};\r\n\r\n// 差异分析\r\nexport const diffAnalysis = p => {\r\n  return axios.get('spa/diff', {params:p})\r\n};\r\n\r\n// Sym差异分析\r\nexport const symDiffAnalysis = p => {\r\n  return axios.get('spa/symdiff', {params:p})\r\n};\r\n\r\n// 缓冲区分析\r\nexport const buffAnalysis = p => {\r\n  return axios.get('spa/buff', {params:p})\r\n};\r\n","import axios from \"axios\";\r\n\r\nexport const getUniversity = p => {\r\n  return axios.get('university/get', {params:p})\r\n};\r\n","import axios from \"axios\";\r\n\r\nexport const uploadFile = (p, c) => {\r\n  return axios.post('upload', p, c)\r\n};\r\n","/**\r\n * Copyright 2016, GeoSolutions Sas.\r\n * All rights reserved.\r\n *\r\n * This source code is licensed under the BSD-style license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport axios from 'axios';\r\nimport urlUtil from 'url';\r\nimport assign from 'object-assign';\r\nimport WFS from \"ol/format/wfs\";\r\nimport Feature from \"ol/feature\";\r\nimport GeoJSON from \"ol/format/geojson\";\r\nimport {formatDate, getLikeSQL, getRequestAll} from \"@/utils/searchUtils\";\r\n\r\nexport const toDescribeURL = (url, typeName) => {\r\n    const parsed = urlUtil.parse(url, true);\r\n    return urlUtil.format(\r\n        {\r\n            ...parsed,\r\n            search: undefined, // this allows to merge parameters correctly\r\n            query: {\r\n                ...parsed.query,\r\n                service: \"WFS\",\r\n                version: \"1.1.0\",\r\n                typeName,\r\n                outputFormat: 'application/json',\r\n                request: \"DescribeFeatureType\"\r\n            }\r\n        });\r\n};\r\n/**\r\n * Simple getFeature using http GET method with json format\r\n */\r\nexport const getFeatureSimple = function(baseUrl, params) {\r\n    return axios.get(baseUrl + 'geoserver/wfs?service=WFS&version=1.1.0&request=GetFeature', {\r\n        params: assign({\r\n            outputFormat: \"application/json\"\r\n        }, params)\r\n    }).then((response) => {\r\n        if (typeof response.data !== 'object') {\r\n            return JSON.parse(response.data);\r\n        }\r\n        return response.data;\r\n    });\r\n};\r\n\r\nexport const getCapabilitiesURL = (url, {version = \"1.1.0\"} = {}) => {\r\n    const parsed = urlUtil.parse(url, true);\r\n    return urlUtil.format(assign({}, parsed, {\r\n        query: assign({\r\n            service: \"WFS\",\r\n            version,\r\n            request: \"GetCapabilities\"\r\n        }, parsed.query)\r\n    }));\r\n};\r\n\r\nexport const getFeatureURL = (url, typeName, { version = \"1.1.0\", ...params } = {}) => {\r\n    const parsed = urlUtil.parse(url, true);\r\n    return urlUtil.format(assign({}, parsed, {\r\n        query: assign({\r\n            service: \"WFS\",\r\n            typeName,\r\n            version,\r\n            request: \"GetFeature\",\r\n            ...params\r\n        }, parsed.query)\r\n    }));\r\n};\r\n\r\nexport const getJsonFeatureURL = (url, typeName, params) => {\r\n    axios.defaults.headers.post[\"Content-Type\"] = \"text/xml\";\r\n    let param = {\r\n        pageNum: params.pageNum || 0,\r\n        pageSize: params.pageSize || 20,\r\n        name: params.name || '',\r\n        crs: params.crs || 'EPSG:3857'\r\n    };\r\n    let xml = '<wfs:GetFeature xmlns:wfs=\"http://www.opengis.net/wfs\" xmlns:gml=\"http://www.opengis.net/gml\" xmlns:ogc=\"http://www.opengis.net/ogc\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" service=\"WFS\" version=\"1.1.0\" xsi:schemaLocation=\"http://www.opengis.net/wfs http://schemas.opengis.net/wfs/1.1.0/wfs.xsd\" ' +\r\n        '  startIndex=\"' + (param.pageNum - 1) * param.pageSize + '\" maxFeatures=\"' + param.pageSize + '\">' +\r\n        '  <wfs:Query typeName=\"' + typeName + '\" srsName=\"' + param.crs + '\">' +\r\n        '    <wfs:SortBy>' +\r\n        '      <wfs:SortProperty>' +\r\n        '        <ogc:PropertyName>' + param.name + '</ogc:PropertyName>' +\r\n        '        <wfs:SortOrder>A</wfs:SortOrder>' +\r\n        '      </wfs:SortProperty>' +\r\n        '    </wfs:SortBy>' +\r\n        '    <ogc:Filter>' +\r\n        '      <ogc:And>undefined</ogc:And>' +\r\n        '    </ogc:Filter>' +\r\n        '  </wfs:Query>' +\r\n        '</wfs:GetFeature>';\r\n    return axios.post(url + '?outputFormat=json', xml).then((response) => {\r\n        if (response.data instanceof Object) {\r\n            return response.data;\r\n        } else return undefined;\r\n    })\r\n}\r\n\r\nexport const getFeature = (url, typeName, params ) => {\r\n    return axios.get(getFeatureURL(url+'geoserver/wfs', typeName, params));\r\n};\r\n\r\nexport const getJsonFeature = (url, typeName, params ) => {\r\n    return getJsonFeatureURL(url+'geoserver/wfs', typeName, params);\r\n};\r\n\r\nexport const getCapabilities = function(url) {\r\n    return axios.get(getCapabilitiesURL(url+'geoserver/wfs'));\r\n};\r\n\r\nexport const describeFeatureType = function(url, typeName) {\r\n    return axios.get(toDescribeURL(url+'geoserver/wfs', typeName)).then(({data}) => data);\r\n};\r\n\r\n\r\nconst postResult = (params) => {\r\n  // 1、构造Feature\r\n  let ft = new GeoJSON().readFeature(params.geoJson);\r\n  ft.setId(params.row.id)\r\n  let options = {\r\n    featureNS: params.typeName.split(\":\")[0], //工作空间名称\r\n    featureType: params.typeName.split(\":\")[1], //图层名称\r\n    srsName: \"EPSG:3857\"\r\n  };\r\n  delete params.row._X_ROW_KEY\r\n  delete params.row.id\r\n  ft.setProperties(params.row);\r\n  let geom = ft.getGeometry()\r\n  // 避免出现报错PointOutsideEnvelopeException: 1 outside of (-90.0,90\r\n  // 进行经纬度调换\r\n  geom.applyTransform((flatCoordinates, flatCoordinates2, stride) => {\r\n    for (let j = 0; j < flatCoordinates.length; j += stride) {\r\n      let y = flatCoordinates[j]\r\n      let x = flatCoordinates[j + 1]\r\n      flatCoordinates[j] = x\r\n      flatCoordinates[j + 1] = y\r\n    }\r\n  })\r\n  ft.setGeometryName(params.geomField)\r\n  ft.setGeometry(geom)\r\n  return {\r\n    ft:ft,\r\n    options:options\r\n  }\r\n}\r\n\r\nexport const addFeatureByWfs = function (url, typeName, fields, row){\r\n  const result = postResult(typeName, fields, row)\r\n  // 2、更新到后台\r\n  let featObject = new WFS().writeTransaction([result.ft],\r\n    null, null, result.options )\r\n  let serializer = new XMLSerializer()\r\n  let featString = serializer.serializeToString(featObject);\r\n  return axios.post(url + 'geoserver/wfs?',\r\n    featString,\r\n    {\r\n      headers: {\r\n        //根据接扣文档需要加的请求头\r\n        \"Content-Type\": \"application/xml\"\r\n      }\r\n    })\r\n}\r\n\r\nexport const updateFeatureByWfs = function (url, params){\r\n  const result = postResult(params)\r\n  // 2、更新到后台\r\n  let featObject = new WFS().writeTransaction(null,\r\n    [result.ft], null, result.options )\r\n  let serializer = new XMLSerializer()\r\n  let featString = serializer.serializeToString(featObject);\r\n  return axios.post(url + 'geoserver/wfs?',\r\n    featString,\r\n    {\r\n      headers: {\r\n        //根据接扣文档需要加的请求头\r\n        \"Content-Type\": \"application/xml\"\r\n      }\r\n    })\r\n}\r\n\r\nexport const deleteFeatureByWfs = function (url, typeName, fields, row){\r\n  const result = postResult(typeName, fields, row)\r\n  // 2、更新到后台\r\n  let featObject = new WFS().writeTransaction(null,\r\n    null, [result.ft], result.options )\r\n  let serializer = new XMLSerializer()\r\n  let featString = serializer.serializeToString(featObject);\r\n  return axios.post(url + 'geoserver/wfs?',\r\n    featString,\r\n    {\r\n      headers: {\r\n        //根据接扣文档需要加的请求头\r\n        \"Content-Type\": \"application/xml\"\r\n      }\r\n    })\r\n}\r\n\r\n\r\n","/**\r\n * Copyright 2015, GeoSolutions Sas.\r\n * All rights reserved.\r\n *\r\n * This source code is licensed under the BSD-style license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nlet defaultConfig = {\r\n    // TODO: these should be changed tp relative paths, without /mapstore/ or / (to avoid the needing of overriding in default cases)\r\n    proxyUrl: \"/mapstore/proxy/?url=\",\r\n    geoStoreUrl: \"/rest/geostore/\",\r\n    printUrl: \"/mapstore/print/info.json\",\r\n    translationsPath: \"translations\",\r\n    extensionsRegistry: \"extensions/extensions.json\",\r\n    extensionsFolder: \"extensions/\",\r\n    configurationFolder: \"configs/\",\r\n    contextPluginsConfiguration: \"configs/pluginsConfig.json\",\r\n    projectionDefs: [],\r\n    themePrefix: \"ms2\",\r\n    bingApiKey: null,\r\n    mapquestApiKey: null,\r\n    defaultSourceType: \"gxp_wmssource\",\r\n    backgroundGroup: \"background\",\r\n    userSessions: {\r\n        enabled: false\r\n    }\r\n};\r\n\r\nexport const getConfigProp = function(prop) {\r\n    return defaultConfig[prop];\r\n};\r\nexport const setConfigProp = function(prop, value) {\r\n    defaultConfig[prop] = value;\r\n};\r\nexport const removeConfigProp = function(prop) {\r\n    delete defaultConfig[prop];\r\n};\r\n\r\nconst ConfigUtils = {\r\n    getConfigProp,\r\n    setConfigProp,\r\n    removeConfigProp\r\n};\r\n\r\nexport default ConfigUtils;\r\n","/**\r\n * Copyright 2016, GeoSolutions Sas.\r\n * All rights reserved.\r\n *\r\n * This source code is licensed under the BSD-style license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport urlUtil from 'url';\r\n\r\nimport { isArray, castArray, get } from 'lodash';\r\nimport assign from 'object-assign';\r\nimport xml2js from 'xml2js';\r\n\r\nimport axios from 'axios';\r\nimport { getConfigProp } from '@/utils/configUtils';\r\nimport { getWMSBoundingBox } from '@/utils/coordinatesUtils';\r\n\r\nconst capabilitiesCache = {};\r\n\r\n\r\nexport const parseUrl = (urls) => {\r\n    const url = (isArray(urls) && urls || urls.split(','))[0];\r\n    const parsed = urlUtil.parse(url, true);\r\n    return urlUtil.format(assign({}, parsed, { search: null }, {\r\n        query: assign({\r\n            service: \"WMS\",\r\n            version: \"1.3.0\",\r\n            request: \"GetCapabilities\"\r\n        }, parsed.query)\r\n    }));\r\n};\r\n\r\n/**\r\n * Extract `credits` property from layer's Attribution\r\n * (Web Map Service Implementation Specification OGC 01-068r3 - 7.1.4.5.9 )\r\n * @param {object} attribution Attribution object of WMS Capabilities (parsed with xml2js default format)\r\n * @return {object} an object to place in `credits` attribute of layer with the structure in the example.\r\n * @example\r\n * {\r\n *     title: \"content of <Title></Title>\",\r\n *     imageUrl: \"url of the image linked as LogoURL\",\r\n *     link: \"http://some.site.of.reference\",\r\n *     logo: { // more info about the logo\r\n *         format: \"image/png\",\r\n *         width: \"200\",\r\n *         height: \"100\"\r\n *     }\r\n * }\r\n *\r\n */\r\nexport const extractCredits = attribution => {\r\n    const title = attribution && attribution.Title;\r\n    const logo = attribution.LogoURL && {\r\n        ...(get(attribution, 'LogoURL.$') || {}),\r\n        format: get(attribution, 'LogoURL.Format') // e.g. image/png\r\n    };\r\n    const link = get(attribution, 'OnlineResource.$[\"xlink:href\"]');\r\n    return {\r\n        title,\r\n        logo,\r\n        imageUrl: get(attribution, 'LogoURL.OnlineResource.$[\"xlink:href\"]'),\r\n        link\r\n    };\r\n};\r\n\r\n\r\nexport const flatLayers = (root) => {\r\n    return root.Layer ? (isArray(root.Layer) && root.Layer || [root.Layer]).reduce((previous, current) => {\r\n        return previous.concat(flatLayers(current)).concat(current.Layer && current.Name ? [current] : []);\r\n    }, []) : root.Name && [root] || [];\r\n};\r\nexport const getOnlineResource = (c) => {\r\n    return c.Request && c.Request.GetMap && c.Request.GetMap.DCPType && c.Request.GetMap.DCPType.HTTP && c.Request.GetMap.DCPType.HTTP.Get && c.Request.GetMap.DCPType.HTTP.Get.OnlineResource && c.Request.GetMap.DCPType.HTTP.Get.OnlineResource.$ || undefined;\r\n};\r\nexport const searchAndPaginate = (json = {}, startPosition, maxRecords, text) => {\r\n    const root = (json.WMS_Capabilities || json.WMT_MS_Capabilities || {}).Capability;\r\n    const service = (json.WMS_Capabilities || json.WMT_MS_Capabilities || {}).Service;\r\n    const onlineResource = getOnlineResource(root);\r\n    const SRSList = root.Layer && (root.Layer.SRS || root.Layer.CRS)?.map((crs) => crs.toUpperCase()) || [];\r\n    const credits = root.Layer && root.Layer.Attribution && extractCredits(root.Layer.Attribution);\r\n    const rootFormats = root.Request && root.Request.GetMap && root.Request.GetMap.Format || [];\r\n    const layersObj = flatLayers(root);\r\n    const layers = isArray(layersObj) ? layersObj : [layersObj];\r\n    const filteredLayers = layers\r\n        .filter((layer) => !text || layer.Name.toLowerCase().indexOf(text.toLowerCase()) !== -1 || layer.Title && layer.Title.toLowerCase().indexOf(text.toLowerCase()) !== -1 || layer.Abstract && layer.Abstract.toLowerCase().indexOf(text.toLowerCase()) !== -1);\r\n    return {\r\n        numberOfRecordsMatched: filteredLayers.length,\r\n        numberOfRecordsReturned: Math.min(maxRecords, filteredLayers.length),\r\n        nextRecord: startPosition + Math.min(maxRecords, filteredLayers.length) + 1,\r\n        service,\r\n        layerOptions: {\r\n            version: (json.WMS_Capabilities || json.WMT_MS_Capabilities)?.$?.version || '1.3.0'\r\n        },\r\n        records: filteredLayers\r\n            .filter((layer, index) => index >= startPosition - 1 && index < startPosition - 1 + maxRecords)\r\n            .map((layer) => assign({}, layer, { formats: rootFormats, onlineResource, SRS: SRSList, credits: layer.Attribution ? extractCredits(layer.Attribution) : credits }))\r\n    };\r\n};\r\n\r\nexport const getDimensions = (layer) => {\r\n    return castArray(layer.Dimension || layer.dimension || []).map((dim, index) => {\r\n        const extent = (layer.Extent && castArray(layer.Extent)[index] || layer.extent && castArray(layer.extent)[index]);\r\n        return {\r\n            name: dim.$.name,\r\n            units: dim.$.units,\r\n            unitSymbol: dim.$.unitSymbol,\r\n            \"default\": dim.$.default || (extent && extent.$.default),\r\n            values: dim._ && dim.split(',') || extent && extent._ && extent.split(',')\r\n        };\r\n    });\r\n};\r\nexport const getCapabilities = (url, raw) => {\r\n    const parsed = urlUtil.parse(url + 'geoserver/wms', true);\r\n    const getCapabilitiesUrl = urlUtil.format(assign({}, parsed, {\r\n        query: assign({\r\n            service: \"WMS\",\r\n            version: \"1.1.1\",\r\n            request: \"GetCapabilities\"\r\n        }, parsed.query)\r\n    }));\r\n    return new Promise((resolve) => {\r\n        require.ensure(['@/utils/wmsUtils'], () => {\r\n            const { unmarshaller } = require('@/utils/wmsUtils');\r\n            resolve(axios.get(parseUrl(getCapabilitiesUrl)).then((response) => {\r\n                if (raw) {\r\n                    let json;\r\n                    xml2js.parseString(response.data, { explicitArray: false }, (ignore, result) => {\r\n                        json = result;\r\n                    });\r\n                    return json;\r\n                }\r\n                let json = unmarshaller.unmarshalString(response.data);\r\n                return json && json.value;\r\n            }));\r\n        });\r\n    });\r\n};\r\nexport const describeLayer = (url, layers, options = {}) => {\r\n    const parsed = urlUtil.parse(url + 'geoserver/wms', true);\r\n    const describeLayerUrl = urlUtil.format(assign({}, parsed, {\r\n        query: assign({\r\n            service: \"WMS\",\r\n            version: \"1.1.1\",\r\n            layers: layers,\r\n            request: \"DescribeLayer\"\r\n        },\r\n            parsed.query,\r\n            options.query || {})\r\n    }));\r\n    return new Promise((resolve) => {\r\n        require.ensure(['@/utils/wmsUtils'], () => {\r\n            const { unmarshaller } = require('@/utils/wmsUtils');\r\n            resolve(axios.get(parseUrl(describeLayerUrl)).then((response) => {\r\n                let json = unmarshaller.unmarshalString(response.data);\r\n                return json && json.value && json.value.layerDescription && json.value.layerDescription[0];\r\n\r\n            }));\r\n        });\r\n    });\r\n};\r\nexport const getRecords = (url, startPosition, maxRecords, text) => {\r\n    const cached = capabilitiesCache[url + 'geoserver/wms'];\r\n    if (cached && new Date().getTime() < cached.timestamp + (getConfigProp('cacheExpire') || 60) * 1000) {\r\n        return new Promise((resolve) => {\r\n            resolve(searchAndPaginate(cached.data, startPosition, maxRecords, text));\r\n        });\r\n    }\r\n    return axios.get(parseUrl(url + 'geoserver/wms')).then((response) => {\r\n        let json;\r\n        xml2js.parseString(response.data, { explicitArray: false }, (ignore, result) => {\r\n            json = result;\r\n        });\r\n        capabilitiesCache[url + 'geoserver/wms'] = {\r\n            timestamp: new Date().getTime(),\r\n            data: json\r\n        };\r\n        return searchAndPaginate(json, startPosition, maxRecords, text);\r\n    });\r\n};\r\nexport const describeLayers = (url, layers) => {\r\n    const parsed = urlUtil.parse(url + 'geoserver/wms', true);\r\n    const describeLayerUrl = urlUtil.format(assign({}, parsed, {\r\n        query: assign({\r\n            service: \"WMS\",\r\n            version: \"1.1.1\",\r\n            layers: layers,\r\n            request: \"DescribeLayer\"\r\n        }, parsed.query)\r\n    }));\r\n    return axios.get(parseUrl(describeLayerUrl)).then((response) => {\r\n        let decriptions;\r\n        xml2js.parseString(response.data, { explicitArray: false }, (ignore, result) => {\r\n            decriptions = result && result.WMS_DescribeLayerResponse && result.WMS_DescribeLayerResponse.LayerDescription;\r\n        });\r\n        decriptions = Array.isArray(decriptions) ? decriptions : [decriptions];\r\n        // make it compatible with json format of describe layer\r\n        return decriptions.map(desc => ({\r\n            ...(desc && desc.$ || {}),\r\n            layerName: desc && desc.$ && desc.$.name,\r\n            query: {\r\n                ...(desc && desc.query && desc.query.$ || {})\r\n            }\r\n        }));\r\n    });\r\n};\r\nexport const textSearch = (url, startPosition, maxRecords, text) => {\r\n    return getRecords(url, startPosition, maxRecords, text);\r\n};\r\nexport const parseLayerCapabilities = (capabilities, layer, lyrs) => {\r\n    const layers = castArray(lyrs || get(capabilities, \"capability.layer.layer\"));\r\n    return layers.reduce((previous, capability) => {\r\n        if (previous) {\r\n            return previous;\r\n        }\r\n        if (!capability.name && capability.layer) {\r\n            return parseLayerCapabilities(capabilities, layer, castArray(capability.layer));\r\n        } else if (layer.name.split(\":\").length === 2 && capability.name && capability.name.split(\":\").length === 2) {\r\n            return layer.name === capability.name && capability;\r\n        } else if (capability.name && capability.name.split(\":\").length === 2) {\r\n            return (layer.name === capability.name.split(\":\")[1]) && capability;\r\n        } else if (layer.name.split(\":\").length === 2) {\r\n            return layer.name.split(\":\")[1] === capability.name && capability;\r\n        }\r\n        return layer.name === capability.name && capability;\r\n    }, null);\r\n};\r\nexport const getBBox = (record, bounds) => {\r\n    let layer = record;\r\n    let bbox = (layer.EX_GeographicBoundingBox || layer.exGeographicBoundingBox || getWMSBoundingBox(layer.BoundingBox) || (layer.LatLonBoundingBox && layer.LatLonBoundingBox.$) || layer.latLonBoundingBox);\r\n    while (!bbox && layer.Layer && layer.Layer.length) {\r\n        layer = layer.Layer[0];\r\n        bbox = (layer.EX_GeographicBoundingBox || layer.exGeographicBoundingBox || getWMSBoundingBox(layer.BoundingBox) || (layer.LatLonBoundingBox && layer.LatLonBoundingBox.$) || layer.latLonBoundingBox);\r\n    }\r\n    if (!bbox) {\r\n        bbox = {\r\n            westBoundLongitude: -180.0,\r\n            southBoundLatitude: -90.0,\r\n            eastBoundLongitude: 180.0,\r\n            northBoundLatitude: 90.0\r\n        };\r\n    }\r\n    const catalogBounds = {\r\n        extent: [\r\n            bbox.westBoundLongitude || bbox.minx,\r\n            bbox.southBoundLatitude || bbox.miny,\r\n            bbox.eastBoundLongitude || bbox.maxx,\r\n            bbox.northBoundLatitude || bbox.maxy\r\n        ],\r\n        crs: \"EPSG:4326\"\r\n    };\r\n    if (bounds) {\r\n        return {\r\n            crs: catalogBounds.crs,\r\n            bounds: {\r\n                minx: catalogBounds.extent[0],\r\n                miny: catalogBounds.extent[1],\r\n                maxx: catalogBounds.extent[2],\r\n                maxy: catalogBounds.extent[3]\r\n            }\r\n        };\r\n    }\r\n    return catalogBounds;\r\n};\r\nexport const reset = () => {\r\n    Object.keys(capabilitiesCache).forEach(key => {\r\n        delete capabilitiesCache[key];\r\n    });\r\n};\r\n","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{attrs:{\"id\":\"app\"}},[_c('router-view')],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div id=\"app\">\r\n    <router-view></router-view>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\n\r\nexport default {\r\n  name: 'app'\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>\r\n","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=17dd3cbf&\"\nimport script from \"./App.vue?vue&type=script&lang=js&\"\nexport * from \"./App.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Vue from 'vue'\r\nimport Router from 'vue-router'\r\n\r\n//路由懒加载\r\nconst Login = () => import('../components/Login')\r\nconst Home = () => import('../components/Home')\r\nconst Welcome = () => import('../components/Welcome')\r\n//OpenLayers\r\nconst ClickHighlight = () => import('../components/openlayers/ClickHighlight')\r\nconst ClikLatLon = () => import('../components/openlayers/ClikLatLon')\r\nconst LayerCheckBox = () => import('../components/openlayers/LayerCheckBox')\r\nconst LayerEcharts = () => import('../components/openlayers/LayerEcharts')\r\nconst LayerEdit = () => import('../components/openlayers/LayerEdit')\r\nconst LayerLink = () => import('../components/openlayers/LayerLink')\r\nconst LayerSwitch = () => import('../components/openlayers/LayerSwitch')\r\nconst PostPoint = () => import('../components/openlayers/PostPoint')\r\nconst ShowCollege = () => import('../components/openlayers/ShowCollege')\r\nconst ShowGeoJSON = () => import('../components/openlayers/ShowGeoJSON')\r\nconst ShowPopup = () => import('../components/openlayers/ShowPopup')\r\nconst ShowWKT = () => import('../components/openlayers/ShowWKT')\r\nconst TargetView = () => import('../components/openlayers/TargetView')\r\nconst WebGISUI = () => import('../components/openlayers/WebGISUI')\r\n//Geoserver\r\nconst WMS = () => import('../components/geoserver/WMS')\r\nconst WMTS = () => import('../components/geoserver/WMTS')\r\nconst WFS = () => import('../components/geoserver/wfs/WFS')\r\nconst AddWFS = () => import('../components/geoserver/wfs/AddWFS')\r\nconst DeleteWFS = () => import('../components/geoserver/wfs/DeleteWFS')\r\nconst QueryWFS = () => import('../components/geoserver/wfs/QueryWFS')\r\nconst UpdateWFS = () => import('../components/geoserver/wfs/UpdateWFS')\r\nconst AllWFS = () => import('../components/geoserver/wfs/AllWFS')\r\nconst AllQueryWFS = () => import('../components/geoserver/wfs/AllQueryWFS')\r\n//Geoserver REST\r\nconst GeoserverRest = () => import('../components/geoserver_rest/GeoserverRest')\r\nconst TableRest = () => import('../components/geoserver_rest/table/Edit')\r\nconst EditTableRest = () => import('../components/geoserver_rest/table/EditTable')\r\nconst FeatureRest = () => import('../components/geoserver_rest/feature/Edit')\r\nconst EditFeatureRest = () => import('../components/geoserver_rest/feature/EditFeature')\r\n//MapBOX\r\nconst VectorTiles = () => import('../components/mapbox/VectorTiles')\r\n//网络分析\r\nconst BuffAnalysis = () => import('../components/analysis/BuffAnalysis')\r\nconst DiffAnalysis = () => import('../components/analysis/DiffAnalysis')\r\nconst SymDiffAnalysis = () => import('../components/analysis/SymDiffAnalysis')\r\nconst InterAnalysis = () => import('../components/analysis/InterAnalysis')\r\nconst SpaceRelation = () => import('../components/analysis/SpaceRelation')\r\nconst UnionAnalysis = () => import('../components/analysis/UnionAnalysis')\r\nconst NetAnalysis = () => import('../components/analysis/NetAnalysis')\r\n//GDAL\r\nconst ReadGdb = () => import('../components/gdal/ReadGdb')\r\n\r\nVue.use(Router)\r\n\r\nconst routes = [\r\n  //重定向\r\n  { path: '/', redirect: '/login' },\r\n  { path: '/login', component: Login },\r\n  {\r\n    path: '/home',\r\n    component: Home,\r\n    redirect: '/welcome',\r\n    //home下子路由规则\r\n    children: [\r\n      { path: '/welcome', component: Welcome },\r\n      //openlayers\r\n      { path: '/ClickHighlight', component: ClickHighlight },\r\n      { path: '/ClikLatLon', component: ClikLatLon },\r\n      { path: '/LayerCheckBox', component: LayerCheckBox },\r\n      { path: '/LayerEcharts', component: LayerEcharts },\r\n      { path: '/LayerEdit', component: LayerEdit },\r\n      { path: '/LayerLink', component: LayerLink },\r\n      { path: '/LayerSwitch', component: LayerSwitch },\r\n      { path: '/PostPoint', component: PostPoint },\r\n      { path: '/ShowCollege', component: ShowCollege },\r\n      { path: '/ShowGeoJSON', component: ShowGeoJSON },\r\n      { path: '/ShowPopup', component: ShowPopup },\r\n      { path: '/ShowWKT', component: ShowWKT },\r\n      { path: '/TargetView', component: TargetView },\r\n      { path: '/WebGISUI', component: WebGISUI },\r\n      //Geoserver\r\n      { path: '/WMS', component: WMS },\r\n      { path: '/WMTS', component: WMTS },\r\n      { path: '/WFS', component: WFS },\r\n      { path: '/AddWFS', component: AddWFS },\r\n      { path: '/DeleteWFS', component: DeleteWFS },\r\n      { path: '/QueryWFS', component: QueryWFS },\r\n      { path: '/UpdateWFS', component: UpdateWFS },\r\n      { path: '/AllWFS', component: AllWFS },\r\n      { path: '/AllQueryWFS', component: AllQueryWFS },\r\n      //Geoserver REST\r\n      { path: '/GeoserverRest', component: GeoserverRest },\r\n      {\r\n        path: '/TableRest',\r\n        component: TableRest,\r\n        //home下子路由规则\r\n        children: [\r\n          { path: '/TableRest/:name', component: EditTableRest }\r\n        ]\r\n      },\r\n      {\r\n        path: '/FeatureRest',\r\n        component: FeatureRest,\r\n        //home下子路由规则\r\n        children: [\r\n          { path: '/FeatureRest/:name', component: EditFeatureRest }\r\n        ]\r\n      },\r\n      //MapBox\r\n      { path: '/VectorTiles', component: VectorTiles },\r\n      //网络分析\r\n      { path: '/BuffAnalysis', component: BuffAnalysis },\r\n      { path: '/DiffAnalysis', component: DiffAnalysis },\r\n      { path: '/SymDiffAnalysis', component: SymDiffAnalysis },\r\n      { path: '/InterAnalysis', component: InterAnalysis },\r\n      { path: '/SpaceRelation', component: SpaceRelation },\r\n      { path: '/UnionAnalysis', component: UnionAnalysis },\r\n      { path: '/NetAnalysis', component: NetAnalysis },\r\n      //GDAL\r\n      { path: '/ReadGdb', component: ReadGdb },\r\n    ]\r\n  }\r\n]\r\n\r\nconst router = new Router({\r\n  routes\r\n})\r\n\r\n\r\n//为路由对象，添加beforeEach导航守卫\r\n//to 将要访问路径\r\n//from 从哪个路径跳转而来\r\n//next 函数 表示方向\r\nrouter.beforeEach((to, from, next) => {\r\n  //如果用户访问的登录页，直接放行\r\n  if (to.path === '/login') return next()\r\n  //从sessionStorage 中获取到保存的token值\r\n  const tokenStr = window.sessionStorage.getItem('token')\r\n  //没有token,强制跳转到登录页\r\n  if (!tokenStr) return next('/login')\r\n  next()\r\n}\r\n);\r\n\r\n\r\nexport default router\r\n","import Vue from 'vue'\r\nimport App from './App.vue'\r\nimport router from './router'\r\nimport * as API from '@/api/index'\r\n//导入全局样式表\r\nimport './assets/css/global.css'\r\n//导入VXETable\r\nimport 'xe-utils'\r\nimport VXETable from 'vxe-table'\r\nimport 'vxe-table/lib/style.css'\r\nVue.use(VXETable)\r\n//导入加载 进度条\r\nimport NProgress from 'nprogress'\r\n//导入axios\r\nimport axios from 'axios'\r\n//配置请求的根路径\r\naxios.defaults.baseURL = process.env.VUE_APP_BASE_API\r\n// 请求拦截 请求头添加token request展示进度条 NProgress.start()\r\naxios.interceptors.request.use(config=>{\r\n  NProgress.start()\r\n  config.headers.Authorization=window.sessionStorage.getItem(\"token\")\r\n  return config\r\n})\r\n//response隐藏进度条 NProgress.done()\r\naxios.interceptors.response.use(config=>{\r\n  NProgress.done()\r\n  return config\r\n})\r\nVue.prototype.$http=axios\r\nVue.prototype.$api = API;\r\nVue.prototype.$API = API;\r\n\r\nVue.config.productionTip = false\r\n\r\n//格式化时间组件\r\nVue.filter('dateFormat',function (originVal) {\r\n  const dt=new Date(originVal)\r\n\r\n  const y=dt.getFullYear()\r\n  const m=(dt.getMonth()+1+'').padStart(2,'0')\r\n  const d=(dt.getDay()+'').padStart(2,'0')\r\n\r\n  const hh=(dt.getHours()+'').padStart(2,'0')\r\n  const mm=(dt.getMinutes()+'').padStart(2,'0')\r\n  const ss=(dt.getSeconds()+'').padStart(2,'0')\r\n  return  `${y}-${m}-${d} ${hh}:${mm}:${ss}`\r\n})\r\n\r\nnew Vue({\r\n  router,\r\n  render: h => h(App)\r\n}).$mount('#app')\r\n","module.exports = _;","module.exports = VueRouter;","module.exports = Vue;","import Feature from 'ol/feature';\r\nimport VectorLayer from 'ol/layer/vector';\r\nimport TileLayer from \"ol/layer/tile\";\r\nimport XYZ from \"ol/source/xyz\";\r\nimport Vector from 'ol/source/vector';\r\nimport GeoJSON from 'ol/format/geojson';\r\nimport WFS from 'ol/format/wfs';\r\nimport Style from 'ol/style/style';\r\nimport Stroke from 'ol/style/stroke';\r\nimport Circle from 'ol/style/circle';\r\nimport Fill from 'ol/style/fill';\r\nimport Filter from 'ol/format/filter';\r\nimport Extent from 'ol/extent';\r\n\r\nlet SPACE_NAME = \"tiger\";//geoserver工作空间\r\nlet SRS_NAME = \"EPSG:4326\";//坐标系\r\n//全局存储高亮图层\r\nlet searchLayer = null\r\n//全局存储空间查询要素\r\nlet filterLayer = null\r\n//存储返回的GeoJSON数据\r\nlet GeoJSONData = null\r\n\r\n/**\r\n * poi:地名信息，landmarks:地标，roads:道路\r\n * @param i\r\n * @returns {string}\r\n * @constructor\r\n */\r\nconst TYPE = (i) => {\r\n    return {\r\n        poi: 'poi',\r\n        landmarks: 'poly_landmarks',\r\n        roads: 'tiger_roads'\r\n    }[i] || 'poi,poly_landmarks,tiger_roads';\r\n}\r\n\r\n/**\r\n * 不同图层的空间字段，和主键排序字段\r\n * @param i\r\n * @param j\r\n * @returns {*}\r\n * @constructor\r\n */\r\nconst GEOTYPE = (i, j) => {\r\n    return {\r\n        poi: ['the_geom', 'NAME', 'POI'],\r\n        poly_landmarks: ['the_geom', 'LANAME', '地标'],\r\n        tiger_roads: ['the_geom', 'NAME', '道路']\r\n    }[i][j];\r\n}\r\n\r\nconst FIELD = (i) => {\r\n    return {\r\n        NAME: 'NAME',\r\n        LANAME: 'LANAME'\r\n    }[i] || false;\r\n}\r\n\r\nconst FIELD_NAME = (i) => {\r\n    return {\r\n        NAME: 'name',\r\n        LANAME: 'name'\r\n    }[i] || false;\r\n}\r\n\r\n/**\r\n * 多个url异步请求\r\n * @param urls url数组\r\n * @param max 最大异步数量\r\n * @param callback 回调函数\r\n */\r\nconst getRequestAll = function (urls, max, callback) {\r\n    let fetchArr = [],  // 存储并发max的promise数组\r\n        i = 0;\r\n    function toFetch() {\r\n        if (i === urls.length) {   // 所有的都处理完了， 返回一个resolve\r\n            return Promise.resolve();\r\n        }\r\n        let one = fetch(urls[i++]).then(response => response.json())\r\n            .then(data => {\r\n                fetchArr.splice(fetchArr.indexOf(one), 1);\r\n                return data\r\n            })\r\n            .catch(() => {\r\n                fetchArr.splice(fetchArr.indexOf(one), 1);\r\n                return {\r\n                    crs: { properties: { name: \"urn:ogc:def:crs:EPSG::4326\" }, type: \"name\" },\r\n                    features: [],\r\n                    numberMatched: 0,\r\n                    numberReturned: 0,\r\n                    timeStamp: formatDate(new Date().getTime()),\r\n                    totalFeatures: 0,\r\n                    type: \"FeatureCollection\"\r\n                }\r\n            })\r\n        // 取出第i个url， 放入fetch里面 , 每取一次i++\r\n        fetchArr.push(one);  //将当前的promise存入并发数组中\r\n        let p = Promise.resolve();\r\n        if (fetchArr.length >= max) {\r\n            // 当并行数量达到最大后， 用race比较 第一个完成的， 然后再调用一下函数自身。\r\n            p = Promise.race(fetchArr);\r\n        }\r\n        return p.then(() => toFetch());\r\n    }\r\n    // arr循环完后， 现在fetchArr里面剩下最后max个promise对象， 使用all等待所有的都完成之后执行callback\r\n    toFetch().then(() => Promise.all(fetchArr)).then((a) => {\r\n        callback(a);\r\n    })\r\n}\r\n\r\n/**\r\n * 多个url异步请求POST\r\n * @param url BaseURL\r\n * @param body 传入请求数据 与arr一一对应\r\n * @param max 最大异步数量\r\n * @param callback 回调函数\r\n */\r\nconst postRequestAll = function (url, body, max, callback) {\r\n    let fetchArr = [],  // 存储并发max的promise数组\r\n        i = 0;\r\n\r\n    function toFetch() {\r\n        if (i === body.length) {   // 所有的都处理完了， 返回一个resolve\r\n            return Promise.resolve();\r\n        }\r\n        let one = fetch(url, {\r\n            method: 'POST',\r\n            body: body[i++],\r\n        }).then(response => response.json())\r\n            .then(data => {\r\n                fetchArr.splice(fetchArr.indexOf(one), 1);\r\n                return data\r\n            })\r\n            .catch(() => {\r\n                fetchArr.splice(fetchArr.indexOf(one), 1);\r\n                return {\r\n                    crs: { properties: { name: \"urn:ogc:def:crs:EPSG::4326\" }, type: \"name\" },\r\n                    features: [],\r\n                    numberMatched: 0,\r\n                    numberReturned: 0,\r\n                    timeStamp: formatDate(new Date().getTime()),\r\n                    totalFeatures: 0,\r\n                    type: \"FeatureCollection\"\r\n                }\r\n            })\r\n        // 取出第i个url， 放入fetch里面 , 每取一次i++\r\n        fetchArr.push(one);  //将当前的promise存入并发数组中\r\n        let p = Promise.resolve();\r\n        if (fetchArr.length >= max) {\r\n            // 当并行数量达到最大后， 用race比较 第一个完成的， 然后再调用一下函数自身。\r\n            p = Promise.race(fetchArr);\r\n        }\r\n        return p.then(() => toFetch());\r\n    }\r\n    // arr循环完后， 现在fetchArr里面剩下最后max个promise对象， 使用all等待所有的都完成之后执行callback\r\n    toFetch().then(() => Promise.all(fetchArr)).then((a) => {\r\n        callback(a);\r\n    })\r\n}\r\n\r\n/**\r\n * 时间戳转换方法    date:时间戳数字\r\n */\r\nconst formatDate = function (d) {\r\n    let date = new Date(d);\r\n    let YY = date.getFullYear() + '-';\r\n    let MM = (date.getMonth() + 1 < 10 ? '0' + (date.getMonth() + 1) : date.getMonth() + 1) + '-';\r\n    let DD = (date.getDate() < 10 ? '0' + (date.getDate()) : date.getDate());\r\n    let hh = (date.getHours() < 10 ? '0' + date.getHours() : date.getHours()) + ':';\r\n    let mm = (date.getMinutes() < 10 ? '0' + date.getMinutes() : date.getMinutes()) + ':';\r\n    let ss = (date.getSeconds() < 10 ? '0' + date.getSeconds() : date.getSeconds());\r\n    return YY + MM + DD + \" \" + hh + mm + ss;\r\n}\r\n\r\n/**\r\n * 拼接sql语句\r\n * @param featureTypes 要素字段\r\n * @param keyword 查询关键字\r\n * @returns {*[\r\n *     {\r\n *         typeName:'buidling',\r\n           cql:`( name ILIKE '%搜索关键字%')`\r\n *     }\r\n * ]}\r\n */\r\n\r\nconst getLikeSQL = (featureTypes, keyword) => {\r\n    let sql = []\r\n    featureTypes.forEach(featureType => {\r\n        let like = '';\r\n        featureType.properties.forEach(propertie => {\r\n            if (FIELD(propertie.name)) {\r\n                like += ' ' + propertie.name + ` ILIKE '%${keyword}%' OR`\r\n            }\r\n        })\r\n        like = like.substring(0, like.lastIndexOf('OR'));\r\n        sql.push({\r\n            typeName: featureType.typeName,\r\n            cql: `( ${like} )`\r\n        })\r\n    })\r\n    return sql;\r\n}\r\n\r\n/**\r\n * 获取查询拼接链接\r\n * @param url baseURL\r\n * @param type 查询类型\r\n * @param keyword 查询关键字\r\n * @returns {Promise<unknown>}\r\n [\r\n {\r\n          typeName:'buidling',\r\n           cql:`( name ILIKE '%搜索关键字%')`\r\n      },...\r\n ]\r\n */\r\nconst getDescribeToSql = (url, type, keyword) => {\r\n    type = TYPE(type);\r\n    return new Promise((resolve) => {\r\n        fetch(url + `geoserver/wfs?service=WFS&version=1.1.0&outputFormat=application/json&request=DescribeFeatureType&typeName=${type}`\r\n        ).then(function (response) {\r\n            return response.json();\r\n        }).then(function (json) {\r\n            resolve(getLikeSQL(json.featureTypes, keyword))\r\n        }).catch((e) => {\r\n            console.error(e)\r\n            return resolve([])\r\n        });\r\n    })\r\n}\r\n\r\n/**\r\n * 返回查询链接集合\r\n * @param url baseURL\r\n * @param type 查询类型\r\n * @param keyword 查询关键字\r\n * @param pageSize 查询数量\r\n * @returns {Promise<unknown>}\r\n * [url1,url2,url3,.....]\r\n */\r\n\r\nconst getSearchURLs = (url, type, keyword, pageSize) => {\r\n    let baseURL = url + `geoserver/wfs?service=WFS&version=1.1.0&request=GetFeature&outputFormat=application/json&sortBy=&srsName=${SRS_NAME}&`\r\n    let urls = [];\r\n    return new Promise((resolve) => {\r\n        getDescribeToSql(url, type, keyword).then(r => {\r\n            if (r.length > 0) {\r\n                r.forEach(item => {\r\n                    let typeName = item.typeName;\r\n                    let cql = item.cql;\r\n                    urls.push(encodeURI(baseURL + `maxFeatures=${pageSize}&typeName=${SPACE_NAME}:${typeName}&cql_filter=${cql}`))\r\n                })\r\n                return urls\r\n            }\r\n            return urls\r\n        }).then(data => {\r\n            return resolve(data)\r\n        }).catch((e) => {\r\n            console.error(e)\r\n            return resolve([])\r\n        })\r\n    })\r\n}\r\n\r\n/**\r\n * 根据url集合进行请求获取查询结果\r\n * @param url baseURL\r\n * @param type 查询类型\r\n * @param keyword 查询关键字\r\n * @param pageSize 查询数量\r\n */\r\nconst getSearch = (url, type, keyword, pageSize) => {\r\n    return new Promise((resolve) => {\r\n        getSearchURLs(url, type, keyword, pageSize).then(re => {\r\n            getRequestAll(re, re.length + 1, (data) => {\r\n                let features = []\r\n                data.forEach(feature => {\r\n                    if (feature !== undefined) {\r\n                        feature.features.forEach(item => {\r\n                            features.push(item)\r\n                        })\r\n                    }\r\n                })\r\n                GeoJSONData = {\r\n                    crs: { properties: { name: \"urn:ogc:def:crs:EPSG::4326\" }, type: \"name\" },\r\n                    features: features,\r\n                    numberMatched: pageSize,\r\n                    numberReturned: features.length,\r\n                    timeStamp: formatDate(new Date().getTime()),\r\n                    totalFeatures: features.length,\r\n                    type: 'FeatureCollection'\r\n                }\r\n                return resolve(GeoJSONData)\r\n            })\r\n        }).catch((err) => {\r\n            console.error(\"查询失败:\", err)\r\n        })\r\n    })\r\n}\r\n\r\n/**\r\n * 返回过滤后XML\r\n * @param layerName 图层名称\r\n * @param pageSize  每页数据量\r\n * @param filter 过滤条件\r\n * @returns {string}\r\n */\r\nconst getFeatureRequest = (layerName, pageSize, filter) => {\r\n    let options = {\r\n        srsName: SRS_NAME,\r\n        featureNS: 'http://www.census.gov',\r\n        featurePrefix: SPACE_NAME,\r\n        featureTypes: [layerName],\r\n        maxFeatures: pageSize,\r\n        outputFormat: 'application/json',\r\n        filter: filter\r\n    }\r\n    let featureRequest = new WFS().writeGetFeature(options);\r\n    let request = new XMLSerializer().serializeToString(featureRequest);\r\n    //XML中添加排序规则\r\n    //let sortBy = `<SortBy xmlns=\"http://www.opengis.net/ogc\"><SortProperty><PropertyName>${GEOTYPE(layerName, 1)}</PropertyName><SortOrder>0</SortOrder></SortProperty></SortBy>`;\r\n    //在<Filter之前插入sortBy字符串\r\n    //request = request.slice(0, request.indexOf('<Filter')) + sortBy + request.slice(request.indexOf('<Filter'));\r\n    return request;\r\n}\r\n\r\n/**\r\n * post请求\r\n * @param url BaseURL\r\n * @param body 提交数据\r\n * @param pageSize 单页数量\r\n * @param resolve Promise.resolve\r\n */\r\nconst postWFS = (url, body, pageSize, resolve) => {\r\n    postRequestAll(url + 'geoserver/wfs', body, body.length + 1, (data) => {\r\n        let features = []\r\n        data.forEach(feature => {\r\n            if (feature !== undefined) {\r\n                feature.features.forEach(item => {\r\n                    features.push(item)\r\n                })\r\n            }\r\n        })\r\n        GeoJSONData = {\r\n            crs: { properties: { name: \"urn:ogc:def:crs:EPSG::4326\" }, type: \"name\" },\r\n            features: features,\r\n            numberMatched: pageSize,\r\n            numberReturned: features.length,\r\n            timeStamp: formatDate(new Date().getTime()),\r\n            totalFeatures: features.length,\r\n            type: 'FeatureCollection'\r\n        }\r\n        return resolve(GeoJSONData)\r\n    })\r\n}\r\n\r\n/**\r\n * space filter 空间查询\r\n * @param map 地图对象\r\n * @param url baseURL\r\n * @param type 查询类型\r\n * @param pageSize  分页数量\r\n * @param polygon 多边形geometry类型\r\n * @returns {Promise<unknown>}\r\n */\r\nconst spaceFilter = (map, url, type, pageSize, polygon) => {\r\n    map.removeLayer(filterLayer);\r\n    let source = new Vector();\r\n    let style = ('getStyle' in polygon) ? polygon.getStyle() : new Style({\r\n        stroke: new Stroke({\r\n            color: 'rgba(144,233,253,0.60)',\r\n            width: 1,\r\n        }),\r\n        fill: new Fill({\r\n            color: 'rgba(128,225,255,0.10)',\r\n        }),\r\n    });\r\n    polygon = ('getGeometry' in polygon) ? polygon.getGeometry() : polygon;\r\n    source.addFeature(new Feature({ geometry: polygon, }));\r\n    filterLayer = new VectorLayer({\r\n        source: source,\r\n        style: style\r\n    });\r\n    map.addLayer(filterLayer);\r\n\r\n    //坐标系为EPSG:4326,需要转换经纬度，不然查询结果为空\r\n    polygon.applyTransform((flatCoordinates, flatCoordinates2, stride) => {\r\n        for (let j = 0; j < flatCoordinates.length; j += stride) {\r\n            let y = flatCoordinates[j]\r\n            let x = flatCoordinates[j + 1]\r\n            flatCoordinates[j] = x\r\n            flatCoordinates[j + 1] = y\r\n        }\r\n    });\r\n    let layerNames = TYPE(type).split(',') || [TYPE(type)];\r\n    let body = [];\r\n    layerNames.forEach(layerName => {\r\n        let filter = Filter.intersects(GEOTYPE(layerName, 0), polygon, SRS_NAME)\r\n        body.push(getFeatureRequest(layerName, pageSize, filter));\r\n    });\r\n    return new Promise((resolve) => {\r\n        postWFS(url, body, pageSize, resolve);\r\n    })\r\n}\r\n\r\n/**\r\n * 整理返回的GeoJSON数据\r\n * @param re GeoJSON数据\r\n * @returns {*[]}\r\n [{\r\n     id: \"meiyibao_station.fid-4c06493f_17c55e0b8df_10e3\",\r\n     name: \"查询结果\"\r\n },....]\r\n */\r\nconst getSearchData = (re) => {\r\n    let data = [];\r\n    re.features.forEach(item => {\r\n        let keys = Object.keys(item.properties);\r\n        let name = '', type = item.id.substring(0, item.id.lastIndexOf('.'));\r\n        let property = {\r\n            id: item.id\r\n        }\r\n        keys.forEach(key => {\r\n            if (FIELD(key) && FIELD_NAME(key)) {\r\n                if (FIELD_NAME(key) === 'name') {\r\n                    name += item.properties[FIELD(key)] + '/'\r\n                } else {\r\n                    property[FIELD_NAME(key)] = item.properties[FIELD(key)]\r\n                }\r\n            }\r\n        })\r\n        //删除最后一个/字符\r\n        name = name.substring(0, name.lastIndexOf('/'));\r\n        property['name'] = GEOTYPE(type, 2) + ':' + name;\r\n        data.push(property)\r\n    })\r\n    return data;\r\n}\r\n\r\n//创建样式\r\nconst styleFunction = function (feature) {\r\n    const image = new Circle({\r\n        radius: 4,\r\n        fill: new Fill({\r\n            color: 'rgb(255,0,0)',\r\n        }),\r\n        stroke: new Stroke({ color: 'rgb(31,37,154)', width: 1 }),\r\n    });\r\n    const styles = {\r\n        'Point': new Style({\r\n            image: image,\r\n        }),\r\n        'LineString': new Style({\r\n            stroke: new Stroke({\r\n                color: 'rgb(255,89,0)',\r\n                width: 3,\r\n            }),\r\n        }),\r\n        'MultiLineString': new Style({\r\n            stroke: new Stroke({\r\n                color: 'rgb(255,89,0)',\r\n                width: 3,\r\n            }),\r\n        }),\r\n        'MultiPoint': new Style({\r\n            image: image,\r\n        }),\r\n        'MultiPolygon': new Style({\r\n            stroke: new Stroke({\r\n                color: 'yellow',\r\n                width: 1,\r\n            }),\r\n            fill: new Fill({\r\n                color: 'rgba(255,255,0,0.29)',\r\n            }),\r\n        }),\r\n        'Polygon': new Style({\r\n            stroke: new Stroke({\r\n                color: 'blue',\r\n                lineDash: [4],\r\n                width: 3,\r\n            }),\r\n            fill: new Fill({\r\n                color: 'rgba(0,0,255,0.47)',\r\n            }),\r\n        }),\r\n        'GeometryCollection': new Style({\r\n            stroke: new Stroke({\r\n                color: 'rgb(208,0,255)',\r\n                width: 2,\r\n            }),\r\n            fill: new Fill({\r\n                color: 'rgb(208,0,255)',\r\n            }),\r\n            image: new Circle({\r\n                radius: 10,\r\n                fill: null,\r\n                stroke: new Stroke({\r\n                    color: 'rgb(208,0,255)',\r\n                }),\r\n            }),\r\n        }),\r\n        'Circle': new Style({\r\n            stroke: new Stroke({\r\n                color: 'rgba(255,0,0,0.2)',\r\n                width: 2,\r\n            }),\r\n            fill: new Fill({\r\n                color: 'rgba(255,0,0,0.2)',\r\n            }),\r\n        }),\r\n    };\r\n    return styles[feature.getGeometry().getType()];\r\n};\r\n\r\n/**\r\n * 添加GeoJSON到地图\r\n * @param map ol map对象\r\n * @param features geojson\r\n * @param featureId 指定id\r\n */\r\nconst addGeoJSON = (map, featureId) => {\r\n    let features = GeoJSONData;\r\n    map.removeLayer(searchLayer);\r\n    if (features === null) return null;\r\n    const source = new Vector();\r\n    if (featureId === undefined || featureId === null || featureId === '') {\r\n        //读取数据表中geojson创建为feature对象\r\n        let feature = new GeoJSON().readFeatures(features);\r\n        source.addFeatures(feature);\r\n    } else {\r\n        //循环data 加载要素到地图\r\n        features.features.forEach(item => {\r\n            if (item.id === featureId) {\r\n                //读取数据表中wkt创建为feature对象\r\n                let feature = new GeoJSON().readFeature(item);\r\n                source.addFeature(feature);\r\n            }\r\n        });\r\n    }\r\n    if (source.getFeatures().length === 0) return null;\r\n    searchLayer = new VectorLayer({\r\n        source: source,\r\n        style: styleFunction\r\n    });\r\n    //添加geojson图层到地图\r\n    map.addLayer(searchLayer);\r\n    //通过extent缩放至范围\r\n    let extent = source.getExtent();\r\n    let r = map.getView().getResolutionForExtent(extent, map.getSize());\r\n    //设置地图显示缩放等级\r\n    map.getView().setResolution(r);\r\n    //设置地图中心点\r\n    map.getView().setCenter(Extent.getCenter(extent));\r\n}\r\n\r\n/**\r\n * 加载天地图\r\n * @param lyr\r\n * @returns {_ol_layer_Tile_}\r\n */\r\nconst getTdtLayer = (lyr) => {\r\n    // let url = \"http://t0.tianditu.gov.cn/DataServer?T=\"+lyr+\"&X={x}&Y={y}&L={z}\";\r\n    let urls = [];\r\n    for (let i = 0; i < 8; i++) {\r\n        urls.push(\"http://t\" + i + \".tianditu.gov.cn/DataServer?T=\" + lyr + \"&X={x}&Y={y}&L={z}&tk=16c5722fed64bcdbb390cc21a5548cf9\");\r\n    }\r\n    return new TileLayer({\r\n        source: new XYZ({\r\n            urls: urls\r\n        })\r\n    });\r\n}\r\n\r\nexport {\r\n    getRequestAll,\r\n    postRequestAll,\r\n    formatDate,\r\n    getLikeSQL,\r\n    getDescribeToSql,\r\n    getSearchURLs,\r\n    getSearch,\r\n    getFeatureRequest,\r\n    postWFS,\r\n    spaceFilter,\r\n    getSearchData,\r\n    styleFunction,\r\n    addGeoJSON,\r\n    getTdtLayer\r\n}\r\n","module.exports = axios;"],"sourceRoot":""}