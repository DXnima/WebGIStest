{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"echarts\"","webpack:///external \"NProgress\"","webpack:///./src/utils/coordinatesUtils.js","webpack:///./src/api/control/capital.js","webpack:///./src/api/control/config.js","webpack:///./src/api/control/gdb.js","webpack:///./src/api/control/geotools.js","webpack:///./src/api/control/layeredit.js","webpack:///./src/api/control/mapinfo.js","webpack:///./src/api/control/mapmvt.js","webpack:///./src/api/control/mappublish.js","webpack:///./src/api/control/mapstyle.js","webpack:///./src/api/control/pgedit.js","webpack:///./src/api/control/spatialanalysis.js","webpack:///./src/api/control/university.js","webpack:///./src/api/control/upload.js","webpack:///./src/api/ogc/wfs.js","webpack:///./src/utils/configUtils.js","webpack:///./src/api/ogc/wms.js","webpack:///./src/App.vue","webpack:///src/App.vue","webpack:///./src/App.vue?a7d1","webpack:///./src/App.vue?a938","webpack:///./src/router/index.js","webpack:///./src/main-prod.js","webpack:///external \"_\"","webpack:///external \"VueRouter\"","webpack:///external \"Vue\"","webpack:///./src/utils/searchUtils.js","webpack:///external \"axios\""],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","installedCssChunks","jsonpScriptSrc","p","exports","module","l","e","promises","cssChunks","Promise","resolve","reject","href","fullhref","existingLinkTags","document","getElementsByTagName","tag","dataHref","getAttribute","rel","existingStyleTags","linkTag","createElement","type","onload","onerror","event","request","target","src","err","Error","code","parentNode","removeChild","head","appendChild","then","installedChunkData","promise","onScriptComplete","script","charset","timeout","nc","setAttribute","error","clearTimeout","chunk","errorType","realSrc","message","name","undefined","setTimeout","all","m","c","d","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","oe","console","jsonpArray","window","oldJsonpFunction","slice","echarts","NProgress","CoordinatesUtils","insertCapital","axios","post","getCapital","addWorkspace","getTableInfo","getGdbLayers","getCalculate","getWmsMap","params","getLayerEdit","addLayerEdit","updateLayerEdit","getWorkspaceNames","getDatastores","getLayersInfo","getLayerInfo","getStyles1","getStyles2","getSLD","getMVT","z","x","y","cacheMVT","delWorkspace","delete","addStyle1","addDefStyle","addStyle2","addDefStyle2","updateStyle","put","delStyle","addShpLayer1","addShpLayer2","addPostGISLayer1","addPostGISLayer2","updateDataStore","delDataStore","updateLayer","delLayer","changeStyleByStyleName","changeStyleByLayerName","getStyleValueByStyleName","getStyleValueByLayerName","changeDefaultStyle","getTablesInfo","getTableData","findTableData","addTableData","updateTableData","delTableData","relationAnalysis","interAnalysis","unionAnalysis","diffAnalysis","symDiffAnalysis","buffAnalysis","getUniversity","uploadFile","toDescribeURL","url","typeName","parsed","urlUtil","parse","format","search","query","service","version","outputFormat","getFeatureSimple","baseUrl","assign","response","JSON","getCapabilitiesURL","getFeatureURL","getJsonFeatureURL","defaults","headers","param","pageNum","pageSize","crs","xml","getFeature","getJsonFeature","getCapabilities","describeFeatureType","postResult","ft","GeoJSON","readFeature","geoJson","setId","row","id","options","featureNS","split","featureType","srsName","_X_ROW_KEY","setProperties","geom","getGeometry","applyTransform","flatCoordinates","flatCoordinates2","stride","setGeometryName","geomField","setGeometry","addFeatureByWfs","fields","featObject","WFS","writeTransaction","serializer","XMLSerializer","featString","serializeToString","updateFeatureByWfs","deleteFeatureByWfs","defaultConfig","proxyUrl","geoStoreUrl","printUrl","translationsPath","extensionsRegistry","extensionsFolder","configurationFolder","contextPluginsConfiguration","projectionDefs","themePrefix","bingApiKey","mapquestApiKey","defaultSourceType","backgroundGroup","userSessions","enabled","getConfigProp","prop","proj4","Proj4js","FORMULAS","coordinates","p1","p2","x1","y1","x2","y2","parseFloat","geo","vincentySync","longitude","latitude","haversineSync","isXY","list","traverseCoords","callback","map","coord","getProjUrl","EPSG","traverseGeoJson","geojson","leafCallback","nodeCallback","cloneDeep","geometry","features","gj","geometries","determineCrs","String","defs","Proj","crsLabels","normalizePoint","point","srs","numberize","outpoint","isNumber","reproject","source","dest","normalize","sourceProj","destProj","isArray","toPoint","transformed","transform","supportedSplitExtentEPSG","normalizeExtent","bounds","projection","extent","minx","miny","maxx","maxy","reduce","a","b","isWorldView","Math","abs","reprojectExtent","isIDL","ext","getPolygonFromExtent","bboxPolygon","getExtentFromNormalized","normalizedXExtent","crsCodeTable","setCrsLabels","labels","getUnits","proj","units","getProjectedBBox","center","resolution","rotation","size","dx","dy","cosRotation","cos","sinRotation","sin","xCos","xSin","yCos","ySin","x0","x3","y0","y3","createBBox","min","max","minX","minY","maxX","maxY","reprojectGeoJson","fromParam","toParam","from","to","forward","bbox","Number","MAX_VALUE","_gj","xy","lineIntersectPolygon","linestring","polygon","polygonLines","polygonToLinestring","lineIntersect","normalizeLng","lng","tLng","reprojectBbox","points","sw","ne","projPoints","projected","getCompatibleSRS","allowedSRS","getEquivalentSRS","getEPSGCode","indexOf","substring","lastIndexOf","normalizeSRS","isAllowedSRS","getAvailableCRS","crsList","label","filterCRSList","availableCRS","filterAllowedCRS","additionalCRS","projDefs","keys","codeProjections","newAdditionalCRS","calculateAzimuth","pj","p1proj","p2proj","lon1","PI","lat1","lon2","lat2","dLon","azimuth","atan2","calculateDistance","coords","formula","extendExtent","extent1","extent2","newExtent","getGeoJSONExtent","geoJSON","Infinity","reduceCollectionExtent","collectionElement","isValidExtent","flattenDeep","calculateCircleCoordinates","radius","sides","rotatedAngle","angle","transformLineToArcs","npoints","offset","properties","arcs","start","end","grCircle","greatCircle","transformArcsToLine","last","concat","coordsOLtoLeaflet","reverse","mergeToPolyGeom","getViewportGeometry","filter","epsg","extentToCoordinates","centerX","getExtentFromViewport","rightExtentWidth","leftExtentWidth","fetchProjRemotely","parseURN","crsCode","parseString","str","isNaN","getWMSBoundingBox","BoundingBox","mapSRS","SRS","$","isSRSAllowed","getNormalizedLatLon","lat","isInsideVisibleArea","layout","normalizedCoords","reprojectedCoords","layoutBounds","left","right","top","bottom","visibleExtent","splittedView","views","val","centerToVisibleArea","visibleSize","width","height","mapExtent","pos","zoom","adjustedPos","calculateCircleRadiusFromPixel","coordinatesFromPixelConverter","pixel","pixelRadius","defaultRadius","radiusA","pixelCoords","isFunction","radiusB","sqrt","roundCoord","roundingBehaviour","maximumFractionDigits","midpoint","returnArray","pObj1","pObj2","pointObjectToArray","isObject","isPointInsideExtent","contains","isBboxCompatible","overlap","extractCrsFromURN","urnString","parts","validURN","authority","makeNumericEPSG","epsgCode","epsgCodeNum","parseInt","epsgCodeNormalized","replace","toLowerCase","epsgCodeNewNum","makeBboxFromOWS","lcOWS","ucOWS","lc","uc","lcOld","ucOld","getPolygonFromCircle","steps","turfCircle","getProjections","projections","getExtentForProjection","find","project","checkIfLayerFitsExtentForProjection","layer","crsMinX","crsMinY","crsMaxX","crsMaxY","turfBbox","getLonLatFromPoint","latlng","lngCorrected","round","floor","capabilitiesCache","parseUrl","urls","extractCredits","attribution","title","Title","logo","LogoURL","link","imageUrl","flatLayers","root","Layer","previous","current","Name","getOnlineResource","Request","GetMap","DCPType","HTTP","Get","OnlineResource","searchAndPaginate","json","startPosition","maxRecords","text","WMS_Capabilities","WMT_MS_Capabilities","Capability","Service","onlineResource","SRSList","CRS","toUpperCase","credits","Attribution","rootFormats","Format","layersObj","layers","filteredLayers","Abstract","numberOfRecordsMatched","numberOfRecordsReturned","nextRecord","layerOptions","records","index","formats","getDimensions","castArray","Dimension","dimension","dim","Extent","unitSymbol","default","values","_","describeLayer","describeLayerUrl","require","unmarshaller","unmarshalString","layerDescription","getRecords","cached","Date","getTime","timestamp","xml2js","explicitArray","ignore","describeLayers","decriptions","WMS_DescribeLayerResponse","LayerDescription","Array","desc","layerName","textSearch","parseLayerCapabilities","capabilities","lyrs","capability","getBBox","record","EX_GeographicBoundingBox","exGeographicBoundingBox","LatLonBoundingBox","latLonBoundingBox","westBoundLongitude","southBoundLatitude","eastBoundLongitude","northBoundLatitude","catalogBounds","reset","forEach","render","_vm","this","_c","_self","attrs","staticRenderFns","component","Login","Home","Welcome","ClickHighlight","ClikLatLon","LayerCheckBox","LayerEcharts","LayerEdit","LayerLink","LayerSwitch","PostPoint","ShowCollege","ShowGeoJSON","ShowPopup","ShowWKT","TargetView","WebGISUI","WMS","WMTS","AddWFS","DeleteWFS","QueryWFS","UpdateWFS","AllWFS","AllQueryWFS","GeoserverRest","TableRest","EditTableRest","FeatureRest","EditFeatureRest","VectorTiles","BuffAnalysis","DiffAnalysis","SymDiffAnalysis","InterAnalysis","SpaceRelation","UnionAnalysis","NetAnalysis","ReadGdb","Vue","use","Router","routes","path","redirect","children","router","beforeEach","next","tokenStr","sessionStorage","getItem","VXETable","baseURL","process","interceptors","config","Authorization","done","$http","$api","API","$API","productionTip","originVal","dt","getFullYear","getMonth","padStart","getDay","hh","getHours","mm","getMinutes","ss","getSeconds","h","App","$mount","VueRouter","SPACE_NAME","SRS_NAME","searchLayer","filterLayer","GeoJSONData","TYPE","poi","landmarks","roads","GEOTYPE","poly_landmarks","tiger_roads","FIELD","NAME","LANAME","FIELD_NAME","getRequestAll","fetchArr","toFetch","one","fetch","catch","numberMatched","numberReturned","timeStamp","formatDate","totalFeatures","race","postRequestAll","body","method","date","YY","MM","DD","getDate","getLikeSQL","featureTypes","keyword","sql","like","propertie","cql","getDescribeToSql","getSearchURLs","item","encodeURI","getSearch","re","feature","getFeatureRequest","featurePrefix","maxFeatures","featureRequest","writeGetFeature","postWFS","spaceFilter","removeLayer","Vector","style","getStyle","Style","stroke","Stroke","color","fill","Fill","addFeature","Feature","VectorLayer","addLayer","layerNames","Filter","intersects","getSearchData","styleFunction","image","Circle","styles","lineDash","getType","addGeoJSON","featureId","readFeatures","addFeatures","getFeatures","getExtent","getView","getResolutionForExtent","getSize","setResolution","setCenter","getCenter","getTdtLayer","lyr","TileLayer","XYZ"],"mappings":"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","file":"js/app.a30de89f.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded CSS chunks\n \tvar installedCssChunks = {\n \t\t\"app\": 0\n \t}\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"js/\" + ({}[chunkId]||chunkId) + \".\" + {\"chunk-0679a96c\":\"b9bc2e50\",\"chunk-13e0f790\":\"94ab91e8\",\"chunk-350a49ce\":\"2081eb06\",\"chunk-48c15602\":\"43fb2921\",\"chunk-6bc4a3ba\":\"f3b394e2\",\"chunk-78bca34e\":\"3cadd832\",\"chunk-7b97667f\":\"346dc5cf\",\"chunk-7d6958fb\":\"b16c5a8a\",\"chunk-027b4908\":\"f36a236e\",\"chunk-0aba0619\":\"bfee468a\",\"chunk-0abf7c70\":\"ab6772aa\",\"chunk-104017c6\":\"5344399b\",\"chunk-13b149cb\":\"6120151e\",\"chunk-231a9bdd\":\"5d21ab2d\",\"chunk-25ab1844\":\"cc48a63f\",\"chunk-29cf3694\":\"c9a9e1d8\",\"chunk-3054026c\":\"3f77f54c\",\"chunk-31a8c8ca\":\"70f84a29\",\"chunk-39459bed\":\"3f9575f5\",\"chunk-42aa1406\":\"3783f650\",\"chunk-42e0ffb2\":\"d9cf17d6\",\"chunk-497ced0e\":\"2a1c192a\",\"chunk-4fc6719f\":\"07626252\",\"chunk-589f38e7\":\"83b1dee3\",\"chunk-5e56ac5c\":\"d247204d\",\"chunk-02116b9a\":\"ca9cc522\",\"chunk-6d20239f\":\"556fd64d\",\"chunk-7fcf414f\":\"41536737\",\"chunk-2d0e93f2\":\"a12eb13b\",\"chunk-548ddc74\":\"33af6b92\",\"chunk-00e773d4\":\"66c09bff\",\"chunk-185dca03\":\"535d2e0b\",\"chunk-49089243\":\"93493e77\",\"chunk-6ff2d83d\":\"99628f8a\",\"chunk-b559bcd6\":\"ff29604e\",\"chunk-dc6f2514\":\"51445632\",\"chunk-5c4e9d90\":\"2cce8fb7\",\"chunk-c5365c40\":\"4b48df40\",\"chunk-82f9038c\":\"7fde6f9f\",\"chunk-b57c3472\":\"75f81ae4\",\"chunk-bebbfcd6\":\"3e952ff7\",\"chunk-e26540c2\":\"b570f555\",\"chunk-e8dfe8f8\":\"2a7db0ad\",\"chunk-fb00835a\":\"c1abf60a\",\"chunk-eee1cdb8\":\"608114e3\"}[chunkId] + \".js\"\n \t}\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n\n\n \t\t// mini-css-extract-plugin CSS loading\n \t\tvar cssChunks = {\"chunk-0679a96c\":1,\"chunk-13e0f790\":1,\"chunk-48c15602\":1,\"chunk-6bc4a3ba\":1,\"chunk-78bca34e\":1,\"chunk-7b97667f\":1,\"chunk-0aba0619\":1,\"chunk-0abf7c70\":1,\"chunk-104017c6\":1,\"chunk-13b149cb\":1,\"chunk-231a9bdd\":1,\"chunk-3054026c\":1,\"chunk-39459bed\":1,\"chunk-42e0ffb2\":1,\"chunk-497ced0e\":1,\"chunk-4fc6719f\":1,\"chunk-6d20239f\":1,\"chunk-185dca03\":1,\"chunk-49089243\":1,\"chunk-6ff2d83d\":1,\"chunk-b559bcd6\":1,\"chunk-dc6f2514\":1,\"chunk-b57c3472\":1,\"chunk-e26540c2\":1,\"chunk-e8dfe8f8\":1,\"chunk-fb00835a\":1,\"chunk-eee1cdb8\":1};\n \t\tif(installedCssChunks[chunkId]) promises.push(installedCssChunks[chunkId]);\n \t\telse if(installedCssChunks[chunkId] !== 0 && cssChunks[chunkId]) {\n \t\t\tpromises.push(installedCssChunks[chunkId] = new Promise(function(resolve, reject) {\n \t\t\t\tvar href = \"css/\" + ({}[chunkId]||chunkId) + \".\" + {\"chunk-0679a96c\":\"aa1ecbf7\",\"chunk-13e0f790\":\"3be569b0\",\"chunk-350a49ce\":\"31d6cfe0\",\"chunk-48c15602\":\"247649a0\",\"chunk-6bc4a3ba\":\"3be569b0\",\"chunk-78bca34e\":\"6e32b203\",\"chunk-7b97667f\":\"dbb33c76\",\"chunk-7d6958fb\":\"31d6cfe0\",\"chunk-027b4908\":\"31d6cfe0\",\"chunk-0aba0619\":\"56628579\",\"chunk-0abf7c70\":\"92567454\",\"chunk-104017c6\":\"e0e24f6c\",\"chunk-13b149cb\":\"aae2e905\",\"chunk-231a9bdd\":\"b9c6daeb\",\"chunk-25ab1844\":\"31d6cfe0\",\"chunk-29cf3694\":\"31d6cfe0\",\"chunk-3054026c\":\"90a81918\",\"chunk-31a8c8ca\":\"31d6cfe0\",\"chunk-39459bed\":\"240886da\",\"chunk-42aa1406\":\"31d6cfe0\",\"chunk-42e0ffb2\":\"b9c6daeb\",\"chunk-497ced0e\":\"b9c6daeb\",\"chunk-4fc6719f\":\"7dcde3a6\",\"chunk-589f38e7\":\"31d6cfe0\",\"chunk-5e56ac5c\":\"31d6cfe0\",\"chunk-02116b9a\":\"31d6cfe0\",\"chunk-6d20239f\":\"b9c6daeb\",\"chunk-7fcf414f\":\"31d6cfe0\",\"chunk-2d0e93f2\":\"31d6cfe0\",\"chunk-548ddc74\":\"31d6cfe0\",\"chunk-00e773d4\":\"31d6cfe0\",\"chunk-185dca03\":\"9990b0dd\",\"chunk-49089243\":\"9990b0dd\",\"chunk-6ff2d83d\":\"b9c6daeb\",\"chunk-b559bcd6\":\"6ef270e7\",\"chunk-dc6f2514\":\"e3d6e702\",\"chunk-5c4e9d90\":\"31d6cfe0\",\"chunk-c5365c40\":\"31d6cfe0\",\"chunk-82f9038c\":\"31d6cfe0\",\"chunk-b57c3472\":\"c69b2492\",\"chunk-bebbfcd6\":\"31d6cfe0\",\"chunk-e26540c2\":\"48ba4b89\",\"chunk-e8dfe8f8\":\"bcfec197\",\"chunk-fb00835a\":\"b9c6daeb\",\"chunk-eee1cdb8\":\"00e29ece\"}[chunkId] + \".css\";\n \t\t\t\tvar fullhref = __webpack_require__.p + href;\n \t\t\t\tvar existingLinkTags = document.getElementsByTagName(\"link\");\n \t\t\t\tfor(var i = 0; i < existingLinkTags.length; i++) {\n \t\t\t\t\tvar tag = existingLinkTags[i];\n \t\t\t\t\tvar dataHref = tag.getAttribute(\"data-href\") || tag.getAttribute(\"href\");\n \t\t\t\t\tif(tag.rel === \"stylesheet\" && (dataHref === href || dataHref === fullhref)) return resolve();\n \t\t\t\t}\n \t\t\t\tvar existingStyleTags = document.getElementsByTagName(\"style\");\n \t\t\t\tfor(var i = 0; i < existingStyleTags.length; i++) {\n \t\t\t\t\tvar tag = existingStyleTags[i];\n \t\t\t\t\tvar dataHref = tag.getAttribute(\"data-href\");\n \t\t\t\t\tif(dataHref === href || dataHref === fullhref) return resolve();\n \t\t\t\t}\n \t\t\t\tvar linkTag = document.createElement(\"link\");\n \t\t\t\tlinkTag.rel = \"stylesheet\";\n \t\t\t\tlinkTag.type = \"text/css\";\n \t\t\t\tlinkTag.onload = resolve;\n \t\t\t\tlinkTag.onerror = function(event) {\n \t\t\t\t\tvar request = event && event.target && event.target.src || fullhref;\n \t\t\t\t\tvar err = new Error(\"Loading CSS chunk \" + chunkId + \" failed.\\n(\" + request + \")\");\n \t\t\t\t\terr.code = \"CSS_CHUNK_LOAD_FAILED\";\n \t\t\t\t\terr.request = request;\n \t\t\t\t\tdelete installedCssChunks[chunkId]\n \t\t\t\t\tlinkTag.parentNode.removeChild(linkTag)\n \t\t\t\t\treject(err);\n \t\t\t\t};\n \t\t\t\tlinkTag.href = fullhref;\n\n \t\t\t\tvar head = document.getElementsByTagName(\"head\")[0];\n \t\t\t\thead.appendChild(linkTag);\n \t\t\t}).then(function() {\n \t\t\t\tinstalledCssChunks[chunkId] = 0;\n \t\t\t}));\n \t\t}\n\n \t\t// JSONP chunk loading for javascript\n\n \t\tvar installedChunkData = installedChunks[chunkId];\n \t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n \t\t\t// a Promise means \"currently loading\".\n \t\t\tif(installedChunkData) {\n \t\t\t\tpromises.push(installedChunkData[2]);\n \t\t\t} else {\n \t\t\t\t// setup Promise in chunk cache\n \t\t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n \t\t\t\t});\n \t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n \t\t\t\t// start chunk loading\n \t\t\t\tvar script = document.createElement('script');\n \t\t\t\tvar onScriptComplete;\n\n \t\t\t\tscript.charset = 'utf-8';\n \t\t\t\tscript.timeout = 120;\n \t\t\t\tif (__webpack_require__.nc) {\n \t\t\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t\t\t}\n \t\t\t\tscript.src = jsonpScriptSrc(chunkId);\n\n \t\t\t\t// create error before stack unwound to get useful stacktrace later\n \t\t\t\tvar error = new Error();\n \t\t\t\tonScriptComplete = function (event) {\n \t\t\t\t\t// avoid mem leaks in IE.\n \t\t\t\t\tscript.onerror = script.onload = null;\n \t\t\t\t\tclearTimeout(timeout);\n \t\t\t\t\tvar chunk = installedChunks[chunkId];\n \t\t\t\t\tif(chunk !== 0) {\n \t\t\t\t\t\tif(chunk) {\n \t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n \t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n \t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n \t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n \t\t\t\t\t\t\terror.type = errorType;\n \t\t\t\t\t\t\terror.request = realSrc;\n \t\t\t\t\t\t\tchunk[1](error);\n \t\t\t\t\t\t}\n \t\t\t\t\t\tinstalledChunks[chunkId] = undefined;\n \t\t\t\t\t}\n \t\t\t\t};\n \t\t\t\tvar timeout = setTimeout(function(){\n \t\t\t\t\tonScriptComplete({ type: 'timeout', target: script });\n \t\t\t\t}, 120000);\n \t\t\t\tscript.onerror = script.onload = onScriptComplete;\n \t\t\t\tdocument.head.appendChild(script);\n \t\t\t}\n \t\t}\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","module.exports = echarts;","module.exports = NProgress;","/*\n * Copyright 2015, GeoSolutions Sas.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree.\n*/\n\nimport geo from 'node-geo-distance';\n\nimport Proj4js from '@geosolutions/proj4';\nconst proj4 = Proj4js;\nimport axios from 'axios';\nimport assign from 'object-assign';\n\nimport {\n    isArray,\n    isObject,\n    isFunction,\n    flattenDeep,\n    chunk,\n    cloneDeep,\n    isNumber,\n    slice,\n    head,\n    last\n} from 'lodash';\nimport turfCircle from '@turf/circle';\n\nimport lineIntersect from '@turf/line-intersect';\nimport polygonToLinestring from '@turf/polygon-to-linestring';\nimport greatCircle from '@turf/great-circle';\nimport toPoint from 'turf-point';\nimport bboxPolygon from '@turf/bbox-polygon';\nimport overlap from '@turf/boolean-overlap';\nimport contains from '@turf/boolean-contains';\nimport turfBbox from '@turf/bbox';\nimport { getConfigProp } from './configUtils';\n\nlet CoordinatesUtils;\n\nexport const FORMULAS = {\n    /**\n     @param coordinates in EPSG:4326\n     return vincenty distance between two points\n     */\n    \"vincenty\": (coordinates) => {\n        let length = 0;\n        for (let i = 0; i < coordinates.length - 1; ++i) {\n            const p1 = coordinates[i];\n            const p2 = coordinates[i + 1];\n            const [x1, y1] = p1;\n            const [x2, y2] = p2;\n            length += parseFloat(geo.vincentySync({longitude: x1, latitude: y1}, {longitude: x2, latitude: y2}));\n        }\n        return length;\n    },\n    /**\n     @param coordinates in EPSG:4326\n     return distance between two points using Geodesic formula\n     */\n    \"haversine\": (coordinates) => {\n        let length = 0;\n        for (let i = 0; i < coordinates.length - 1; ++i) {\n            const p1 = coordinates[i];\n            const p2 = coordinates[i + 1];\n            const [x1, y1] = p1;\n            const [x2, y2] = p2;\n            length += parseFloat(geo.haversineSync({longitude: x1, latitude: y1}, {longitude: x2, latitude: y2}));\n        }\n        return length;\n    }\n};\n// Checks if `list` looks like a `[x, y]`.\nfunction isXY(list) {\n    return list.length >= 2 &&\n        typeof list[0] === 'number' &&\n        typeof list[1] === 'number';\n}\nfunction traverseCoords(coordinates, callback) {\n    if (isXY(coordinates)) return callback(coordinates);\n    return coordinates.map(function(coord) { return traverseCoords(coord, callback); });\n}\nexport const getProjUrl = (EPSG) => {\n    return `http://spatialreference.org/ref/epsg/${EPSG}/proj4/`;\n};\nfunction traverseGeoJson(geojson, leafCallback, nodeCallback) {\n    if (geojson === null) return geojson;\n\n    let r = cloneDeep(geojson);\n\n    if (geojson.type === 'Feature') {\n        r.geometry = traverseGeoJson(geojson.geometry, leafCallback, nodeCallback);\n    } else if (geojson.type === 'FeatureCollection') {\n        r.features = r.features.map(function(gj) { return traverseGeoJson(gj, leafCallback, nodeCallback); });\n    } else if (geojson.type === 'GeometryCollection') {\n        r.geometries = r.geometries.map(function(gj) { return traverseGeoJson(gj, leafCallback, nodeCallback); });\n    } else {\n        if (leafCallback) leafCallback(r);\n    }\n\n    if (nodeCallback) nodeCallback(r);\n\n    return r;\n}\n\nexport function determineCrs(crs) {\n    if (typeof crs === 'string' || crs instanceof String) {\n        return Proj4js.defs(crs) ? new Proj4js.Proj(crs) : null;\n    }\n    return crs;\n}\n\nlet crsLabels = {\n    \"EPSG:4326\": \"WGS 84\",\n    \"EPSG:3857\": \"EPSG:3857\"\n};\n\nexport const normalizePoint = (point) => {\n    return {\n        x: point.x || 0.0,\n        y: point.y || 0.0,\n        srs: point.srs || point.crs || 'EPSG:4326',\n        crs: point.srs || point.crs || 'EPSG:4326'\n    };\n};\nconst numberize = (point) => {\n    let outpoint = point;\n    if (!isNumber(point.x)) {\n        outpoint.x = parseFloat(point.x);\n    }\n    if (!isNumber(point.y)) {\n        outpoint.y = parseFloat(point.y);\n    }\n    return outpoint;\n};\nexport const reproject = (point, source, dest, normalize = true) => {\n    const sourceProj = source && Proj4js.defs(source) ? new Proj4js.Proj(source) : null;\n    const destProj = dest && Proj4js.defs(dest) ? new Proj4js.Proj(dest) : null;\n    if (sourceProj && destProj) {\n        let p = isArray(point) ? Proj4js.toPoint(point) : Proj4js.toPoint([point.x, point.y]);\n\n        const transformed = assign({}, source === dest ? numberize(p) : Proj4js.transform(sourceProj, destProj, numberize(p)), {srs: dest});\n        if (normalize) {\n            return normalizePoint(transformed);\n        }\n        return transformed;\n    }\n    return null;\n};\n\nconst supportedSplitExtentEPSG = [\n    'EPSG:900913',\n    'EPSG:4326',\n    'EPSG:3857'\n];\n\n/**\n * Return an extent array normalized from EPSG:4326 reprojection\n * @param bounds {object} bounds {minx, miny, maxx, maxy}\n * @param projection {string} the projection of bounds coordinates\n * @return {array} extent with x values normalized from 0 to 360\n */\n\nconst normalizeExtent = (bounds, projection) => {\n    const extent = projection !== 'EPSG:4326' ? [\n\n            reproject([parseFloat(bounds.minx), parseFloat(bounds.miny)], projection, 'EPSG:4326'),\n            reproject([parseFloat(bounds.maxx), parseFloat(bounds.maxy)], projection, 'EPSG:4326')\n        ].reduce((a, b) => [...a, b.x, b.y], [])\n        : [parseFloat(bounds.minx), parseFloat(bounds.miny), parseFloat(bounds.maxx), parseFloat(bounds.maxy)];\n\n    let isWorldView = false;\n    if (projection === 'EPSG:4326') {\n        isWorldView = Math.abs(bounds.maxx - bounds.minx) >= 360;\n    } else if (projection === 'EPSG:900913' || projection === 'EPSG:3857') {\n        isWorldView = Math.abs(bounds.maxx - bounds.minx) >= 20037508.342789244 * 2;\n    }\n\n    return isWorldView ? [0, extent[1], 360, extent[3]] :\n        [(extent[0] + 180) % 360, extent[1], (extent[2] + 180) % 360, extent[3]].map((e, i) => {\n            if (i % 2 === 0) {\n                return e < 0 ? 360 + e : e;\n            }\n            return e;\n        });\n};\n\n/**\n * Reproject extent from EPSG different from 'EPSG:4326'\n * @param extent {array} array of bounds [minx, miny, maxx, maxy] or isIDL `true` [[..bounds], [..bounds]]\n * @param projection {string} the projection of extent coordinates\n * @param isIDL {boolean} intersect the international date line\n * @return {array} extent\n */\nexport const  reprojectExtent = (extent, projection, isIDL) => {\n    if (projection === 'EPSG:4326') {\n        return extent;\n    }\n    return !isIDL ? [\n            reproject([extent[0], extent[1]], 'EPSG:4326', projection),\n            reproject([extent[2], extent[3]], 'EPSG:4326', projection)\n        ].reduce((a, b) => [...a, b.x, b.y], [])\n        : extent.map(ext => [\n            reproject([ext[0], ext[1]], 'EPSG:4326', projection),\n            reproject([ext[2], ext[3]], 'EPSG:4326', projection)\n        ].reduce((a, b) => [...a, b.x, b.y], []));\n};\n\nexport const  getPolygonFromExtent = (extent) => {\n    if (extent) {\n        if (extent.hasOwnProperty('geometry') && extent.geometry.type === \"Polygon\") {\n            return extent;\n        }\n        return bboxPolygon(extent);\n    }\n    return null;\n};\n/**\n * Reproject extent to verify the intersection with the international date line (isIDL)\n * if on IDL return double extent array\n * @param bounds {object} {minx, miny, maxx, maxy}\n * @param projection {string} the projection of bounds\n * @return {object} {extent, isIDL}\n */\nexport const getExtentFromNormalized = (bounds, projection) => {\n    const normalizedXExtent = normalizeExtent(bounds, projection);\n    const isIDL = normalizedXExtent[2] < normalizedXExtent[0];\n\n    if (isIDL) {\n        return {\n            extent: reprojectExtent([[\n                -180,\n                normalizedXExtent[1],\n                normalizedXExtent[2] - 180,\n                normalizedXExtent[3]\n            ], [\n                normalizedXExtent[0] - 180,\n                normalizedXExtent[1],\n                180,\n                normalizedXExtent[3]\n            ]], projection, isIDL),\n            isIDL};\n    }\n    return {\n        extent: reprojectExtent([\n            normalizedXExtent[0] - 180,\n            normalizedXExtent[1],\n            normalizedXExtent[2] - 180,\n            normalizedXExtent[3]\n        ], projection, isIDL),\n        isIDL};\n};\n\nexport const crsCodeTable = {\n    'wgs84': 4326,\n    'wgs1984': 4326,\n    'crs84': 4326,\n    'ogccrs84': 4326,\n    'lambert93': 2154,\n    'rgflambert93': 2154\n};\n\n/**\n * Utilities for Coordinates conversion.\n * @memberof utils\n */\nexport const setCrsLabels = (labels) => {\n    crsLabels = assign({}, crsLabels, labels);\n};\nexport const getUnits = function(projection) {\n    const proj = new Proj4js.Proj(projection);\n    return proj.units || 'degrees';\n};\n/**\n * Creates a bbox of size dimensions areund the center point given to it given the\n * resolution and the rotation\n * @param center {object} the x,y coordinate of the point\n * @param resolution {number} the resolution of the map\n * @param rotation {number} the optional rotation of the new bbox\n * @param size {object} width,height of the desired bbox\n * @return {object} the desired bbox {minx, miny, maxx, maxy}\n */\nexport const getProjectedBBox = function(center, resolution, rotation = 0, size) {\n    let dx = resolution * size[0] / 2;\n    let dy = resolution * size[1] / 2;\n    let cosRotation = Math.cos(rotation);\n    let sinRotation = Math.sin(rotation);\n    let xCos = dx * cosRotation;\n    let xSin = dx * sinRotation;\n    let yCos = dy * cosRotation;\n    let ySin = dy * sinRotation;\n    let x = center.x;\n    let y = center.y;\n    let x0 = x - xCos + ySin;\n    let x1 = x - xCos - ySin;\n    let x2 = x + xCos - ySin;\n    let x3 = x + xCos + ySin;\n    let y0 = y - xSin - yCos;\n    let y1 = y - xSin + yCos;\n    let y2 = y + xSin + yCos;\n    let y3 = y + xSin - yCos;\n    let bounds = CoordinatesUtils.createBBox(\n        Math.min(x0, x1, x2, x3), Math.min(y0, y1, y2, y3),\n        Math.max(x0, x1, x2, x3), Math.max(y0, y1, y2, y3));\n    return bounds;\n};\n/**\n * Returns a bounds object.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @return {Object} Extent.\n */\nexport const createBBox = (minX, minY, maxX, maxY) => {\n    return { minx: minX, miny: minY, maxx: maxX, maxy: maxY };\n};\n/**\n * Reprojects a geojson from a crs into another\n */\nexport const reprojectGeoJson = function(geojson, fromParam = \"EPSG:4326\", toParam = \"EPSG:4326\") {\n    let from = fromParam;\n    let to = toParam;\n    if (typeof from === 'string') {\n        from = determineCrs(from);\n    }\n    if (typeof to === 'string') {\n        to = determineCrs(to);\n    }\n    let transform = proj4(from, to);\n\n    return traverseGeoJson(geojson, (gj) => {\n        // No easy way to put correct CRS info into the GeoJSON,\n        // and definitely wrong to keep the old, so delete it.\n        if (gj.crs) {\n            delete gj.crs;\n        }\n        // Strip Z coord if present fixes #2638 Proj4 transform only bidimensional coordinates\n        gj.coordinates = traverseCoords(gj.coordinates, ([x, y]) => {\n            return transform.forward([x, y]);\n        });\n    }, (gj) => {\n        if (gj.bbox) {\n            // A bbox can't easily be reprojected, just reprojecting\n            // the min/max coords definitely will not work since\n            // the transform is not linear (in the general case).\n            // Workaround is to just re-compute the bbox after the\n            // transform.\n            gj.bbox = (() => {\n                let min = [Number.MAX_VALUE, Number.MAX_VALUE];\n                let max = [-Number.MAX_VALUE, -Number.MAX_VALUE];\n                traverseGeoJson(gj, function(_gj) {\n                    traverseCoords(_gj.coordinates, function(xy) {\n                        min[0] = Math.min(min[0], xy[0]);\n                        min[1] = Math.min(min[1], xy[1]);\n                        max[0] = Math.max(max[0], xy[0]);\n                        max[1] = Math.max(max[1], xy[1]);\n                    });\n                });\n                return [min[0], min[1], max[0], max[1]];\n            })();\n        }\n    });\n};\nexport const lineIntersectPolygon = function(linestring, polygon) {\n    let polygonLines = polygonToLinestring(polygon).features[0];\n    return lineIntersect(linestring, polygonLines).features.length !== 0;\n};\nexport const normalizeLng = (lng) => {\n    let tLng = lng / 360 % 1 * 360;\n    if (tLng < -180) {\n        tLng = tLng + 360;\n    } else if (tLng > 180) {\n        tLng = tLng - 360;\n    }\n    return tLng;\n};\n/**\n * Reprojects a bounding box.\n * @param bbox {array} [minx, miny, maxx, maxy]\n * @param source {string} SRS of the given bbox\n * @param dest {string} SRS of the returned bbox\n * @return {array} [minx, miny, maxx, maxy]\n */\nexport const reprojectBbox = function(bbox, source, dest, normalize = true) {\n    let points;\n    if (isArray(bbox)) {\n        points = {\n            sw: [bbox[0], bbox[1]],\n            ne: [bbox[2], bbox[3]]\n        };\n    } else {\n        points = {\n            sw: [bbox.minx, bbox.miny],\n            ne: [bbox.maxx, bbox.maxy]\n        };\n    }\n    let projPoints = [];\n    for (let p in points) {\n        if (points.hasOwnProperty(p)) {\n            const projected = CoordinatesUtils.reproject(points[p], source, dest, normalize);\n            if (projected) {\n                let {x, y} = projected;\n                projPoints.push(x);\n                projPoints.push(y);\n            } else {\n                return null;\n            }\n        }\n    }\n    return projPoints;\n};\nexport const bboxToFeatureGeometry = (bbox) => {\n    const bboxObj = isArray(bbox) ? {\n        minx: bbox[0],\n        miny: bbox[1],\n        maxx: bbox[2],\n        maxy: bbox[3]\n    } : bbox;\n\n    const {minx, miny, maxx, maxy} = bboxObj;\n\n    return {\n        type: \"Polygon\",\n        coordinates: [[\n            [minx, miny],\n            [minx, maxy],\n            [maxx, maxy],\n            [maxx, miny],\n            [minx, miny]\n        ]]\n    };\n};\nexport const getCompatibleSRS = (srs, allowedSRS) => {\n    if (srs === 'EPSG:900913' && !allowedSRS['EPSG:900913'] && allowedSRS['EPSG:3857']) {\n        return 'EPSG:3857';\n    }\n    if (srs === 'EPSG:3857' && !allowedSRS['EPSG:3857'] && allowedSRS['EPSG:900913']) {\n        return 'EPSG:900913';\n    }\n    return srs;\n};\nexport const getEquivalentSRS = (srs) => {\n    if (srs === 'EPSG:900913' || srs === 'EPSG:3857') {\n        return ['EPSG:3857', 'EPSG:900913'];\n    }\n    return [srs];\n};\nexport const getEPSGCode = (code) => {\n    if (code.indexOf(':') !== -1) {\n        return 'EPSG:' + code.substring(code.lastIndexOf(':') + 1);\n    }\n    return code;\n};\nexport const normalizeSRS = function(srs, allowedSRS) {\n    const result = srs === 'EPSG:900913' ? 'EPSG:3857' : srs;\n    if (allowedSRS && !allowedSRS[result]) {\n        return CoordinatesUtils.getCompatibleSRS(result, allowedSRS);\n    }\n    return result;\n};\nexport const isAllowedSRS = (srs, allowedSRS) => {\n    return allowedSRS[CoordinatesUtils.getCompatibleSRS(srs, allowedSRS)];\n};\nexport const getAvailableCRS = function() {\n    let crsList = {};\n    for (let a in Proj4js.defs) {\n        if (Proj4js.defs.hasOwnProperty(a)) {\n            crsList[a] = {label: crsLabels[a] || a};\n        }\n    }\n    return crsList;\n};\nexport const filterCRSList = (availableCRS, filterAllowedCRS, additionalCRS, projDefs ) => {\n    let crs = Object.keys(availableCRS).reduce( (p, c) => {\n        return assign({}, filterAllowedCRS.indexOf(c) === -1 ? p : {...p, [c]: availableCRS[c]});\n    }, {});\n    const codeProjections = projDefs.map(p => p.code);\n    let newAdditionalCRS = Object.keys(additionalCRS).reduce( (p, c) => {\n        return assign({}, codeProjections.indexOf(c) === -1 ? p : {...p, [c]: additionalCRS[c]});\n    }, {});\n    return assign({}, crs, newAdditionalCRS);\n};\nexport const calculateAzimuth = function(p1, p2, pj) {\n    var p1proj = CoordinatesUtils.reproject(p1, pj, 'EPSG:4326');\n    var p2proj = CoordinatesUtils.reproject(p2, pj, 'EPSG:4326');\n    var lon1 = p1proj.x * Math.PI / 180.0;\n    var lat1 = p1proj.y * Math.PI / 180.0;\n    var lon2 = p2proj.x * Math.PI / 180.0;\n    var lat2 = p2proj.y * Math.PI / 180.0;\n    var dLon = lon2 - lon1;\n    var y = Math.sin(dLon) * Math.cos(lat2);\n    var x = Math.cos(lat1) * Math.sin(lat2) - Math.sin(lat1) * Math.cos(lat2) * Math.cos(dLon);\n\n    var azimuth = (Math.atan2(y, x) * 180.0 / Math.PI + 360 ) % 360;\n\n    return azimuth;\n};\n/**\n * Calculate length based on haversine or vincenty formula\n * @param {object[]} coords projected in EPSG:4326\n * @return {number} length in meters\n */\nexport const calculateDistance = (coords = [], formula = \"haversine\") => {\n    if (coords.length >= 2 && Object.keys(FORMULAS).indexOf(formula) !== -1) {\n        return FORMULAS[formula](coords);\n    }\n    return 0;\n};\n\n/**\n * Extend an extent given another one\n *\n * @param extent1 {array} [minx, miny, maxx, maxy]\n * @param extent2 {array} [minx, miny, maxx, maxy]\n *\n * @return {array} [minx, miny, maxx, maxy]\n */\nexport const extendExtent = function(extent1, extent2) {\n    let newExtent = extent1.slice();\n    if (extent2[0] < extent1[0]) {\n        newExtent[0] = extent2[0];\n    }\n    if (extent2[2] > extent1[2]) {\n        newExtent[2] = extent2[2];\n    }\n    if (extent2[1] < extent1[1]) {\n        newExtent[1] = extent2[1];\n    }\n    if (extent2[3] > extent1[3]) {\n        newExtent[3] = extent2[3];\n    }\n    return newExtent;\n};\n/**\n * Calculates the extent for the geoJSON passed. It used a small buffer for points.\n * Like turf/bbox but works only with simple geometries.\n * @deprecated  We may replace it with turf/bbox + turf/buffer in the future, so using it with geometry is discouraged\n * @param {geoJSON|geometry} GeoJSON or geometry\n * @return {array} extent of the geoJSON\n */\nexport const getGeoJSONExtent = function(geoJSON) {\n    let newExtent = [Infinity, Infinity, -Infinity, -Infinity];\n    const reduceCollectionExtent = (extent, collectionElement) => {\n        let ext = CoordinatesUtils.getGeoJSONExtent(collectionElement);\n        if (CoordinatesUtils.isValidExtent(ext)) {\n            return CoordinatesUtils.extendExtent(ext, extent);\n        }\n        return ext;\n    };\n    if (geoJSON.coordinates) {\n        if (geoJSON.type === \"Point\") {\n            let point = geoJSON.coordinates;\n            newExtent[0] = point[0] - point[0] * 0.01;\n            newExtent[1] = point[1] - point[1] * 0.01;\n            newExtent[2] = point[0] + point[0] * 0.01;\n            newExtent[3] = point[1] + point[1] * 0.01;\n        }\n        // other kinds of geometry\n        const flatCoordinates = chunk(flattenDeep(geoJSON.coordinates), 2);\n        return flatCoordinates.reduce((extent, point) => {\n            return [\n                point[0] < extent[0] ? point[0] : extent[0],\n                point[1] < extent[1] ? point[1] : extent[1],\n                point[0] > extent[2] ? point[0] : extent[2],\n                point[1] > extent[3] ? point[1] : extent[3]\n            ];\n        }, newExtent);\n\n    } else if (geoJSON.type === \"GeometryCollection\") {\n        let geometries = geoJSON.geometries;\n        return geometries.reduce(reduceCollectionExtent, newExtent);\n    } else if (geoJSON.type) {\n        if (geoJSON.type === \"FeatureCollection\") {\n            return geoJSON.features.reduce(reduceCollectionExtent, newExtent);\n        } else if (geoJSON.type === \"Feature\" && geoJSON.geometry) {\n            return CoordinatesUtils.getGeoJSONExtent(geoJSON.geometry);\n        }\n    }\n\n    return newExtent;\n};\n/**\n * Check extent validity\n *\n * @param extent {array} [minx, miny, maxx, maxy]\n *\n * @return {bool}\n */\nexport const isValidExtent = function(extent) {\n    return !(\n        extent.indexOf(Infinity) !== -1 || extent.indexOf(-Infinity) !== -1 ||\n        extent[0] > extent[2] || extent[1] > extent[3]\n    );\n};\nexport const calculateCircleCoordinates = function(center, radius, sides, rotation) {\n    let angle = Math.PI * (1 / sides - 1 / 2);\n\n    if (rotation) {\n        angle += rotation / 180 * Math.PI;\n    }\n\n    let rotatedAngle; let x; let y;\n    let points = [[]];\n    for (let i = 0; i < sides; i++) {\n        rotatedAngle = angle + i * 2 * Math.PI / sides;\n        x = center.x + radius * Math.cos(rotatedAngle);\n        y = center.y + radius * Math.sin(rotatedAngle);\n        points[0].push([x, y]);\n    }\n\n    points[0].push(points[0][0]);\n    return points;\n};\n/**\n * Generate arcs between a series of points\n * @param {number[]} coordinates of points of a LineString reprojected in 4326\n * @param {object} options of the great circle drawMethod\n * npoints: number of points\n * offset: offset controls the likelyhood that lines will be split which cross the dateline. The higher the number the more likely.\n * properties: line feature properties\n * @return {number[]} for each couple of points it creates an arc of 100 points by default\n */\nexport const transformLineToArcs = (coordinates, options = {npoints: 100, offset: 10, properties: {}}) => {\n    let arcs = [];\n    for (let i = 0; i < coordinates.length - 1; ++i) {\n        const p1 = coordinates[i];\n        const p2 = coordinates[i + 1];\n        const start = toPoint(p1);\n        const end = toPoint(p2);\n        if (!(p1[0] === p2[0] && p1[1] === p2[1])) {\n            let grCircle = greatCircle(start, end, options);\n            arcs = [...arcs, ...grCircle.geometry.coordinates];\n        }\n    }\n    return arcs;\n};\nexport const transformArcsToLine = (coordinates, npoints = 100) => {\n    if (coordinates.length <= npoints) {\n        return [head(coordinates), last(coordinates)];\n    } else if (coordinates.length > npoints) {\n        return [head(coordinates)].concat(CoordinatesUtils.transformArcsToLine(slice(coordinates, npoints)));\n    }\n    return [];\n};\nexport const coordsOLtoLeaflet = ({coordinates, type}) => {\n    switch (type) {\n        case \"Polygon\": {\n            return coordinates.map(c => {\n                return c.map(point => point.reverse());\n            });\n        }\n        case \"LineString\": {\n            return coordinates.map(point => point.reverse());\n        }\n        case \"Point\": {\n            return coordinates.reverse();\n        }\n        default: return [];\n    }\n};\nexport const mergeToPolyGeom = (features) => {\n    if (features.length === 1) {\n        return features[0].geometry;\n    }\n    return {\n        type: \"GeometryCollection\",\n        geometries: features.map( ({geometry}) => geometry)\n    };\n};\n/**\n * Return the viewport geometry from the view bounds\n * @param bounds {object} bounds {minx, miny, maxx, maxy}\n * @param projection {string} the projection of bounds coordinates\n * @return {object} geometry {type, radius, projection, coordinates, extent, center}\n */\nexport const getViewportGeometry = (bounds, projection) => {\n    if (head(supportedSplitExtentEPSG.filter(epsg => epsg === projection))) {\n        const {extent, isIDL} = getExtentFromNormalized(bounds, projection);\n\n        const extentToCoordinates = isIDL ? extent : [extent];\n\n        const coordinates = extentToCoordinates.map(ext => {\n            const start = [ext[0], ext[1]];\n            const end = [ext[2], ext[3]];\n            return [[start, [start[0], end[1]], end, [end[0], start[1]], start]];\n        });\n\n        if (isIDL) {\n\n            let centerX = extent[1][0] + (Math.abs(extent[0][0] - extent[0][2]) + Math.abs(extent[1][0] - extent[1][2])) / 2;\n            centerX = centerX > 180 ? centerX - 360 : centerX;\n\n            return {\n                type: 'MultiPolygon',\n                radius: 0,\n                projection,\n                coordinates,\n                extent,\n                center: [centerX, (extent[0][1] + extent[0][3]) / 2]\n            };\n        }\n\n        return {\n            type: 'Polygon',\n            radius: 0,\n            projection,\n            coordinates: coordinates[0],\n            extent,\n            center: [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2]\n        };\n    }\n\n    const extent = [bounds.minx, bounds.miny, bounds.maxx, bounds.maxy];\n    const center = [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n    const start = [extent[0], extent[1]];\n    const end = [extent[2], extent[3]];\n    const coordinates = [[start, [start[0], end[1]], end, [end[0], start[1]], start]];\n\n    return {\n        type: 'Polygon',\n        radius: 0,\n        projection,\n        coordinates,\n        extent,\n        center\n    };\n};\n/**\n * Get wider and valid extent in viewport\n * @private\n * @param bbox {object} viewport bbox\n * @param bbox.bounds {object} bounds of bbox {minx, miny, maxx, maxy}\n * @param bbox.crs {string} bbox crs\n * @param dest {string} SRS of the returned extent\n * @return {array} [ minx, miny, maxx, maxy ]\n */\nexport const getExtentFromViewport = ({ bounds, crs } = {}, dest = 'EPSG:4326') => {\n    if (!bounds || !crs) return null;\n    const { extent } = CoordinatesUtils.getViewportGeometry(bounds, crs);\n    if (extent.length === 4) {\n        return CoordinatesUtils.reprojectBbox(extent, crs, dest);\n    }\n    const [ rightExtentWidth, leftExtentWidth ] = extent.map((bbox) => bbox[2] - bbox[0]);\n    return rightExtentWidth > leftExtentWidth\n        ? CoordinatesUtils.reprojectBbox(extent[0], crs, dest)\n        : CoordinatesUtils.reprojectBbox(extent[1], crs, dest);\n};\n/**\n * @param crs in the form EPSG:4326\n * @return {Object} a promise for fetching the proj4 definition\n */\nexport const fetchProjRemotely = (crs, url) => {\n    const EPSG = crs.split(\":\").length === 2 ? crs.split(\":\")[1] : \"3857\";\n    return axios.get(url || getProjUrl(EPSG), null, {\n        timeout: 2000\n    });\n};\n/**\n * Parse the URN to get EPSG code\n * @param {object|string} crs object or string\n * @return {string} EPSG in the form EPSG:NNNN\n */\nexport const parseURN = (crs) => {\n    const code = crs && crs.properties && crs.properties.name || crs && crs.name || crs && crs.properties && crs.properties.code || crs;\n\n    let crsCode = code && last(code.split(\":\"));\n\n    if (crsCode === \"WGS 1984\" || crsCode === \"WGS84\") {\n        return \"EPSG:4326\";\n    } else if (crsCode) {\n        // TODO check is valid EPSG code\n        return \"EPSG:\" + crsCode;\n    }\n    return null;\n};\nexport const parseString = (str) => {\n    const coord = str.split(' ');\n    const x = parseFloat(coord[0]);\n    const y = parseFloat(coord[1]);\n    return !isNaN(x) && !isNaN(y) && {x, y} || null;\n};\nexport const getWMSBoundingBox = (BoundingBox, mapSRS) => {\n    const SRS = mapSRS || 'EPSG:3857';\n    const bbox = BoundingBox && isArray(BoundingBox) && head(BoundingBox.filter(b => {\n        return b && b.$ && b.$.SRS === SRS && b.$.maxx && b.$.maxy && b.$.minx && b.$.miny;\n    }).map(b => b && b.$ && CoordinatesUtils.reprojectBbox([\n        parseFloat(b.$.minx),\n        parseFloat(b.$.miny),\n        parseFloat(b.$.maxx),\n        parseFloat(b.$.maxy)\n    ], SRS, 'EPSG:4326')));\n    return isArray(bbox) && {minx: bbox[0], miny: bbox[1], maxx: bbox[2], maxy: bbox[3]} || null;\n};\nexport const isSRSAllowed = (srs) => {\n    return !!Proj4js.defs(srs);\n};\n/**\n * Return normalized latitude and longitude\n * @param coords {object} coordinates {lat, lng}\n * @return {object} {lat, lng}\n */\nexport const getNormalizedLatLon = ({lng = 1, lat = 1}) => {\n    return {\n        lat: lat,\n        lng: CoordinatesUtils.normalizeLng(lng)\n    };\n};\n/**\n * Return true if coordinates are inside of visible area\n * @param coords {object} coordinates {lat, lng}\n * @param map {object} must contain present map\n * @param layout {object} current layout on map {bottom, top, left, right}\n * @param resolution {number} resolutions of current map zoom\n * @return {bool}\n */\nexport const isInsideVisibleArea = (coords, map, layout = {}, resolution = 0) => {\n\n    const normalizedCoords = CoordinatesUtils.getNormalizedLatLon(coords);\n    const reprojectedCoords = reproject([normalizedCoords.lng, normalizedCoords.lat], 'EPSG:4326', map.projection);\n    if (!map.bbox) {\n        return false;\n    }\n    const bbox = CoordinatesUtils.reprojectBbox(map.bbox.bounds, map.bbox.crs, map.projection);\n\n    const layoutBounds = {\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0,\n        ...layout\n    };\n\n    const visibleExtent = {\n        minx: bbox[0] + layoutBounds.left * resolution,\n        miny: bbox[1] + layoutBounds.bottom * resolution,\n        maxx: bbox[2] - layoutBounds.right * resolution,\n        maxy: bbox[3] - layoutBounds.top * resolution\n    };\n\n    const splittedView = CoordinatesUtils.getViewportGeometry(visibleExtent, map.projection);\n    const views = splittedView.extent.length === 4 ? [[...splittedView.extent]] : [...splittedView.extent];\n\n    return head(views.map(extent =>\n        reprojectedCoords.x >= extent[0]\n        && reprojectedCoords.y >= extent[1]\n        && reprojectedCoords.x <= extent[2]\n        && reprojectedCoords.y <= extent[3])\n        .filter(val => val)) || false;\n};\n/**\n * Return new center position based of visible area\n * @param center {object} new visible center {lat, lng}\n * @param map {object} must contain present map\n * @param layout {object} current layout on map {bottom, top, left, right}\n * @param resolution {number} resolutions of current map zoom\n * @return {object} {pos, zoom, crs}\n */\nexport const centerToVisibleArea = (center, map, layout = {}, resolution = 0) => {\n\n    const normalizedCoords = CoordinatesUtils.getNormalizedLatLon(center);\n    const reprojectedCoords = reproject([normalizedCoords.lng, normalizedCoords.lat], 'EPSG:4326', map.projection);\n\n    const layoutBounds = {\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0,\n        ...layout\n    };\n\n    const visibleSize = {\n        width: (map.size.width - layoutBounds.right - layoutBounds.left) * resolution,\n        height: (map.size.height - layoutBounds.top - layoutBounds.bottom) * resolution\n    };\n\n    const mapExtent = {\n        minx: reprojectedCoords.x - visibleSize.width / 2 - layoutBounds.left * resolution,\n        miny: reprojectedCoords.y - visibleSize.height / 2 - layoutBounds.bottom * resolution,\n        maxx: reprojectedCoords.x + visibleSize.width / 2 + layoutBounds.right * resolution,\n        maxy: reprojectedCoords.y + visibleSize.height / 2 + layoutBounds.top * resolution\n    };\n\n    const splittedView = CoordinatesUtils.getViewportGeometry(mapExtent, map.projection);\n\n    if (splittedView.extent.length === 4) {\n        return {\n            pos: reproject([splittedView.extent[0] + map.size.width / 2 * resolution, splittedView.extent[1] + map.size.height / 2 * resolution], map.projection, 'EPSG:4326'),\n            zoom: map.zoom,\n            crs: 'EPSG:4326'\n        };\n    }\n\n    if (Math.abs(splittedView.extent[0][2] - splittedView.extent[0][0]) > Math.abs(splittedView.extent[1][2] - splittedView.extent[1][0])) {\n        const pos = reproject([splittedView.extent[0][2] - map.size.width / 2 * resolution, splittedView.extent[0][3] - map.size.height / 2 * resolution], map.projection, 'EPSG:4326');\n        const adjustedPos = {...pos, x: pos.x + (normalizedCoords.lng > pos.x ? 360 : 0)};\n        return {\n            pos: adjustedPos,\n            zoom: map.zoom,\n            crs: 'EPSG:4326'\n        };\n    }\n\n    return {\n        pos: reproject([splittedView.extent[1][0] + map.size.width / 2 * resolution, splittedView.extent[1][1] + map.size.height / 2 * resolution], map.projection, 'EPSG:4326'),\n        zoom: map.zoom,\n        crs: 'EPSG:4326'\n    };\n};\nexport const calculateCircleRadiusFromPixel = (coordinatesFromPixelConverter, pixel = {}, center = [], pixelRadius, defaultRadius = 0.01) => {\n    const radiusA = isArray(center) ? center : [center.x, center.y];\n\n    if (isNumber(radiusA[0]) && !isNaN(radiusA[0]) &&\n        isNumber(radiusA[1]) && !isNaN(radiusA[1]) &&\n        isNumber(pixel.x) && !isNaN(pixel.x) &&\n        isNumber(pixel.y) && !isNaN(pixel.y)) {\n        const pixelCoords = isFunction(coordinatesFromPixelConverter) ? coordinatesFromPixelConverter([\n            pixel.x,\n            pixel.y >= pixelRadius ? pixel.y - pixelRadius : pixel.y + pixelRadius\n        ]) : null;\n        const radiusB = pixelCoords && (isArray(pixelCoords) ? pixelCoords : [pixelCoords.x, pixelCoords.y]);\n\n        return isArray(radiusB) ? Math.sqrt((radiusA[0] - radiusB[0]) * (radiusA[0] - radiusB[0]) +\n            (radiusA[1] - radiusB[1]) * (radiusA[1] - radiusB[1])) :\n            defaultRadius;\n    }\n\n    return defaultRadius;\n};\n/**\n * choose to round or floor value incase of 0 fractional digits\n * @return {number} the rounded value or the original one\n */\nexport const roundCoord = ({ roundingBehaviour = \"round\", value = 0, maximumFractionDigits = 0 } = {}) => {\n    if (maximumFractionDigits === 0 && Math[roundingBehaviour]) {\n        return Math[roundingBehaviour](value);\n    }\n    return value;\n};\nexport const midpoint = (p1, p2, returnArray = false) => {\n    const pObj1 = isArray(p1) ? {x: p1[0], y: p1[1]} : p1;\n    const pObj2 = isArray(p2) ? {x: p2[0], y: p2[1]} : p2;\n    const result = {x: 0.5 * (pObj1.x + pObj2.x), y: 0.5 * (pObj1.y + pObj2.y)};\n\n    return returnArray ? [result.x, result.y] : result;\n};\nexport const pointObjectToArray = p => isObject(p) && isNumber(p.x) && isNumber(p.y) ? [p.x, p.y] : p;\n\n\nexport const isPointInsideExtent = (point = {lat: 1, lng: 1}, extent) => {\n    return contains(getPolygonFromExtent(extent), toPoint([point.lng, point.lat]));\n};\nexport const isBboxCompatible = (extent1, extent2) => overlap(extent1, extent2) || contains(extent1, extent2) || contains(extent2, extent1);\nexport const extractCrsFromURN = (urnString) => {\n    if (urnString) {\n        const parts = urnString.split(':');\n\n        const validURN = parts[0] === 'urn' &&\n            (parts[1] === 'ogc' || parts[1] === 'x-ogc') &&\n            parts[2] === 'def' &&\n            parts[3] === 'crs' &&\n            (!!parts[4] || !!parts[6]);\n\n        if (validURN) {\n            const authority = parts[4];\n            const code = parts[6];\n\n            return authority ? `${authority}:${code}` : code;\n        }\n    }\n\n    return null;\n};\nexport const makeNumericEPSG = (epsg) => {\n    if (!epsg || epsg.slice(0, 5) !== 'EPSG:') {\n        return null;\n    }\n\n    const epsgCode = epsg.slice(5);\n    const epsgCodeNum = parseInt(epsgCode, 10);\n\n    if (epsgCodeNum >= 1024 && epsgCodeNum <= 32767) {\n        return epsg;\n    }\n\n    const epsgCodeNormalized = epsgCode.replace(' ', '').replace(':', '').toLowerCase();\n    const epsgCodeNewNum = crsCodeTable[epsgCodeNormalized];\n\n    if (epsgCodeNewNum >= 1024 && epsgCodeNewNum <= 32767) {\n        return `EPSG:${epsgCodeNewNum}`;\n    }\n\n    return null;\n};\nexport const makeBboxFromOWS = (lcOWS, ucOWS) => {\n    let lc = [lcOWS[0], lcOWS[1]];\n    let uc = [ucOWS[0], ucOWS[1]];\n\n    // lower is actually upper?\n    if (lc[1] > uc[1]) {\n        const t = lc;\n        lc = uc;\n        uc = t;\n    }\n\n    // lower right upper left instead of lower left upper right?\n    if (lc[0] > uc[0]) {\n        const lcOld = lc.slice();\n        const ucOld = uc.slice();\n\n        lc = [ucOld[0], lcOld[1]];\n        uc = [lcOld[0], ucOld[1]];\n    }\n\n    return [lc[0], lc[1], uc[0], uc[1]];\n};\n\n\n/**\n * helper use to create a geojson Feature with a Polygon geometry\n * starting from circle data\n * @see https://turfjs.org/docs/#circle\n * @param {number[]} center in the form of [x, y]\n * @param {number} radius\n * @param {string} [units=\"degrees\"] the unit measure\n * @param {number} [steps=100] number of vertices of the polygon\n */\nexport const getPolygonFromCircle = (center, radius, units = \"degrees\", steps = 100) => {\n    if (!center || !radius) {\n        return null;\n    }\n    return turfCircle(center, radius, {steps, units});\n};\n\n/**\n * Returns an array of projections\n * @return {array} of projection Definitions [{code, extent}]\n */\nexport const getProjections = () => {\n    const projections = (getConfigProp('projectionDefs') || []).concat([{code: \"EPSG:3857\", extent: [-20026376.39, -20048966.10, 20026376.39, 20048966.10]},\n        {code: \"EPSG:4326\", extent: [-180, -90, 180, 90]}\n    ]);\n    return projections;\n};\n\n/**\n * Return a projection from a list of projections\n * @param code {string} code for the projection EPSG:3857\n * @return {object} {extent, code} fallsback to default {extent: [-20026376.39, -20048966.10, 20026376.39, 20048966.10]}\n */\nexport const getExtentForProjection = (code = \"EPSG:3857\") => {\n    return getProjections().find(project => project.code === code) || {extent: [-20026376.39, -20048966.10, 20026376.39, 20048966.10]};\n};\n\n/**\n * Return a boolean to show if a layer fits within a boundary/extent\n * @param layer {object} to check if fits with in a projection boundary\n * @return {boolean} true or false\n */\nexport const checkIfLayerFitsExtentForProjection = (layer = {}) => {\n    const crs = layer.bbox?.crs || \"EPSG:3857\";\n    const [crsMinX, crsMinY, crsMaxX, crsMaxY] = getExtentForProjection(crs).extent;\n    const [minx, minY, maxX, maxY] = turfBbox({type: 'FeatureCollection', features: layer.features || []});\n    return ((minx >= crsMinX) && (minY >= crsMinY) && (maxX <= crsMaxX) && (maxY <= crsMaxY));\n};\n\n/**\n * Generates longitude and latitude value from the point\n * @param {object} point with latlng data\n * @return {array} corrected longitude and latitude\n */\nexport const getLonLatFromPoint = (point) => {\n    const latlng = point && point.latlng || null;\n    let lngCorrected = null;\n    /* lngCorrected is the converted longitude in order to have the value between\n         * the range (-180 / +180).\n         * Precision has to be >= than the coordinate editor precision\n         * especially in the case of aeronautical degree editor which is 12\n    */\n    if (latlng) {\n        lngCorrected = latlng && Math.round(latlng.lng * 100000000000000000) / 100000000000000000;\n        lngCorrected = lngCorrected - 360 * Math.floor(lngCorrected / 360 + 0.5);\n    }\n    return [lngCorrected, latlng && latlng.lat];\n};\n\nCoordinatesUtils = {\n    setCrsLabels,\n    getUnits,\n    reproject,\n    getProjectedBBox,\n    createBBox,\n    reprojectGeoJson,\n    lineIntersectPolygon,\n    normalizePoint,\n    normalizeLng,\n    reprojectBbox,\n    getCompatibleSRS,\n    getEquivalentSRS,\n    getEPSGCode,\n    normalizeSRS,\n    isAllowedSRS,\n    getAvailableCRS,\n    filterCRSList,\n    calculateAzimuth,\n    calculateDistance,\n    FORMULAS,\n    extendExtent,\n    getGeoJSONExtent,\n    isValidExtent,\n    calculateCircleCoordinates,\n    transformLineToArcs,\n    transformArcsToLine,\n    coordsOLtoLeaflet,\n    mergeToPolyGeom,\n    getViewportGeometry,\n    getProjUrl,\n    getExtentFromViewport,\n    fetchProjRemotely,\n    parseURN,\n    determineCrs,\n    parseString,\n    getWMSBoundingBox,\n    isSRSAllowed,\n    getNormalizedLatLon,\n    isInsideVisibleArea,\n    centerToVisibleArea,\n    calculateCircleRadiusFromPixel,\n    roundCoord,\n    midpoint,\n    pointObjectToArray,\n    getExtentFromNormalized,\n    getPolygonFromExtent,\n    isPointInsideExtent,\n    isBboxCompatible,\n    extractCrsFromURN,\n    crsCodeTable,\n    makeNumericEPSG,\n    makeBboxFromOWS,\n    getPolygonFromCircle,\n    checkIfLayerFitsExtentForProjection,\n    getLonLatFromPoint\n};\nexport default CoordinatesUtils;\n","import axios from \"axios\";\r\n\r\n// 向capital表插入数据\r\nexport const insertCapital = p => {\r\n  return axios.post('capital/insert', p)\r\n};\r\n\r\n// 查询capital表中所有数据\r\nexport const getCapital = () => {\r\n  return axios.get('capital/all')\r\n};\r\n\r\n\r\n","// 创建工作空间\r\nimport axios from \"axios\";\r\n\r\n//Geoserver配置服务的url,用户名，密码\r\nexport const addWorkspace = p => {\r\n  return axios.post('config/geoserver', p)\r\n};\r\n\r\nexport const getTableInfo = p => {\r\n  return axios.post('config/postgis', p)\r\n};\r\n","import axios from \"axios\";\r\n\r\nexport const getGdbLayers = () => {\r\n  return axios.get('gdb/layers')\r\n};\r\n\r\nexport const getCalculate = () => {\r\n  return axios.get('gdb/calculate')\r\n};\r\n","import axios from \"axios\";\r\n\r\nexport const getWmsMap = p => {\r\n  return axios.get('geotools/wms', {params:p})\r\n};\r\n","import axios from \"axios\";\r\n\r\n// 按名称查询\r\nexport const getLayerEdit = p => {\r\n  return axios.get('layer_edit/query', {params:p})\r\n};\r\n\r\n// 添加新数据\r\nexport const addLayerEdit = p => {\r\n  return axios.get('layer_edit/add', {params:p})\r\n};\r\n\r\n// 更新数据\r\nexport const updateLayerEdit = p => {\r\n  return axios.post('layer_edit/update', p)\r\n};\r\n","import axios from \"axios\";\r\n\r\n// 获取所有工作空间\r\nexport const getWorkspaceNames = () => {\r\n  return axios.get('mapinfo/workspacenames')\r\n};\r\n\r\n// 获取所有数据存储\r\nexport const getDatastores = () => {\r\n  return axios.get('mapinfo/datastores')\r\n};\r\n\r\n// 获取所有图层名称和标题\r\nexport const getLayersInfo = () => {\r\n  return axios.get('mapinfo/layers')\r\n};\r\n\r\n// 获取指定图层信息\r\nexport const getLayerInfo = p => {\r\n  return axios.get('mapinfo/layer', {params:p})\r\n};\r\n\r\n// 获取所有样式名称\r\nexport const getStyles1 = () => {\r\n  return axios.get('mapinfo/styles/1')\r\n};\r\n\r\n// 指定工作空间获取所有样式名称\r\nexport const getStyles2 = p => {\r\n  return axios.get('mapinfo/styles/2', {params:p})\r\n};\r\n\r\n// 获取指定样式的SLD\r\nexport const getSLD = p => {\r\n  return axios.get('mapinfo/sld', {params:p})\r\n};\r\n","// 获取指定表数据\r\nimport axios from \"axios\";\r\n\r\n// 获取矢量切片\r\nexport const getMVT = (z,x,y) => {\r\n  return axios.get(`mvt_test/${z}/${x}/${y}.pbf`)\r\n};\r\n\r\n// 缓存矢量切片\r\nexport const cacheMVT = p => {\r\n  return axios.get('mvt_test/cache', {params:p})\r\n};\r\n","import axios from \"axios\";\r\n\r\n// 创建工作空间\r\nexport const addWorkspace = p => {\r\n  return axios.post('publish/workspace', p)\r\n};\r\n\r\n// 删除工作空间\r\nexport const delWorkspace = p => {\r\n  return axios.delete('publish/workspace', {params:p})\r\n};\r\n\r\n// 发布样式\r\nexport const addStyle1 = p => {\r\n  return axios.post('publish/style/1', p)\r\n};\r\n\r\n//发布指定类型的默认样式\r\nexport const addDefStyle = p => {\r\n  return axios.post('publish/defaultstyle/1', p)\r\n};\r\n\r\n// 指定工作空间创建样式\r\nexport const addStyle2 = p => {\r\n  return axios.post('publish/style/2', p)\r\n};\r\n\r\n// 指定工作空间创建默认样式\r\nexport const addDefStyle2 = p => {\r\n  return axios.post('publish/defaultstyle/2', p)\r\n};\r\n\r\n// 修改样式\r\nexport const updateStyle = p => {\r\n  return axios.put('publish/style', p)\r\n};\r\n\r\n// 删除样式\r\nexport const delStyle = p => {\r\n  return axios.delete('publish/style', {params:p})\r\n};\r\n\r\n// 发布shp图层并自动创建样式\r\nexport const addShpLayer1 = (t, p) => {\r\n  return axios.post(`publish/shplayer/${t}`, p)\r\n};\r\n\r\n// 发布shp图层\r\nexport const addShpLayer2 = p => {\r\n  return axios.post('publish/shplayer2', p)\r\n};\r\n\r\n// 发布PostGIS图层并自动创建样式\r\nexport const addPostGISLayer1 = (t, p) => {\r\n  return axios.post(`publish/postgislayer/${t}`, p)\r\n};\r\n\r\n// 发布PostGIS图层\r\nexport const addPostGISLayer2 = p => {\r\n  return axios.post('publish/postgislayer2', p)\r\n};\r\n\r\n// 修改矢量数据存储编码格式\r\nexport const updateDataStore = p => {\r\n  return axios.put('publish/datastore', p)\r\n};\r\n\r\n// 指定工作空间删除指定数据存储\r\nexport const delDataStore = p => {\r\n  return axios.delete('publish/datastore', {params:p})\r\n};\r\n\r\n// 更新图层信息\r\nexport const updateLayer = p => {\r\n  return axios.put('publish/layer', p)\r\n};\r\n\r\n// 指定图层名称删除图层\r\nexport const delLayer = p => {\r\n  return axios.delete('publish/layer', {params:p})\r\n};\r\n","import axios from \"axios\";\r\n\r\n// 指定样式名称修改\r\nexport const changeStyleByStyleName = (n, p) => {\r\n  return axios.post(`style/1/${n}`, p)\r\n};\r\n\r\n// 修改指定图层的样式\r\nexport const changeStyleByLayerName = (n, p) => {\r\n  return axios.post(`style/2/${n}`, p)\r\n};\r\n\r\n// 根据样式名称获取样式参数\r\nexport const getStyleValueByStyleName = p => {\r\n  return axios.get(`style/getvalue/1`, {params:p})\r\n};\r\n\r\n// 根据图层获取样式参数\r\nexport const getStyleValueByLayerName = p => {\r\n  return axios.get(`style/getvalue/2`, {params:p})\r\n};\r\n\r\n// 指定样式更改为默认样式\r\nexport const changeDefaultStyle = p => {\r\n  return axios.post(`style/default`, p)\r\n};\r\n","import axios from \"axios\";\r\n\r\n// 获取表名\r\nexport const getTablesInfo = () => {\r\n  return axios.get('pgedit/table')\r\n};\r\n\r\n// 获取指定表数据\r\nexport const getTableData = p => {\r\n  return axios.post('pgedit/data', p)\r\n};\r\n\r\n// 查询指定表数据\r\nexport const findTableData = p => {\r\n  return axios.post('pgedit/find', p)\r\n};\r\n\r\n// 添加表数据\r\nexport const addTableData = p => {\r\n  return axios.post('pgedit/add', p)\r\n};\r\n\r\n// 更新表数据\r\nexport const updateTableData = p => {\r\n  return axios.post('pgedit/update', p)\r\n};\r\n\r\n// 删除表数据\r\nexport const delTableData = p => {\r\n  return axios.post('pgedit/delete', p)\r\n};\r\n","import axios from \"axios\";\r\n\r\n// 空间关系\r\nexport const relationAnalysis = p => {\r\n  return axios.get('spa/relation', {params:p})\r\n};\r\n\r\n// 叠加分析\r\nexport const interAnalysis = p => {\r\n  return axios.get('spa/inter', {params:p})\r\n};\r\n\r\n// 合并分析\r\nexport const unionAnalysis = p => {\r\n  return axios.get('spa/union', {params:p})\r\n};\r\n\r\n// 差异分析\r\nexport const diffAnalysis = p => {\r\n  return axios.get('spa/diff', {params:p})\r\n};\r\n\r\n// Sym差异分析\r\nexport const symDiffAnalysis = p => {\r\n  return axios.get('spa/symdiff', {params:p})\r\n};\r\n\r\n// 缓冲区分析\r\nexport const buffAnalysis = p => {\r\n  return axios.get('spa/buff', {params:p})\r\n};\r\n","import axios from \"axios\";\r\n\r\nexport const getUniversity = p => {\r\n  return axios.get('university/get', {params:p})\r\n};\r\n","import axios from \"axios\";\r\n\r\nexport const uploadFile = (p, c) => {\r\n  return axios.post('upload', p, c)\r\n};\r\n","/**\n * Copyright 2016, GeoSolutions Sas.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport axios from 'axios';\nimport urlUtil from 'url';\nimport assign from 'object-assign';\nimport WFS from \"ol/format/wfs\";\nimport Feature from \"ol/feature\";\nimport GeoJSON from \"ol/format/geojson\";\nimport {formatDate, getLikeSQL, getRequestAll} from \"@/utils/searchUtils\";\n\nexport const toDescribeURL = (url, typeName) => {\n    const parsed = urlUtil.parse(url, true);\n    return urlUtil.format(\n        {\n            ...parsed,\n            search: undefined, // this allows to merge parameters correctly\n            query: {\n                ...parsed.query,\n                service: \"WFS\",\n                version: \"1.1.0\",\n                typeName,\n                outputFormat: 'application/json',\n                request: \"DescribeFeatureType\"\n            }\n        });\n};\n/**\n * Simple getFeature using http GET method with json format\n */\nexport const getFeatureSimple = function(baseUrl, params) {\n    return axios.get(baseUrl + 'geoserver/wfs?service=WFS&version=1.1.0&request=GetFeature', {\n        params: assign({\n            outputFormat: \"application/json\"\n        }, params)\n    }).then((response) => {\n        if (typeof response.data !== 'object') {\n            return JSON.parse(response.data);\n        }\n        return response.data;\n    });\n};\n\nexport const getCapabilitiesURL = (url, {version = \"1.1.0\"} = {}) => {\n    const parsed = urlUtil.parse(url, true);\n    return urlUtil.format(assign({}, parsed, {\n        query: assign({\n            service: \"WFS\",\n            version,\n            request: \"GetCapabilities\"\n        }, parsed.query)\n    }));\n};\n\nexport const getFeatureURL = (url, typeName, { version = \"1.1.0\", ...params } = {}) => {\n    const parsed = urlUtil.parse(url, true);\n    return urlUtil.format(assign({}, parsed, {\n        query: assign({\n            service: \"WFS\",\n            typeName,\n            version,\n            request: \"GetFeature\",\n            ...params\n        }, parsed.query)\n    }));\n};\n\nexport const getJsonFeatureURL = (url, typeName, params) => {\n    axios.defaults.headers.post[\"Content-Type\"] = \"text/xml\";\n    let param = {\n        pageNum: params.pageNum || 0,\n        pageSize: params.pageSize || 20,\n        name: params.name || '',\n        crs: params.crs || 'EPSG:3857'\n    };\n    let xml = '<wfs:GetFeature xmlns:wfs=\"http://www.opengis.net/wfs\" xmlns:gml=\"http://www.opengis.net/gml\" xmlns:ogc=\"http://www.opengis.net/ogc\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" service=\"WFS\" version=\"1.1.0\" xsi:schemaLocation=\"http://www.opengis.net/wfs http://schemas.opengis.net/wfs/1.1.0/wfs.xsd\" ' +\n        '  startIndex=\"' + (param.pageNum - 1) * param.pageSize + '\" maxFeatures=\"' + param.pageSize + '\">' +\n        '  <wfs:Query typeName=\"' + typeName + '\" srsName=\"' + param.crs + '\">' +\n        '    <wfs:SortBy>' +\n        '      <wfs:SortProperty>' +\n        '        <ogc:PropertyName>' + param.name + '</ogc:PropertyName>' +\n        '        <wfs:SortOrder>A</wfs:SortOrder>' +\n        '      </wfs:SortProperty>' +\n        '    </wfs:SortBy>' +\n        '    <ogc:Filter>' +\n        '      <ogc:And>undefined</ogc:And>' +\n        '    </ogc:Filter>' +\n        '  </wfs:Query>' +\n        '</wfs:GetFeature>';\n    return axios.post(url + '?outputFormat=json', xml).then((response) => {\n        if (response.data instanceof Object) {\n            return response.data;\n        } else return undefined;\n    })\n}\n\nexport const getFeature = (url, typeName, params ) => {\n    return axios.get(getFeatureURL(url+'geoserver/wfs', typeName, params));\n};\n\nexport const getJsonFeature = (url, typeName, params ) => {\n    return getJsonFeatureURL(url+'geoserver/wfs', typeName, params);\n};\n\nexport const getCapabilities = function(url) {\n    return axios.get(getCapabilitiesURL(url+'geoserver/wfs'));\n};\n\nexport const describeFeatureType = function(url, typeName) {\n    return axios.get(toDescribeURL(url+'geoserver/wfs', typeName)).then(({data}) => data);\n};\n\n\nconst postResult = (params) => {\n  // 1、构造Feature\n  let ft = new GeoJSON().readFeature(params.geoJson);\n  ft.setId(params.row.id)\n  let options = {\n    featureNS: params.typeName.split(\":\")[0], //工作空间名称\n    featureType: params.typeName.split(\":\")[1], //图层名称\n    srsName: \"EPSG:3857\"\n  };\n  delete params.row._X_ROW_KEY\n  delete params.row.id\n  ft.setProperties(params.row);\n  let geom = ft.getGeometry()\n  // 避免出现报错PointOutsideEnvelopeException: 1 outside of (-90.0,90\n  // 进行经纬度调换\n  geom.applyTransform((flatCoordinates, flatCoordinates2, stride) => {\n    for (let j = 0; j < flatCoordinates.length; j += stride) {\n      let y = flatCoordinates[j]\n      let x = flatCoordinates[j + 1]\n      flatCoordinates[j] = x\n      flatCoordinates[j + 1] = y\n    }\n  })\n  ft.setGeometryName(params.geomField)\n  ft.setGeometry(geom)\n  return {\n    ft:ft,\n    options:options\n  }\n}\n\nexport const addFeatureByWfs = function (url, typeName, fields, row){\n  const result = postResult(typeName, fields, row)\n  // 2、更新到后台\n  let featObject = new WFS().writeTransaction([result.ft],\n    null, null, result.options )\n  let serializer = new XMLSerializer()\n  let featString = serializer.serializeToString(featObject);\n  return axios.post(url + 'geoserver/wfs?',\n    featString,\n    {\n      headers: {\n        //根据接扣文档需要加的请求头\n        \"Content-Type\": \"application/xml\"\n      }\n    })\n}\n\nexport const updateFeatureByWfs = function (url, params){\n  const result = postResult(params)\n  // 2、更新到后台\n  let featObject = new WFS().writeTransaction(null,\n    [result.ft], null, result.options )\n  let serializer = new XMLSerializer()\n  let featString = serializer.serializeToString(featObject);\n  return axios.post(url + 'geoserver/wfs?',\n    featString,\n    {\n      headers: {\n        //根据接扣文档需要加的请求头\n        \"Content-Type\": \"application/xml\"\n      }\n    })\n}\n\nexport const deleteFeatureByWfs = function (url, typeName, fields, row){\n  const result = postResult(typeName, fields, row)\n  // 2、更新到后台\n  let featObject = new WFS().writeTransaction(null,\n    null, [result.ft], result.options )\n  let serializer = new XMLSerializer()\n  let featString = serializer.serializeToString(featObject);\n  return axios.post(url + 'geoserver/wfs?',\n    featString,\n    {\n      headers: {\n        //根据接扣文档需要加的请求头\n        \"Content-Type\": \"application/xml\"\n      }\n    })\n}\n\n\n","/**\n * Copyright 2015, GeoSolutions Sas.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nlet defaultConfig = {\n    // TODO: these should be changed tp relative paths, without /mapstore/ or / (to avoid the needing of overriding in default cases)\n    proxyUrl: \"/mapstore/proxy/?url=\",\n    geoStoreUrl: \"/rest/geostore/\",\n    printUrl: \"/mapstore/print/info.json\",\n    translationsPath: \"translations\",\n    extensionsRegistry: \"extensions/extensions.json\",\n    extensionsFolder: \"extensions/\",\n    configurationFolder: \"configs/\",\n    contextPluginsConfiguration: \"configs/pluginsConfig.json\",\n    projectionDefs: [],\n    themePrefix: \"ms2\",\n    bingApiKey: null,\n    mapquestApiKey: null,\n    defaultSourceType: \"gxp_wmssource\",\n    backgroundGroup: \"background\",\n    userSessions: {\n        enabled: false\n    }\n};\n\nexport const getConfigProp = function(prop) {\n    return defaultConfig[prop];\n};\nexport const setConfigProp = function(prop, value) {\n    defaultConfig[prop] = value;\n};\nexport const removeConfigProp = function(prop) {\n    delete defaultConfig[prop];\n};\n\nconst ConfigUtils = {\n    getConfigProp,\n    setConfigProp,\n    removeConfigProp\n};\n\nexport default ConfigUtils;\n","/**\n * Copyright 2016, GeoSolutions Sas.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport urlUtil from 'url';\n\nimport { isArray, castArray, get } from 'lodash';\nimport assign from 'object-assign';\nimport xml2js from 'xml2js';\n\nimport axios from 'axios';\nimport { getConfigProp } from '@/utils/configUtils';\nimport { getWMSBoundingBox } from '@/utils/coordinatesUtils';\n\nconst capabilitiesCache = {};\n\n\nexport const parseUrl = (urls) => {\n    const url = (isArray(urls) && urls || urls.split(','))[0];\n    const parsed = urlUtil.parse(url, true);\n    return urlUtil.format(assign({}, parsed, { search: null }, {\n        query: assign({\n            service: \"WMS\",\n            version: \"1.3.0\",\n            request: \"GetCapabilities\"\n        }, parsed.query)\n    }));\n};\n\n/**\n * Extract `credits` property from layer's Attribution\n * (Web Map Service Implementation Specification OGC 01-068r3 - 7.1.4.5.9 )\n * @param {object} attribution Attribution object of WMS Capabilities (parsed with xml2js default format)\n * @return {object} an object to place in `credits` attribute of layer with the structure in the example.\n * @example\n * {\n *     title: \"content of <Title></Title>\",\n *     imageUrl: \"url of the image linked as LogoURL\",\n *     link: \"http://some.site.of.reference\",\n *     logo: { // more info about the logo\n *         format: \"image/png\",\n *         width: \"200\",\n *         height: \"100\"\n *     }\n * }\n *\n */\nexport const extractCredits = attribution => {\n    const title = attribution && attribution.Title;\n    const logo = attribution.LogoURL && {\n        ...(get(attribution, 'LogoURL.$') || {}),\n        format: get(attribution, 'LogoURL.Format') // e.g. image/png\n    };\n    const link = get(attribution, 'OnlineResource.$[\"xlink:href\"]');\n    return {\n        title,\n        logo,\n        imageUrl: get(attribution, 'LogoURL.OnlineResource.$[\"xlink:href\"]'),\n        link\n    };\n};\n\n\nexport const flatLayers = (root) => {\n    return root.Layer ? (isArray(root.Layer) && root.Layer || [root.Layer]).reduce((previous, current) => {\n        return previous.concat(flatLayers(current)).concat(current.Layer && current.Name ? [current] : []);\n    }, []) : root.Name && [root] || [];\n};\nexport const getOnlineResource = (c) => {\n    return c.Request && c.Request.GetMap && c.Request.GetMap.DCPType && c.Request.GetMap.DCPType.HTTP && c.Request.GetMap.DCPType.HTTP.Get && c.Request.GetMap.DCPType.HTTP.Get.OnlineResource && c.Request.GetMap.DCPType.HTTP.Get.OnlineResource.$ || undefined;\n};\nexport const searchAndPaginate = (json = {}, startPosition, maxRecords, text) => {\n    const root = (json.WMS_Capabilities || json.WMT_MS_Capabilities || {}).Capability;\n    const service = (json.WMS_Capabilities || json.WMT_MS_Capabilities || {}).Service;\n    const onlineResource = getOnlineResource(root);\n    const SRSList = root.Layer && (root.Layer.SRS || root.Layer.CRS)?.map((crs) => crs.toUpperCase()) || [];\n    const credits = root.Layer && root.Layer.Attribution && extractCredits(root.Layer.Attribution);\n    const rootFormats = root.Request && root.Request.GetMap && root.Request.GetMap.Format || [];\n    const layersObj = flatLayers(root);\n    const layers = isArray(layersObj) ? layersObj : [layersObj];\n    const filteredLayers = layers\n        .filter((layer) => !text || layer.Name.toLowerCase().indexOf(text.toLowerCase()) !== -1 || layer.Title && layer.Title.toLowerCase().indexOf(text.toLowerCase()) !== -1 || layer.Abstract && layer.Abstract.toLowerCase().indexOf(text.toLowerCase()) !== -1);\n    return {\n        numberOfRecordsMatched: filteredLayers.length,\n        numberOfRecordsReturned: Math.min(maxRecords, filteredLayers.length),\n        nextRecord: startPosition + Math.min(maxRecords, filteredLayers.length) + 1,\n        service,\n        layerOptions: {\n            version: (json.WMS_Capabilities || json.WMT_MS_Capabilities)?.$?.version || '1.3.0'\n        },\n        records: filteredLayers\n            .filter((layer, index) => index >= startPosition - 1 && index < startPosition - 1 + maxRecords)\n            .map((layer) => assign({}, layer, { formats: rootFormats, onlineResource, SRS: SRSList, credits: layer.Attribution ? extractCredits(layer.Attribution) : credits }))\n    };\n};\n\nexport const getDimensions = (layer) => {\n    return castArray(layer.Dimension || layer.dimension || []).map((dim, index) => {\n        const extent = (layer.Extent && castArray(layer.Extent)[index] || layer.extent && castArray(layer.extent)[index]);\n        return {\n            name: dim.$.name,\n            units: dim.$.units,\n            unitSymbol: dim.$.unitSymbol,\n            \"default\": dim.$.default || (extent && extent.$.default),\n            values: dim._ && dim.split(',') || extent && extent._ && extent.split(',')\n        };\n    });\n};\nexport const getCapabilities = (url, raw) => {\n    const parsed = urlUtil.parse(url + 'geoserver/wms', true);\n    const getCapabilitiesUrl = urlUtil.format(assign({}, parsed, {\n        query: assign({\n            service: \"WMS\",\n            version: \"1.1.1\",\n            request: \"GetCapabilities\"\n        }, parsed.query)\n    }));\n    return new Promise((resolve) => {\n        require.ensure(['@/utils/wmsUtils'], () => {\n            const { unmarshaller } = require('@/utils/wmsUtils');\n            resolve(axios.get(parseUrl(getCapabilitiesUrl)).then((response) => {\n                if (raw) {\n                    let json;\n                    xml2js.parseString(response.data, { explicitArray: false }, (ignore, result) => {\n                        json = result;\n                    });\n                    return json;\n                }\n                let json = unmarshaller.unmarshalString(response.data);\n                return json && json.value;\n            }));\n        });\n    });\n};\nexport const describeLayer = (url, layers, options = {}) => {\n    const parsed = urlUtil.parse(url + 'geoserver/wms', true);\n    const describeLayerUrl = urlUtil.format(assign({}, parsed, {\n        query: assign({\n            service: \"WMS\",\n            version: \"1.1.1\",\n            layers: layers,\n            request: \"DescribeLayer\"\n        },\n            parsed.query,\n            options.query || {})\n    }));\n    return new Promise((resolve) => {\n        require.ensure(['@/utils/wmsUtils'], () => {\n            const { unmarshaller } = require('@/utils/wmsUtils');\n            resolve(axios.get(parseUrl(describeLayerUrl)).then((response) => {\n                let json = unmarshaller.unmarshalString(response.data);\n                return json && json.value && json.value.layerDescription && json.value.layerDescription[0];\n\n            }));\n        });\n    });\n};\nexport const getRecords = (url, startPosition, maxRecords, text) => {\n    const cached = capabilitiesCache[url + 'geoserver/wms'];\n    if (cached && new Date().getTime() < cached.timestamp + (getConfigProp('cacheExpire') || 60) * 1000) {\n        return new Promise((resolve) => {\n            resolve(searchAndPaginate(cached.data, startPosition, maxRecords, text));\n        });\n    }\n    return axios.get(parseUrl(url + 'geoserver/wms')).then((response) => {\n        let json;\n        xml2js.parseString(response.data, { explicitArray: false }, (ignore, result) => {\n            json = result;\n        });\n        capabilitiesCache[url + 'geoserver/wms'] = {\n            timestamp: new Date().getTime(),\n            data: json\n        };\n        return searchAndPaginate(json, startPosition, maxRecords, text);\n    });\n};\nexport const describeLayers = (url, layers) => {\n    const parsed = urlUtil.parse(url + 'geoserver/wms', true);\n    const describeLayerUrl = urlUtil.format(assign({}, parsed, {\n        query: assign({\n            service: \"WMS\",\n            version: \"1.1.1\",\n            layers: layers,\n            request: \"DescribeLayer\"\n        }, parsed.query)\n    }));\n    return axios.get(parseUrl(describeLayerUrl)).then((response) => {\n        let decriptions;\n        xml2js.parseString(response.data, { explicitArray: false }, (ignore, result) => {\n            decriptions = result && result.WMS_DescribeLayerResponse && result.WMS_DescribeLayerResponse.LayerDescription;\n        });\n        decriptions = Array.isArray(decriptions) ? decriptions : [decriptions];\n        // make it compatible with json format of describe layer\n        return decriptions.map(desc => ({\n            ...(desc && desc.$ || {}),\n            layerName: desc && desc.$ && desc.$.name,\n            query: {\n                ...(desc && desc.query && desc.query.$ || {})\n            }\n        }));\n    });\n};\nexport const textSearch = (url, startPosition, maxRecords, text) => {\n    return getRecords(url, startPosition, maxRecords, text);\n};\nexport const parseLayerCapabilities = (capabilities, layer, lyrs) => {\n    const layers = castArray(lyrs || get(capabilities, \"capability.layer.layer\"));\n    return layers.reduce((previous, capability) => {\n        if (previous) {\n            return previous;\n        }\n        if (!capability.name && capability.layer) {\n            return parseLayerCapabilities(capabilities, layer, castArray(capability.layer));\n        } else if (layer.name.split(\":\").length === 2 && capability.name && capability.name.split(\":\").length === 2) {\n            return layer.name === capability.name && capability;\n        } else if (capability.name && capability.name.split(\":\").length === 2) {\n            return (layer.name === capability.name.split(\":\")[1]) && capability;\n        } else if (layer.name.split(\":\").length === 2) {\n            return layer.name.split(\":\")[1] === capability.name && capability;\n        }\n        return layer.name === capability.name && capability;\n    }, null);\n};\nexport const getBBox = (record, bounds) => {\n    let layer = record;\n    let bbox = (layer.EX_GeographicBoundingBox || layer.exGeographicBoundingBox || getWMSBoundingBox(layer.BoundingBox) || (layer.LatLonBoundingBox && layer.LatLonBoundingBox.$) || layer.latLonBoundingBox);\n    while (!bbox && layer.Layer && layer.Layer.length) {\n        layer = layer.Layer[0];\n        bbox = (layer.EX_GeographicBoundingBox || layer.exGeographicBoundingBox || getWMSBoundingBox(layer.BoundingBox) || (layer.LatLonBoundingBox && layer.LatLonBoundingBox.$) || layer.latLonBoundingBox);\n    }\n    if (!bbox) {\n        bbox = {\n            westBoundLongitude: -180.0,\n            southBoundLatitude: -90.0,\n            eastBoundLongitude: 180.0,\n            northBoundLatitude: 90.0\n        };\n    }\n    const catalogBounds = {\n        extent: [\n            bbox.westBoundLongitude || bbox.minx,\n            bbox.southBoundLatitude || bbox.miny,\n            bbox.eastBoundLongitude || bbox.maxx,\n            bbox.northBoundLatitude || bbox.maxy\n        ],\n        crs: \"EPSG:4326\"\n    };\n    if (bounds) {\n        return {\n            crs: catalogBounds.crs,\n            bounds: {\n                minx: catalogBounds.extent[0],\n                miny: catalogBounds.extent[1],\n                maxx: catalogBounds.extent[2],\n                maxy: catalogBounds.extent[3]\n            }\n        };\n    }\n    return catalogBounds;\n};\nexport const reset = () => {\n    Object.keys(capabilitiesCache).forEach(key => {\n        delete capabilitiesCache[key];\n    });\n};\n","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{attrs:{\"id\":\"app\"}},[_c('router-view')],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div id=\"app\">\r\n    <router-view></router-view>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\n\r\nexport default {\r\n  name: 'app'\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>\r\n","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=17dd3cbf&\"\nimport script from \"./App.vue?vue&type=script&lang=js&\"\nexport * from \"./App.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Vue from 'vue'\r\nimport Router from 'vue-router'\r\n\r\n//路由懒加载\r\nconst Login = () => import('../components/Login')\r\nconst Home = () => import('../components/Home')\r\nconst Welcome = () => import('../components/Welcome')\r\n//OpenLayers\r\nconst ClickHighlight = () => import('../components/openlayers/ClickHighlight')\r\nconst ClikLatLon = () => import('../components/openlayers/ClikLatLon')\r\nconst LayerCheckBox = () => import('../components/openlayers/LayerCheckBox')\r\nconst LayerEcharts = () => import('../components/openlayers/LayerEcharts')\r\nconst LayerEdit = () => import('../components/openlayers/LayerEdit')\r\nconst LayerLink = () => import('../components/openlayers/LayerLink')\r\nconst LayerSwitch = () => import('../components/openlayers/LayerSwitch')\r\nconst PostPoint = () => import('../components/openlayers/PostPoint')\r\nconst ShowCollege = () => import('../components/openlayers/ShowCollege')\r\nconst ShowGeoJSON = () => import('../components/openlayers/ShowGeoJSON')\r\nconst ShowPopup = () => import('../components/openlayers/ShowPopup')\r\nconst ShowWKT = () => import('../components/openlayers/ShowWKT')\r\nconst TargetView = () => import('../components/openlayers/TargetView')\r\nconst WebGISUI = () => import('../components/openlayers/WebGISUI')\r\n//Geoserver\r\nconst WMS = () => import('../components/geoserver/WMS')\r\nconst WMTS = () => import('../components/geoserver/WMTS')\r\nconst WFS = () => import('../components/geoserver/wfs/WFS')\r\nconst AddWFS = () => import('../components/geoserver/wfs/AddWFS')\r\nconst DeleteWFS = () => import('../components/geoserver/wfs/DeleteWFS')\r\nconst QueryWFS = () => import('../components/geoserver/wfs/QueryWFS')\r\nconst UpdateWFS = () => import('../components/geoserver/wfs/UpdateWFS')\r\nconst AllWFS = () => import('../components/geoserver/wfs/AllWFS')\r\nconst AllQueryWFS = () => import('../components/geoserver/wfs/AllQueryWFS')\r\n//Geoserver REST\r\nconst GeoserverRest = () => import('../components/geoserver_rest/GeoserverRest')\r\nconst TableRest = () => import('../components/geoserver_rest/table/Edit')\r\nconst EditTableRest = () => import('../components/geoserver_rest/table/EditTable')\r\nconst FeatureRest = () => import('../components/geoserver_rest/feature/Edit')\r\nconst EditFeatureRest = () => import('../components/geoserver_rest/feature/EditFeature')\r\n//MapBOX\r\nconst VectorTiles = () => import('../components/mapbox/VectorTiles')\r\n//网络分析\r\nconst BuffAnalysis = () => import('../components/analysis/BuffAnalysis')\r\nconst DiffAnalysis = () => import('../components/analysis/DiffAnalysis')\r\nconst SymDiffAnalysis = () => import('../components/analysis/SymDiffAnalysis')\r\nconst InterAnalysis = () => import('../components/analysis/InterAnalysis')\r\nconst SpaceRelation = () => import('../components/analysis/SpaceRelation')\r\nconst UnionAnalysis = () => import('../components/analysis/UnionAnalysis')\r\nconst NetAnalysis = () => import('../components/analysis/NetAnalysis')\r\n//GDAL\r\nconst ReadGdb = () => import('../components/gdal/ReadGdb')\r\n\r\nVue.use(Router)\r\n\r\nconst routes = [\r\n  //重定向\r\n  { path: '/', redirect: '/login' },\r\n  { path: '/login', component: Login },\r\n  {\r\n    path: '/home',\r\n    component: Home,\r\n    redirect: '/welcome',\r\n    //home下子路由规则\r\n    children: [\r\n      { path: '/welcome', component: Welcome },\r\n      //openlayers\r\n      { path: '/ClickHighlight', component: ClickHighlight },\r\n      { path: '/ClikLatLon', component: ClikLatLon },\r\n      { path: '/LayerCheckBox', component: LayerCheckBox },\r\n      { path: '/LayerEcharts', component: LayerEcharts },\r\n      { path: '/LayerEdit', component: LayerEdit },\r\n      { path: '/LayerLink', component: LayerLink },\r\n      { path: '/LayerSwitch', component: LayerSwitch },\r\n      { path: '/PostPoint', component: PostPoint },\r\n      { path: '/ShowCollege', component: ShowCollege },\r\n      { path: '/ShowGeoJSON', component: ShowGeoJSON },\r\n      { path: '/ShowPopup', component: ShowPopup },\r\n      { path: '/ShowWKT', component: ShowWKT },\r\n      { path: '/TargetView', component: TargetView },\r\n      { path: '/WebGISUI', component: WebGISUI },\r\n      //Geoserver\r\n      { path: '/WMS', component: WMS },\r\n      { path: '/WMTS', component: WMTS },\r\n      { path: '/WFS', component: WFS },\r\n      { path: '/AddWFS', component: AddWFS },\r\n      { path: '/DeleteWFS', component: DeleteWFS },\r\n      { path: '/QueryWFS', component: QueryWFS },\r\n      { path: '/UpdateWFS', component: UpdateWFS },\r\n      { path: '/AllWFS', component: AllWFS },\r\n      { path: '/AllQueryWFS', component: AllQueryWFS },\r\n      //Geoserver REST\r\n      { path: '/GeoserverRest', component: GeoserverRest },\r\n      {\r\n        path: '/TableRest',\r\n        component: TableRest,\r\n        //home下子路由规则\r\n        children: [\r\n          { path: '/TableRest/:name', component: EditTableRest }\r\n        ]\r\n      },\r\n      {\r\n        path: '/FeatureRest',\r\n        component: FeatureRest,\r\n        //home下子路由规则\r\n        children: [\r\n          { path: '/FeatureRest/:name', component: EditFeatureRest }\r\n        ]\r\n      },\r\n      //MapBox\r\n      { path: '/VectorTiles', component: VectorTiles },\r\n      //网络分析\r\n      { path: '/BuffAnalysis', component: BuffAnalysis },\r\n      { path: '/DiffAnalysis', component: DiffAnalysis },\r\n      { path: '/SymDiffAnalysis', component: SymDiffAnalysis },\r\n      { path: '/InterAnalysis', component: InterAnalysis },\r\n      { path: '/SpaceRelation', component: SpaceRelation },\r\n      { path: '/UnionAnalysis', component: UnionAnalysis },\r\n      { path: '/NetAnalysis', component: NetAnalysis },\r\n      //GDAL\r\n      { path: '/ReadGdb', component: ReadGdb },\r\n    ]\r\n  }\r\n]\r\n\r\nconst router = new Router({\r\n  routes\r\n})\r\n\r\n\r\n//为路由对象，添加beforeEach导航守卫\r\n//to 将要访问路径\r\n//from 从哪个路径跳转而来\r\n//next 函数 表示方向\r\nrouter.beforeEach((to, from, next) => {\r\n  //如果用户访问的登录页，直接放行\r\n  if (to.path === '/login') return next()\r\n  //从sessionStorage 中获取到保存的token值\r\n  const tokenStr = window.sessionStorage.getItem('token')\r\n  //没有token,强制跳转到登录页\r\n  if (!tokenStr) return next('/login')\r\n  next()\r\n}\r\n);\r\n\r\n\r\nexport default router\r\n","import Vue from 'vue'\r\nimport App from './App.vue'\r\nimport router from './router'\r\nimport * as API from '@/api/index'\r\n//导入全局样式表\r\nimport './assets/css/global.css'\r\n//导入VXETable\r\nimport 'xe-utils'\r\nimport VXETable from 'vxe-table'\r\nimport 'vxe-table/lib/style.css'\r\nVue.use(VXETable)\r\n//导入加载 进度条\r\nimport NProgress from 'nprogress'\r\n//导入axios\r\nimport axios from 'axios'\r\n//配置请求的根路径\r\naxios.defaults.baseURL = process.env.VUE_APP_BASE_API\r\n// 请求拦截 请求头添加token request展示进度条 NProgress.start()\r\naxios.interceptors.request.use(config=>{\r\n  NProgress.start()\r\n  config.headers.Authorization=window.sessionStorage.getItem(\"token\")\r\n  return config\r\n})\r\n//response隐藏进度条 NProgress.done()\r\naxios.interceptors.response.use(config=>{\r\n  NProgress.done()\r\n  return config\r\n})\r\nVue.prototype.$http=axios\r\nVue.prototype.$api = API;\r\nVue.prototype.$API = API;\r\n\r\nVue.config.productionTip = false\r\n\r\n//格式化时间组件\r\nVue.filter('dateFormat',function (originVal) {\r\n  const dt=new Date(originVal)\r\n\r\n  const y=dt.getFullYear()\r\n  const m=(dt.getMonth()+1+'').padStart(2,'0')\r\n  const d=(dt.getDay()+'').padStart(2,'0')\r\n\r\n  const hh=(dt.getHours()+'').padStart(2,'0')\r\n  const mm=(dt.getMinutes()+'').padStart(2,'0')\r\n  const ss=(dt.getSeconds()+'').padStart(2,'0')\r\n  return  `${y}-${m}-${d} ${hh}:${mm}:${ss}`\r\n})\r\n\r\nnew Vue({\r\n  router,\r\n  render: h => h(App)\r\n}).$mount('#app')\r\n","module.exports = _;","module.exports = VueRouter;","module.exports = Vue;","import Feature from 'ol/feature';\r\nimport VectorLayer from 'ol/layer/vector';\r\nimport TileLayer from \"ol/layer/tile\";\r\nimport XYZ from \"ol/source/xyz\";\r\nimport Vector from 'ol/source/vector';\r\nimport GeoJSON from 'ol/format/geojson';\r\nimport WFS from 'ol/format/wfs';\r\nimport Style from 'ol/style/style';\r\nimport Stroke from 'ol/style/stroke';\r\nimport Circle from 'ol/style/circle';\r\nimport Fill from 'ol/style/fill';\r\nimport Filter from 'ol/format/filter';\r\nimport Extent from 'ol/extent';\r\n\r\nlet SPACE_NAME = \"tiger\";//geoserver工作空间\r\nlet SRS_NAME = \"EPSG:4326\";//坐标系\r\n//全局存储高亮图层\r\nlet searchLayer = null\r\n//全局存储空间查询要素\r\nlet filterLayer = null\r\n//存储返回的GeoJSON数据\r\nlet GeoJSONData = null\r\n\r\n/**\r\n * poi:地名信息，landmarks:地标，roads:道路\r\n * @param i\r\n * @returns {string}\r\n * @constructor\r\n */\r\nconst TYPE = (i) => {\r\n    return {\r\n        poi: 'poi',\r\n        landmarks: 'poly_landmarks',\r\n        roads: 'tiger_roads'\r\n    }[i] || 'poi,poly_landmarks,tiger_roads';\r\n}\r\n\r\n/**\r\n * 不同图层的空间字段，和主键排序字段\r\n * @param i\r\n * @param j\r\n * @returns {*}\r\n * @constructor\r\n */\r\nconst GEOTYPE = (i, j) => {\r\n    return {\r\n        poi: ['the_geom', 'NAME', 'POI'],\r\n        poly_landmarks: ['the_geom', 'LANAME', '地标'],\r\n        tiger_roads: ['the_geom', 'NAME', '道路']\r\n    }[i][j];\r\n}\r\n\r\nconst FIELD = (i) => {\r\n    return {\r\n        NAME: 'NAME',\r\n        LANAME: 'LANAME'\r\n    }[i] || false;\r\n}\r\n\r\nconst FIELD_NAME = (i) => {\r\n    return {\r\n        NAME: 'name',\r\n        LANAME: 'name'\r\n    }[i] || false;\r\n}\r\n\r\n/**\r\n * 多个url异步请求\r\n * @param urls url数组\r\n * @param max 最大异步数量\r\n * @param callback 回调函数\r\n */\r\nconst getRequestAll = function (urls, max, callback) {\r\n    let fetchArr = [],  // 存储并发max的promise数组\r\n        i = 0;\r\n    function toFetch() {\r\n        if (i === urls.length) {   // 所有的都处理完了， 返回一个resolve\r\n            return Promise.resolve();\r\n        }\r\n        let one = fetch(urls[i++]).then(response => response.json())\r\n            .then(data => {\r\n                fetchArr.splice(fetchArr.indexOf(one), 1);\r\n                return data\r\n            })\r\n            .catch(() => {\r\n                fetchArr.splice(fetchArr.indexOf(one), 1);\r\n                return {\r\n                    crs: { properties: { name: \"urn:ogc:def:crs:EPSG::4326\" }, type: \"name\" },\r\n                    features: [],\r\n                    numberMatched: 0,\r\n                    numberReturned: 0,\r\n                    timeStamp: formatDate(new Date().getTime()),\r\n                    totalFeatures: 0,\r\n                    type: \"FeatureCollection\"\r\n                }\r\n            })\r\n        // 取出第i个url， 放入fetch里面 , 每取一次i++\r\n        fetchArr.push(one);  //将当前的promise存入并发数组中\r\n        let p = Promise.resolve();\r\n        if (fetchArr.length >= max) {\r\n            // 当并行数量达到最大后， 用race比较 第一个完成的， 然后再调用一下函数自身。\r\n            p = Promise.race(fetchArr);\r\n        }\r\n        return p.then(() => toFetch());\r\n    }\r\n    // arr循环完后， 现在fetchArr里面剩下最后max个promise对象， 使用all等待所有的都完成之后执行callback\r\n    toFetch().then(() => Promise.all(fetchArr)).then((a) => {\r\n        callback(a);\r\n    })\r\n}\r\n\r\n/**\r\n * 多个url异步请求POST\r\n * @param url BaseURL\r\n * @param body 传入请求数据 与arr一一对应\r\n * @param max 最大异步数量\r\n * @param callback 回调函数\r\n */\r\nconst postRequestAll = function (url, body, max, callback) {\r\n    let fetchArr = [],  // 存储并发max的promise数组\r\n        i = 0;\r\n\r\n    function toFetch() {\r\n        if (i === body.length) {   // 所有的都处理完了， 返回一个resolve\r\n            return Promise.resolve();\r\n        }\r\n        let one = fetch(url, {\r\n            method: 'POST',\r\n            body: body[i++],\r\n        }).then(response => response.json())\r\n            .then(data => {\r\n                fetchArr.splice(fetchArr.indexOf(one), 1);\r\n                return data\r\n            })\r\n            .catch(() => {\r\n                fetchArr.splice(fetchArr.indexOf(one), 1);\r\n                return {\r\n                    crs: { properties: { name: \"urn:ogc:def:crs:EPSG::4326\" }, type: \"name\" },\r\n                    features: [],\r\n                    numberMatched: 0,\r\n                    numberReturned: 0,\r\n                    timeStamp: formatDate(new Date().getTime()),\r\n                    totalFeatures: 0,\r\n                    type: \"FeatureCollection\"\r\n                }\r\n            })\r\n        // 取出第i个url， 放入fetch里面 , 每取一次i++\r\n        fetchArr.push(one);  //将当前的promise存入并发数组中\r\n        let p = Promise.resolve();\r\n        if (fetchArr.length >= max) {\r\n            // 当并行数量达到最大后， 用race比较 第一个完成的， 然后再调用一下函数自身。\r\n            p = Promise.race(fetchArr);\r\n        }\r\n        return p.then(() => toFetch());\r\n    }\r\n    // arr循环完后， 现在fetchArr里面剩下最后max个promise对象， 使用all等待所有的都完成之后执行callback\r\n    toFetch().then(() => Promise.all(fetchArr)).then((a) => {\r\n        callback(a);\r\n    })\r\n}\r\n\r\n/**\r\n * 时间戳转换方法    date:时间戳数字\r\n */\r\nconst formatDate = function (d) {\r\n    let date = new Date(d);\r\n    let YY = date.getFullYear() + '-';\r\n    let MM = (date.getMonth() + 1 < 10 ? '0' + (date.getMonth() + 1) : date.getMonth() + 1) + '-';\r\n    let DD = (date.getDate() < 10 ? '0' + (date.getDate()) : date.getDate());\r\n    let hh = (date.getHours() < 10 ? '0' + date.getHours() : date.getHours()) + ':';\r\n    let mm = (date.getMinutes() < 10 ? '0' + date.getMinutes() : date.getMinutes()) + ':';\r\n    let ss = (date.getSeconds() < 10 ? '0' + date.getSeconds() : date.getSeconds());\r\n    return YY + MM + DD + \" \" + hh + mm + ss;\r\n}\r\n\r\n/**\r\n * 拼接sql语句\r\n * @param featureTypes 要素字段\r\n * @param keyword 查询关键字\r\n * @returns {*[\r\n *     {\r\n *         typeName:'buidling',\r\n           cql:`( name ILIKE '%搜索关键字%')`\r\n *     }\r\n * ]}\r\n */\r\n\r\nconst getLikeSQL = (featureTypes, keyword) => {\r\n    let sql = []\r\n    featureTypes.forEach(featureType => {\r\n        let like = '';\r\n        featureType.properties.forEach(propertie => {\r\n            if (FIELD(propertie.name)) {\r\n                like += ' ' + propertie.name + ` ILIKE '%${keyword}%' OR`\r\n            }\r\n        })\r\n        like = like.substring(0, like.lastIndexOf('OR'));\r\n        sql.push({\r\n            typeName: featureType.typeName,\r\n            cql: `( ${like} )`\r\n        })\r\n    })\r\n    return sql;\r\n}\r\n\r\n/**\r\n * 获取查询拼接链接\r\n * @param url baseURL\r\n * @param type 查询类型\r\n * @param keyword 查询关键字\r\n * @returns {Promise<unknown>}\r\n [\r\n {\r\n          typeName:'buidling',\r\n           cql:`( name ILIKE '%搜索关键字%')`\r\n      },...\r\n ]\r\n */\r\nconst getDescribeToSql = (url, type, keyword) => {\r\n    type = TYPE(type);\r\n    return new Promise((resolve) => {\r\n        fetch(url + `geoserver/wfs?service=WFS&version=1.1.0&outputFormat=application/json&request=DescribeFeatureType&typeName=${type}`\r\n        ).then(function (response) {\r\n            return response.json();\r\n        }).then(function (json) {\r\n            resolve(getLikeSQL(json.featureTypes, keyword))\r\n        }).catch((e) => {\r\n            console.error(e)\r\n            return resolve([])\r\n        });\r\n    })\r\n}\r\n\r\n/**\r\n * 返回查询链接集合\r\n * @param url baseURL\r\n * @param type 查询类型\r\n * @param keyword 查询关键字\r\n * @param pageSize 查询数量\r\n * @returns {Promise<unknown>}\r\n * [url1,url2,url3,.....]\r\n */\r\n\r\nconst getSearchURLs = (url, type, keyword, pageSize) => {\r\n    let baseURL = url + `geoserver/wfs?service=WFS&version=1.1.0&request=GetFeature&outputFormat=application/json&sortBy=&srsName=${SRS_NAME}&`\r\n    let urls = [];\r\n    return new Promise((resolve) => {\r\n        getDescribeToSql(url, type, keyword).then(r => {\r\n            if (r.length > 0) {\r\n                r.forEach(item => {\r\n                    let typeName = item.typeName;\r\n                    let cql = item.cql;\r\n                    urls.push(encodeURI(baseURL + `maxFeatures=${pageSize}&typeName=${SPACE_NAME}:${typeName}&cql_filter=${cql}`))\r\n                })\r\n                return urls\r\n            }\r\n            return urls\r\n        }).then(data => {\r\n            return resolve(data)\r\n        }).catch((e) => {\r\n            console.error(e)\r\n            return resolve([])\r\n        })\r\n    })\r\n}\r\n\r\n/**\r\n * 根据url集合进行请求获取查询结果\r\n * @param url baseURL\r\n * @param type 查询类型\r\n * @param keyword 查询关键字\r\n * @param pageSize 查询数量\r\n */\r\nconst getSearch = (url, type, keyword, pageSize) => {\r\n    return new Promise((resolve) => {\r\n        getSearchURLs(url, type, keyword, pageSize).then(re => {\r\n            getRequestAll(re, re.length + 1, (data) => {\r\n                let features = []\r\n                data.forEach(feature => {\r\n                    if (feature !== undefined) {\r\n                        feature.features.forEach(item => {\r\n                            features.push(item)\r\n                        })\r\n                    }\r\n                })\r\n                GeoJSONData = {\r\n                    crs: { properties: { name: \"urn:ogc:def:crs:EPSG::4326\" }, type: \"name\" },\r\n                    features: features,\r\n                    numberMatched: pageSize,\r\n                    numberReturned: features.length,\r\n                    timeStamp: formatDate(new Date().getTime()),\r\n                    totalFeatures: features.length,\r\n                    type: 'FeatureCollection'\r\n                }\r\n                return resolve(GeoJSONData)\r\n            })\r\n        }).catch((err) => {\r\n            console.error(\"查询失败:\", err)\r\n        })\r\n    })\r\n}\r\n\r\n/**\r\n * 返回过滤后XML\r\n * @param layerName 图层名称\r\n * @param pageSize  每页数据量\r\n * @param filter 过滤条件\r\n * @returns {string}\r\n */\r\nconst getFeatureRequest = (layerName, pageSize, filter) => {\r\n    let options = {\r\n        srsName: SRS_NAME,\r\n        featureNS: 'http://www.census.gov',\r\n        featurePrefix: SPACE_NAME,\r\n        featureTypes: [layerName],\r\n        maxFeatures: pageSize,\r\n        outputFormat: 'application/json',\r\n        filter: filter\r\n    }\r\n    let featureRequest = new WFS().writeGetFeature(options);\r\n    let request = new XMLSerializer().serializeToString(featureRequest);\r\n    //XML中添加排序规则\r\n    //let sortBy = `<SortBy xmlns=\"http://www.opengis.net/ogc\"><SortProperty><PropertyName>${GEOTYPE(layerName, 1)}</PropertyName><SortOrder>0</SortOrder></SortProperty></SortBy>`;\r\n    //在<Filter之前插入sortBy字符串\r\n    //request = request.slice(0, request.indexOf('<Filter')) + sortBy + request.slice(request.indexOf('<Filter'));\r\n    return request;\r\n}\r\n\r\n/**\r\n * post请求\r\n * @param url BaseURL\r\n * @param body 提交数据\r\n * @param pageSize 单页数量\r\n * @param resolve Promise.resolve\r\n */\r\nconst postWFS = (url, body, pageSize, resolve) => {\r\n    postRequestAll(url + 'geoserver/wfs', body, body.length + 1, (data) => {\r\n        let features = []\r\n        data.forEach(feature => {\r\n            if (feature !== undefined) {\r\n                feature.features.forEach(item => {\r\n                    features.push(item)\r\n                })\r\n            }\r\n        })\r\n        GeoJSONData = {\r\n            crs: { properties: { name: \"urn:ogc:def:crs:EPSG::4326\" }, type: \"name\" },\r\n            features: features,\r\n            numberMatched: pageSize,\r\n            numberReturned: features.length,\r\n            timeStamp: formatDate(new Date().getTime()),\r\n            totalFeatures: features.length,\r\n            type: 'FeatureCollection'\r\n        }\r\n        return resolve(GeoJSONData)\r\n    })\r\n}\r\n\r\n/**\r\n * space filter 空间查询\r\n * @param map 地图对象\r\n * @param url baseURL\r\n * @param type 查询类型\r\n * @param pageSize  分页数量\r\n * @param polygon 多边形geometry类型\r\n * @returns {Promise<unknown>}\r\n */\r\nconst spaceFilter = (map, url, type, pageSize, polygon) => {\r\n    map.removeLayer(filterLayer);\r\n    let source = new Vector();\r\n    let style = ('getStyle' in polygon) ? polygon.getStyle() : new Style({\r\n        stroke: new Stroke({\r\n            color: 'rgba(144,233,253,0.60)',\r\n            width: 1,\r\n        }),\r\n        fill: new Fill({\r\n            color: 'rgba(128,225,255,0.10)',\r\n        }),\r\n    });\r\n    polygon = ('getGeometry' in polygon) ? polygon.getGeometry() : polygon;\r\n    source.addFeature(new Feature({ geometry: polygon, }));\r\n    filterLayer = new VectorLayer({\r\n        source: source,\r\n        style: style\r\n    });\r\n    map.addLayer(filterLayer);\r\n\r\n    //坐标系为EPSG:4326,需要转换经纬度，不然查询结果为空\r\n    polygon.applyTransform((flatCoordinates, flatCoordinates2, stride) => {\r\n        for (let j = 0; j < flatCoordinates.length; j += stride) {\r\n            let y = flatCoordinates[j]\r\n            let x = flatCoordinates[j + 1]\r\n            flatCoordinates[j] = x\r\n            flatCoordinates[j + 1] = y\r\n        }\r\n    });\r\n    let layerNames = TYPE(type).split(',') || [TYPE(type)];\r\n    let body = [];\r\n    layerNames.forEach(layerName => {\r\n        let filter = Filter.intersects(GEOTYPE(layerName, 0), polygon, SRS_NAME)\r\n        body.push(getFeatureRequest(layerName, pageSize, filter));\r\n    });\r\n    return new Promise((resolve) => {\r\n        postWFS(url, body, pageSize, resolve);\r\n    })\r\n}\r\n\r\n/**\r\n * 整理返回的GeoJSON数据\r\n * @param re GeoJSON数据\r\n * @returns {*[]}\r\n [{\r\n     id: \"meiyibao_station.fid-4c06493f_17c55e0b8df_10e3\",\r\n     name: \"查询结果\"\r\n },....]\r\n */\r\nconst getSearchData = (re) => {\r\n    let data = [];\r\n    re.features.forEach(item => {\r\n        let keys = Object.keys(item.properties);\r\n        let name = '', type = item.id.substring(0, item.id.lastIndexOf('.'));\r\n        let property = {\r\n            id: item.id\r\n        }\r\n        keys.forEach(key => {\r\n            if (FIELD(key) && FIELD_NAME(key)) {\r\n                if (FIELD_NAME(key) === 'name') {\r\n                    name += item.properties[FIELD(key)] + '/'\r\n                } else {\r\n                    property[FIELD_NAME(key)] = item.properties[FIELD(key)]\r\n                }\r\n            }\r\n        })\r\n        //删除最后一个/字符\r\n        name = name.substring(0, name.lastIndexOf('/'));\r\n        property['name'] = GEOTYPE(type, 2) + ':' + name;\r\n        data.push(property)\r\n    })\r\n    return data;\r\n}\r\n\r\n//创建样式\r\nconst styleFunction = function (feature) {\r\n    const image = new Circle({\r\n        radius: 4,\r\n        fill: new Fill({\r\n            color: 'rgb(255,0,0)',\r\n        }),\r\n        stroke: new Stroke({ color: 'rgb(31,37,154)', width: 1 }),\r\n    });\r\n    const styles = {\r\n        'Point': new Style({\r\n            image: image,\r\n        }),\r\n        'LineString': new Style({\r\n            stroke: new Stroke({\r\n                color: 'rgb(255,89,0)',\r\n                width: 3,\r\n            }),\r\n        }),\r\n        'MultiLineString': new Style({\r\n            stroke: new Stroke({\r\n                color: 'rgb(255,89,0)',\r\n                width: 3,\r\n            }),\r\n        }),\r\n        'MultiPoint': new Style({\r\n            image: image,\r\n        }),\r\n        'MultiPolygon': new Style({\r\n            stroke: new Stroke({\r\n                color: 'yellow',\r\n                width: 1,\r\n            }),\r\n            fill: new Fill({\r\n                color: 'rgba(255,255,0,0.29)',\r\n            }),\r\n        }),\r\n        'Polygon': new Style({\r\n            stroke: new Stroke({\r\n                color: 'blue',\r\n                lineDash: [4],\r\n                width: 3,\r\n            }),\r\n            fill: new Fill({\r\n                color: 'rgba(0,0,255,0.47)',\r\n            }),\r\n        }),\r\n        'GeometryCollection': new Style({\r\n            stroke: new Stroke({\r\n                color: 'rgb(208,0,255)',\r\n                width: 2,\r\n            }),\r\n            fill: new Fill({\r\n                color: 'rgb(208,0,255)',\r\n            }),\r\n            image: new Circle({\r\n                radius: 10,\r\n                fill: null,\r\n                stroke: new Stroke({\r\n                    color: 'rgb(208,0,255)',\r\n                }),\r\n            }),\r\n        }),\r\n        'Circle': new Style({\r\n            stroke: new Stroke({\r\n                color: 'rgba(255,0,0,0.2)',\r\n                width: 2,\r\n            }),\r\n            fill: new Fill({\r\n                color: 'rgba(255,0,0,0.2)',\r\n            }),\r\n        }),\r\n    };\r\n    return styles[feature.getGeometry().getType()];\r\n};\r\n\r\n/**\r\n * 添加GeoJSON到地图\r\n * @param map ol map对象\r\n * @param features geojson\r\n * @param featureId 指定id\r\n */\r\nconst addGeoJSON = (map, featureId) => {\r\n    let features = GeoJSONData;\r\n    map.removeLayer(searchLayer);\r\n    if (features === null) return null;\r\n    const source = new Vector();\r\n    if (featureId === undefined || featureId === null || featureId === '') {\r\n        //读取数据表中geojson创建为feature对象\r\n        let feature = new GeoJSON().readFeatures(features);\r\n        source.addFeatures(feature);\r\n    } else {\r\n        //循环data 加载要素到地图\r\n        features.features.forEach(item => {\r\n            if (item.id === featureId) {\r\n                //读取数据表中wkt创建为feature对象\r\n                let feature = new GeoJSON().readFeature(item);\r\n                source.addFeature(feature);\r\n            }\r\n        });\r\n    }\r\n    if (source.getFeatures().length === 0) return null;\r\n    searchLayer = new VectorLayer({\r\n        source: source,\r\n        style: styleFunction\r\n    });\r\n    //添加geojson图层到地图\r\n    map.addLayer(searchLayer);\r\n    //通过extent缩放至范围\r\n    let extent = source.getExtent();\r\n    let r = map.getView().getResolutionForExtent(extent, map.getSize());\r\n    //设置地图显示缩放等级\r\n    map.getView().setResolution(r);\r\n    //设置地图中心点\r\n    map.getView().setCenter(Extent.getCenter(extent));\r\n}\r\n\r\n/**\r\n * 加载天地图\r\n * @param lyr\r\n * @returns {_ol_layer_Tile_}\r\n */\r\nconst getTdtLayer = (lyr) => {\r\n    // let url = \"http://t0.tianditu.gov.cn/DataServer?T=\"+lyr+\"&X={x}&Y={y}&L={z}\";\r\n    let urls = [];\r\n    for (let i = 0; i < 8; i++) {\r\n        urls.push(\"http://t\" + i + \".tianditu.gov.cn/DataServer?T=\" + lyr + \"&X={x}&Y={y}&L={z}&tk=16c5722fed64bcdbb390cc21a5548cf9\");\r\n    }\r\n    return new TileLayer({\r\n        source: new XYZ({\r\n            urls: urls\r\n        })\r\n    });\r\n}\r\n\r\nexport {\r\n    getRequestAll,\r\n    postRequestAll,\r\n    formatDate,\r\n    getLikeSQL,\r\n    getDescribeToSql,\r\n    getSearchURLs,\r\n    getSearch,\r\n    getFeatureRequest,\r\n    postWFS,\r\n    spaceFilter,\r\n    getSearchData,\r\n    styleFunction,\r\n    addGeoJSON,\r\n    getTdtLayer\r\n}\r\n","module.exports = axios;"],"sourceRoot":""}