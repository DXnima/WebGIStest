{"version":3,"sources":["webpack:///./node_modules/core-js/internals/same-value.js","webpack:///./node_modules/ol/control/scalelineunits.js","webpack:///./node_modules/ol/control/scaleline.js","webpack:///./src/components/geoserver_rest/feature/EditFeature.vue","webpack:///src/components/geoserver_rest/feature/EditFeature.vue","webpack:///./src/components/geoserver_rest/feature/EditFeature.vue?f68d","webpack:///./src/components/geoserver_rest/feature/EditFeature.vue?2e78","webpack:///./node_modules/core-js/modules/es.string.search.js","webpack:///./node_modules/ol/source/osm.js"],"names":["module","exports","Object","is","x","y","_ol_control_ScaleLineUnits_","DEGREES","IMPERIAL","NAUTICAL","METRIC","US","_ol_control_ScaleLine_","opt_options","options","className","undefined","this","innerElement_","document","createElement","element_","CLASS_UNSELECTABLE","appendChild","viewState_","minWidth_","minWidth","renderedVisible_","renderedWidth_","renderedHTML_","render","call","element","target","listen","getChangeEventType","Property_","UNITS","handleUnitsChanged_","setUnits","inherits","LEADING_DIGITS","prototype","getUnits","get","mapEvent","frameState","viewState","updateElement_","units","set","center","projection","pointResolutionUnits","METERS","pointResolution","getPointResolution","resolution","getMetersPerUnit","nominalCount","suffix","metersPerDegree","METERS_PER_UNIT","assert","count","width","i","Math","floor","log","pow","round","isNaN","style","display","html","innerHTML","_vm","_c","_self","staticStyle","attrs","on","getQueryData","inputChange","model","value","queryInfo","query","callback","$$v","$set","expression","getFindData","slot","addFeatures","_v","removeCheck","datas","pageNum","pageSize","total","handleSizeChange","handleCurrentChange","_e","ref","staticClass","trigger","mode","autoClear","rowClassName","scopedSlots","_u","key","fn","row","$refs","xTable","isActiveByRow","$event","saveRowEvent","cancelRowEvent","removeEvent","editRowEvent","_l","fields","item","data","name","type","staticRenderFns","layerName","geoURL","tableName","geom","isFind","isInput","map","oldGeoJSON","wktLayer","select","modify","draw","drawFeature","isDraw","created","mounted","methods","initMap","layers","source","view","zoom","that","$table","getTableData","fieldName","crs","ref1","addGeoJSON","feature","info","features","editFeatures","geoJSON","newRow","confirmButtonText","cancelButtonText","geoms","selectRecords","console","styleFunction","radius","fill","color","stroke","image","lineDash","watch","$route","handler","component","fixRegExpWellKnownSymbolLogic","anObject","isNullOrUndefined","requireObjectCoercible","sameValue","toString","getMethod","regExpExec","SEARCH","nativeSearch","maybeCallNative","regexp","O","searcher","RegExp","string","rx","S","res","done","previousLastIndex","lastIndex","result","index","_ol_source_OSM_","attributions","ATTRIBUTION","crossOrigin","url","cacheSize","opaque","maxZoom","reprojectionErrorThreshold","tileLoadFunction","wrapX"],"mappings":"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","file":"js/chunk-185dca03.535d2e0b.js","sourcesContent":["// `SameValue` abstract operation\n// https://tc39.es/ecma262/#sec-samevalue\n// eslint-disable-next-line es/no-object-is -- safe\nmodule.exports = Object.is || function is(x, y) {\n  // eslint-disable-next-line no-self-compare -- NaN check\n  return x === y ? x !== 0 || 1 / x === 1 / y : x != x && y != y;\n};\n","/**\n * Units for the scale line. Supported values are `'degrees'`, `'imperial'`,\n * `'nautical'`, `'metric'`, `'us'`.\n * @enum {string}\n */\nvar _ol_control_ScaleLineUnits_ = {\n  DEGREES: 'degrees',\n  IMPERIAL: 'imperial',\n  NAUTICAL: 'nautical',\n  METRIC: 'metric',\n  US: 'us'\n};\n\nexport default _ol_control_ScaleLineUnits_;\n","import _ol_ from '../index.js';\nimport _ol_Object_ from '../object.js';\nimport _ol_asserts_ from '../asserts.js';\nimport _ol_control_Control_ from '../control/control.js';\nimport _ol_control_ScaleLineUnits_ from '../control/scalelineunits.js';\nimport _ol_css_ from '../css.js';\nimport _ol_events_ from '../events.js';\nimport _ol_proj_ from '../proj.js';\nimport _ol_proj_Units_ from '../proj/units.js';\n\n/**\n * @classdesc\n * A control displaying rough y-axis distances, calculated for the center of the\n * viewport. For conformal projections (e.g. EPSG:3857, the default view\n * projection in OpenLayers), the scale is valid for all directions.\n * No scale line will be shown when the y-axis distance of a pixel at the\n * viewport center cannot be calculated in the view projection.\n * By default the scale line will show in the bottom left portion of the map,\n * but this can be changed by using the css selector `.ol-scale-line`.\n *\n * @constructor\n * @extends {ol.control.Control}\n * @param {olx.control.ScaleLineOptions=} opt_options Scale line options.\n * @api\n */\nvar _ol_control_ScaleLine_ = function(opt_options) {\n\n  var options = opt_options ? opt_options : {};\n\n  var className = options.className !== undefined ? options.className : 'ol-scale-line';\n\n  /**\n   * @private\n   * @type {Element}\n   */\n  this.innerElement_ = document.createElement('DIV');\n  this.innerElement_.className = className + '-inner';\n\n  /**\n   * @private\n   * @type {Element}\n   */\n  this.element_ = document.createElement('DIV');\n  this.element_.className = className + ' ' + _ol_css_.CLASS_UNSELECTABLE;\n  this.element_.appendChild(this.innerElement_);\n\n  /**\n   * @private\n   * @type {?olx.ViewState}\n   */\n  this.viewState_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.minWidth_ = options.minWidth !== undefined ? options.minWidth : 64;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.renderedVisible_ = false;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.renderedWidth_ = undefined;\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.renderedHTML_ = '';\n\n  var render = options.render ? options.render : _ol_control_ScaleLine_.render;\n\n  _ol_control_Control_.call(this, {\n    element: this.element_,\n    render: render,\n    target: options.target\n  });\n\n  _ol_events_.listen(\n      this, _ol_Object_.getChangeEventType(_ol_control_ScaleLine_.Property_.UNITS),\n      this.handleUnitsChanged_, this);\n\n  this.setUnits(/** @type {ol.control.ScaleLineUnits} */ (options.units) ||\n      _ol_control_ScaleLineUnits_.METRIC);\n\n};\n\n_ol_.inherits(_ol_control_ScaleLine_, _ol_control_Control_);\n\n\n/**\n * @const\n * @type {Array.<number>}\n */\n_ol_control_ScaleLine_.LEADING_DIGITS = [1, 2, 5];\n\n\n/**\n * Return the units to use in the scale line.\n * @return {ol.control.ScaleLineUnits|undefined} The units to use in the scale\n *     line.\n * @observable\n * @api\n */\n_ol_control_ScaleLine_.prototype.getUnits = function() {\n  return (\n    /** @type {ol.control.ScaleLineUnits|undefined} */ this.get(_ol_control_ScaleLine_.Property_.UNITS)\n  );\n};\n\n\n/**\n * Update the scale line element.\n * @param {ol.MapEvent} mapEvent Map event.\n * @this {ol.control.ScaleLine}\n * @api\n */\n_ol_control_ScaleLine_.render = function(mapEvent) {\n  var frameState = mapEvent.frameState;\n  if (!frameState) {\n    this.viewState_ = null;\n  } else {\n    this.viewState_ = frameState.viewState;\n  }\n  this.updateElement_();\n};\n\n\n/**\n * @private\n */\n_ol_control_ScaleLine_.prototype.handleUnitsChanged_ = function() {\n  this.updateElement_();\n};\n\n\n/**\n * Set the units to use in the scale line.\n * @param {ol.control.ScaleLineUnits} units The units to use in the scale line.\n * @observable\n * @api\n */\n_ol_control_ScaleLine_.prototype.setUnits = function(units) {\n  this.set(_ol_control_ScaleLine_.Property_.UNITS, units);\n};\n\n\n/**\n * @private\n */\n_ol_control_ScaleLine_.prototype.updateElement_ = function() {\n  var viewState = this.viewState_;\n\n  if (!viewState) {\n    if (this.renderedVisible_) {\n      this.element_.style.display = 'none';\n      this.renderedVisible_ = false;\n    }\n    return;\n  }\n\n  var center = viewState.center;\n  var projection = viewState.projection;\n  var units = this.getUnits();\n  var pointResolutionUnits = units == _ol_control_ScaleLineUnits_.DEGREES ?\n    _ol_proj_Units_.DEGREES :\n    _ol_proj_Units_.METERS;\n  var pointResolution =\n      _ol_proj_.getPointResolution(projection, viewState.resolution, center, pointResolutionUnits);\n  if (units != _ol_control_ScaleLineUnits_.DEGREES) {\n    pointResolution *= projection.getMetersPerUnit();\n  }\n\n  var nominalCount = this.minWidth_ * pointResolution;\n  var suffix = '';\n  if (units == _ol_control_ScaleLineUnits_.DEGREES) {\n    var metersPerDegree = _ol_proj_.METERS_PER_UNIT[_ol_proj_Units_.DEGREES];\n    if (projection.getUnits() == _ol_proj_Units_.DEGREES) {\n      nominalCount *= metersPerDegree;\n    } else {\n      pointResolution /= metersPerDegree;\n    }\n    if (nominalCount < metersPerDegree / 60) {\n      suffix = '\\u2033'; // seconds\n      pointResolution *= 3600;\n    } else if (nominalCount < metersPerDegree) {\n      suffix = '\\u2032'; // minutes\n      pointResolution *= 60;\n    } else {\n      suffix = '\\u00b0'; // degrees\n    }\n  } else if (units == _ol_control_ScaleLineUnits_.IMPERIAL) {\n    if (nominalCount < 0.9144) {\n      suffix = 'in';\n      pointResolution /= 0.0254;\n    } else if (nominalCount < 1609.344) {\n      suffix = 'ft';\n      pointResolution /= 0.3048;\n    } else {\n      suffix = 'mi';\n      pointResolution /= 1609.344;\n    }\n  } else if (units == _ol_control_ScaleLineUnits_.NAUTICAL) {\n    pointResolution /= 1852;\n    suffix = 'nm';\n  } else if (units == _ol_control_ScaleLineUnits_.METRIC) {\n    if (nominalCount < 0.001) {\n      suffix = 'μm';\n      pointResolution *= 1000000;\n    } else if (nominalCount < 1) {\n      suffix = 'mm';\n      pointResolution *= 1000;\n    } else if (nominalCount < 1000) {\n      suffix = 'm';\n    } else {\n      suffix = 'km';\n      pointResolution /= 1000;\n    }\n  } else if (units == _ol_control_ScaleLineUnits_.US) {\n    if (nominalCount < 0.9144) {\n      suffix = 'in';\n      pointResolution *= 39.37;\n    } else if (nominalCount < 1609.344) {\n      suffix = 'ft';\n      pointResolution /= 0.30480061;\n    } else {\n      suffix = 'mi';\n      pointResolution /= 1609.3472;\n    }\n  } else {\n    _ol_asserts_.assert(false, 33); // Invalid units\n  }\n\n  var i = 3 * Math.floor(\n      Math.log(this.minWidth_ * pointResolution) / Math.log(10));\n  var count, width;\n  while (true) {\n    count = _ol_control_ScaleLine_.LEADING_DIGITS[((i % 3) + 3) % 3] *\n        Math.pow(10, Math.floor(i / 3));\n    width = Math.round(count / pointResolution);\n    if (isNaN(width)) {\n      this.element_.style.display = 'none';\n      this.renderedVisible_ = false;\n      return;\n    } else if (width >= this.minWidth_) {\n      break;\n    }\n    ++i;\n  }\n\n  var html = count + ' ' + suffix;\n  if (this.renderedHTML_ != html) {\n    this.innerElement_.innerHTML = html;\n    this.renderedHTML_ = html;\n  }\n\n  if (this.renderedWidth_ != width) {\n    this.innerElement_.style.width = width + 'px';\n    this.renderedWidth_ = width;\n  }\n\n  if (!this.renderedVisible_) {\n    this.element_.style.display = '';\n    this.renderedVisible_ = true;\n  }\n\n};\n\n\n/**\n * @enum {string}\n * @private\n */\n_ol_control_ScaleLine_.Property_ = {\n  UNITS: 'units'\n};\nexport default _ol_control_ScaleLine_;\n","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[_c('div',{staticStyle:{\"max-height\":\"630px\"},attrs:{\"id\":\"map\"}}),_c('el-card',[_c('el-row',{attrs:{\"gutter\":20}},[_c('el-col',{attrs:{\"span\":8}},[_c('el-input',{attrs:{\"placeholder\":\"请输入内容\",\"clearable\":\"\"},on:{\"clear\":_vm.getQueryData,\"input\":_vm.inputChange},model:{value:(_vm.queryInfo.query),callback:function ($$v) {_vm.$set(_vm.queryInfo, \"query\", $$v)},expression:\"queryInfo.query\"}},[_c('el-button',{attrs:{\"slot\":\"append\",\"icon\":\"el-icon-search\"},on:{\"click\":_vm.getFindData},slot:\"append\"})],1)],1),_c('el-col',{attrs:{\"span\":4}},[_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.addFeatures}},[_vm._v(\"添加\")]),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.removeCheck}},[_vm._v(\"批量删除\")])],1)],1),(_vm.datas !== null)?_c('el-pagination',{attrs:{\"current-page\":_vm.queryInfo.pageNum,\"page-sizes\":[5, 10, 15, 30, 100],\"page-size\":_vm.queryInfo.pageSize,\"layout\":\"total, sizes, prev, pager, next, jumper\",\"total\":_vm.total},on:{\"size-change\":_vm.handleSizeChange,\"current-change\":_vm.handleCurrentChange}}):_vm._e(),_c('vxe-table',{ref:\"xTable\",staticClass:\"mytable-style\",attrs:{\"border\":\"\",\"stripe\":\"\",\"highlight-hover-row\":\"\",\"data\":_vm.datas,\"edit-config\":{trigger: 'manual', mode: 'row', autoClear: false},\"size\":\"mini\",\"row-class-name\":_vm.rowClassName,\"max-height\":\"350\"}},[_c('vxe-table-column',{attrs:{\"type\":\"checkbox\",\"width\":\"40\"}}),_c('vxe-table-column',{attrs:{\"title\":\"操作\",\"width\":\"140\"},scopedSlots:_vm._u([{key:\"default\",fn:function({ row }){return [(_vm.$refs.xTable.isActiveByRow(row))?[_c('el-tooltip',{attrs:{\"effect\":\"dark\",\"content\":\"保存\",\"placement\":\"bottom\"}},[_c('el-button',{attrs:{\"type\":\"success\",\"size\":\"mini\",\"circle\":\"\",\"icon\":\"el-icon-s-order\"},on:{\"click\":function($event){return _vm.saveRowEvent(row)}}})],1),_c('el-tooltip',{attrs:{\"effect\":\"dark\",\"content\":\"取消\",\"placement\":\"bottom\"}},[_c('el-button',{attrs:{\"type\":\"info\",\"size\":\"mini\",\"circle\":\"\",\"icon\":\"el-icon-close\"},on:{\"click\":function($event){return _vm.cancelRowEvent(row)}}})],1),_c('el-tooltip',{attrs:{\"effect\":\"dark\",\"content\":\"删除\",\"placement\":\"bottom\"}},[_c('el-button',{attrs:{\"type\":\"danger\",\"size\":\"mini\",\"circle\":\"\",\"icon\":\"el-icon-delete-solid\"},on:{\"click\":function($event){return _vm.removeEvent(row)}}})],1)]:[_c('el-tooltip',{attrs:{\"effect\":\"dark\",\"content\":\"编辑\",\"placement\":\"bottom\"}},[_c('el-button',{attrs:{\"circle\":\"\",\"size\":\"mini\",\"icon\":\"el-icon-setting\"},on:{\"click\":function($event){return _vm.editRowEvent(row)}}})],1)]]}}])}),_vm._l((_vm.fields),function(item){return (_vm.data[1] !== item.name)?_c('vxe-table-column',{attrs:{\"field\":item.name,\"title\":item.name,\"min-width\":\"80px\",\"height\":\"20px\",\"show-header-overflow\":\"\",\"show-overflow\":\"title\",\"show-footer-overflow\":\"\",\"edit-render\":{name: 'input', attrs: {type: 'text'}}}}):_vm._e()})],2),(_vm.datas === null)?_c('el-empty',{attrs:{\"description\":\"无数据\"}}):_vm._e()],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div>\n    <div id=\"map\" style=\"max-height: 630px;\"></div>\n    <el-card>\n      <!--输入框和添加按钮-->\n      <el-row :gutter=\"20\">\n        <el-col :span=\"8\">\n          <el-input placeholder=\"请输入内容\" v-model=\"queryInfo.query\" clearable @clear=\"getQueryData\" @input=\"inputChange\">\n            <el-button slot=\"append\" icon=\"el-icon-search\" @click=\"getFindData\"></el-button>\n          </el-input>\n        </el-col>\n        <el-col :span=\"4\">\n          <el-button type=\"primary\" @click=\"addFeatures\">添加</el-button>\n          <el-button type=\"primary\" @click=\"removeCheck\">批量删除</el-button>\n        </el-col>\n      </el-row>\n      <!--分页-->\n      <el-pagination v-if=\"datas !== null\" @size-change=\"handleSizeChange\" @current-change=\"handleCurrentChange\" :current-page=\"queryInfo.pageNum\"\n                     :page-sizes=\"[5, 10, 15, 30, 100]\" :page-size=\"queryInfo.pageSize\" layout=\"total, sizes, prev, pager, next, jumper\" :total=\"total\">\n      </el-pagination>\n      <!--列表-->\n      <vxe-table ref=\"xTable\" class=\"mytable-style\" border stripe highlight-hover-row\n                 :data=\"datas\" :edit-config=\"{trigger: 'manual', mode: 'row', autoClear: false}\"\n                 size=\"mini\" :row-class-name=\"rowClassName\" max-height=\"350\">\n        <vxe-table-column type=\"checkbox\" width=\"40\"></vxe-table-column>\n        <vxe-table-column title=\"操作\" width=\"140\">\n          <template #default=\"{ row }\">\n            <template v-if=\"$refs.xTable.isActiveByRow(row)\">\n              <el-tooltip effect=\"dark\" content=\"保存\" placement=\"bottom\">\n                <el-button type=\"success\" size=\"mini\" circle  icon=\"el-icon-s-order\" @click=\"saveRowEvent(row)\"></el-button>\n              </el-tooltip>\n              <el-tooltip effect=\"dark\" content=\"取消\" placement=\"bottom\">\n                <el-button type=\"info\" size=\"mini\" circle  icon=\"el-icon-close\" @click=\"cancelRowEvent(row)\"></el-button>\n              </el-tooltip>\n              <el-tooltip effect=\"dark\" content=\"删除\" placement=\"bottom\">\n                <el-button type=\"danger\" size=\"mini\" circle  icon=\"el-icon-delete-solid\" @click=\"removeEvent(row)\"></el-button>\n              </el-tooltip>\n            </template>\n            <template v-else>\n              <el-tooltip effect=\"dark\" content=\"编辑\" placement=\"bottom\">\n                <el-button circle size=\"mini\" icon=\"el-icon-setting\" @click=\"editRowEvent(row)\"></el-button>\n              </el-tooltip>\n            </template>\n          </template>\n        </vxe-table-column>\n        <vxe-table-column v-for=\"item in fields\" v-if=\"data[1] !== item.name\"\n                          :field=\"item.name\" :title=\"item.name\" min-width=\"80px\" height=\"20px\"\n                          show-header-overflow show-overflow=\"title\" show-footer-overflow\n                          :edit-render=\"{name: 'input', attrs: {type: 'text'}}\">\n        </vxe-table-column>\n      </vxe-table>\n      <el-empty v-if=\"datas === null\" description=\"无数据\"></el-empty>\n    </el-card>\n  </div>\n</template>\n\n<script>\nimport \"ol/ol.css\";\nimport Map from 'ol/map';\nimport View from 'ol/view';\nimport Point from 'ol/geom/point';\nimport TileLayer from 'ol/layer/tile';\nimport VectorLayer from 'ol/layer/vector';\nimport OSM from \"ol/source/osm\";\nimport VectorSource from 'ol/source/vector';\nimport GeoJSON from 'ol/format/geojson';\nimport Draw from 'ol/interaction/draw';\nimport Select from 'ol/interaction/select';\nimport Modify from 'ol/interaction/modify';\nimport Style from 'ol/style/style';\nimport Stroke from 'ol/style/stroke';\nimport Fill from 'ol/style/fill';\nimport ScaleLine from 'ol/control/scaleline';\nimport CircleStyle from \"ol/style/circle\";\nimport Extent from 'ol/extent';\nimport {searchFeature} from \"@/api\";\nimport {getLikeSQL, getSearchURLs} from \"@/utils/searchUtils\";\nexport default {\n  name: \"EditFeature\",\n  data() {\n    return {\n      data: [],//[表名,geometry字段名,geometry类型],例[china_boundry,geom,LINE]\n      layerName: '',\n      geoURL: process.env.VUE_APP_GEOSERVER,\n      fields:[],\n      //存储表格数据\n      datas: [],\n      //表数据总条数\n      total: 0,\n      //查询数据请求表单\n      queryInfo: {\n        //表名\n        tableName: '',\n        //geometry字段名\n        geom: '',\n        //查询内容\n        query: '',\n        //页码\n        pageNum: 1,\n        //每页数据量\n        pageSize: 10,\n        //表所有字段名称\n        fields: []\n      },\n      //是否处于查询状态\n      isFind: false,\n      //是否处于输入状态\n      isInput: false,\n      //地图对象\n      map: null,\n      //存储更新前wkt数据，取消时使用\n      oldGeoJSON: '',\n      //wkt图层对象\n      wktLayer: null,\n      //select查询对象\n      select: null,\n      //modify编辑对象\n      modify: null,\n      //draw绘画对象\n      draw:null,\n      //绘制新要素对象\n      drawFeature: null,\n      //是否处于编辑状态\n      isDraw:false\n    }\n  },\n  created() {\n    this.layerName = this.$route.params.name;\n    this.data[0] = this.layerName;\n  },\n  mounted() {\n    //初始化地图\n    this.initMap();\n    //请求获取指定表数据\n    this.getTableData();\n  },\n  methods: {\n    //初始化地图\n    initMap() {\n      let that = this;\n      //创建地图对象\n      const map = new Map({\n        target: \"map\", //绑定页面中DOM元素的id\n        layers: [\n          new TileLayer({\n            //数据源\n            source: new OSM(), //openlayers内置的数据源\n            name: \"OSM地图\",\n          }),\n        ],\n        view: new View({\n          projection: \"EPSG:3857\", //坐标系3857\n          //视图配置\n          center: [12233037.3, 4861921.87], //地图中心点坐标，经度、纬度\n          zoom: 5, //定义地图显示层级\n        }),\n      });\n      // 为map添加鼠标移动事件监听，当指向标注时改变鼠标光标状态\n      map.on('pointermove', function (e) {\n        let pixel = map.getEventPixel(e.originalEvent);\n        let hit = map.hasFeatureAtPixel(pixel);\n        map.getTargetElement().style.cursor = hit ? 'pointer' : '';\n      });\n      //添加比例尺控件\n      map.addControl(new ScaleLine());\n      //创建select对象\n      let select = new Select();\n      this.select = select;\n      map.addInteraction(select);\n      //select处于选择事件时\n      select.on(\"select\", function (e) {\n        let feature = e.selected;\n        //获取选中要素属性信息\n        let row = feature[0].getProperties().info;\n        //保存选中要素旧wkt数据\n        that.oldGeoJSON = row.geoJSON;\n        //获取table元素\n        const $table = that.$refs.xTable;\n        //添加wkt图层\n        that.addGeoJSON([row]);\n        //激活编辑数据行\n        $table.setActiveRow(row);\n        //激活要素编辑\n        that.editFeatures(row);\n      });\n      this.map = map;\n\n    },\n    //请求获取表数据\n    async getTableData() {\n      //非查询状态\n      this.isFind = false;\n      //请求指定表格数据\n      const ref = await this.$API.describeFeatureType(this.geoURL, this.layerName);\n      //如果请求状态码404，则返回\n      if (!ref) return;\n      //表字段名称赋值\n      this.fields = ref.featureTypes[0].properties;\n      let fieldName=''\n      this.fields.forEach(item => {\n        if (item.type.search('gml') !== -1) {\n          // this.data[2] = item.type.split(':')[1];\n          this.data[1] = item.name;\n        } else fieldName = item.name\n      });\n      //请求指定图层属性信息\n      let ref1 = await this.$API.getJsonFeature(this.geoURL, this.layerName, {\n        pageNum: this.queryInfo.pageNum,\n        pageSize: this.queryInfo.pageSize,\n        name: fieldName,\n        crs: 'EPSG:3857'\n      });\n      //如果请求状态码404，则返回\n      if (!ref1) return;\n      this.datas = [];\n      //表格数据赋值\n      ref1.features.forEach(item => {\n        //获取要素GeoJSON\n        item.properties.geoJSON = item.geometry\n        this.datas.push(item.properties)\n      });\n      //设置要素类型\n      this.data[2] = ref1.features[0].geometry.type\n      //如果表数据为空 数据总条数赋值0\n      this.total = ref1.totalFeatures;\n      //添加WKT图层到地图上\n      this.addGeoJSON(this.datas);\n    },\n    //分页大小修改事件\n    handleSizeChange(e) {\n      //分页数据量更改 跳转到第一页\n      this.queryInfo.pageNum = 1;\n      this.queryInfo.pageSize = e;\n      //如果查询状态 请求查询接口\n      if (this.isFind) this.getFindData();\n      else this.getTableData();\n    },\n    //下一页分页修改事件\n    handleCurrentChange(e) {\n      this.queryInfo.pageNum = e;\n      if (this.isFind) this.getFindData();\n      else this.getTableData();\n    },\n    //查询输入框清除时更新数据\n    getQueryData() {\n      this.queryInfo.pageNum = 1;\n      this.getTableData();\n    },\n    //请求查询表数据\n    async getFindData() {\n      if(!this.isFind || this.isInput) this.queryInfo.pageNum = 1;\n      //输入状态\n      this.isInput = false;\n      //查询状态赋值为真\n      this.isFind = true;\n      //请求查询接口\n      /*let ref1 = await this.$API.getJsonFeature(this.geoURL, this.layerName, {\n        pageNum: this.queryInfo.pageNum,\n        pageSize: this.queryInfo.pageSize,\n        name: fieldName,\n        crs: 'EPSG:3857'\n      });\n      //如果请求状态码404，则返回\n      if (!ref1) return;\n      this.datas = [];\n      //表格数据赋值\n      ref1.features.forEach(item => {\n        //获取要素GeoJSON\n        item.properties.geoJSON = item.geometry\n        this.datas.push(item.properties)\n      });\n      //设置要素类型\n      this.data[2] = ref1.features[0].geometry.type\n      //如果表数据为空 数据总条数赋值0\n      this.total = ref1.totalFeatures;\n      //添加WKT图层到地图上\n      this.addGeoJSON(this.datas);*/\n      this.$message.success(\"查询接口待完善！\")\n    },\n    //输入框事件\n    inputChange(){\n      this.isInput = true;\n    },\n    //添加wkt到地图\n    addGeoJSON(data) {\n      const map = this.map;\n      //清除上一次加载的wkt图层\n      map.removeLayer(this.wktLayer);\n      if (data === null) return;\n      let source = new VectorSource();\n      let features = []\n      //循环data 加载要素到地图\n      data.forEach(item => {\n        //读取数据表中wkt创建为feature对象\n        let feature = new GeoJSON().readFeature(item.geoJSON);\n        //feature赋值属性信息\n        feature.setProperties({info: item});\n        features.push(feature);\n      });\n      source.addFeatures(features);\n      //加载要素到地图\n      this.wktLayer = new VectorLayer({\n        source: source,\n        style: this.styleFunction,\n      });\n      //添加wkt图层到地图\n      map.addLayer(this.wktLayer);\n      //通过extent缩放至范围\n      let extent = source.getExtent();\n      let r = map.getView().getResolutionForExtent(extent, map.getSize());\n      if (data.length > 1) {\n        //设置地图显示缩放等级\n        map.getView().setResolution(r);\n        //设置地图中心点\n        map.getView().setCenter(Extent.getCenter(extent));\n      } else {//如果只有一条数据\n        //设置地图中心点\n        map.getView().setCenter(Extent.getCenter(extent));\n        if (this.data[2] === 'Point') {//如果地理要素类型为点\n          //设置地图缩放等级为11\n          map.getView().setZoom(11);\n        } else {//如果地理要素类型不是点\n          //设置地图缩放等级\n          map.getView().setResolution(r);\n        }\n      }\n    },\n    //编辑地图要素\n    editFeatures(row) {\n      let map = this.map;\n      //创建Modify编辑对象\n      let modify = new Modify({source: this.wktLayer.getSource()});\n      map.addInteraction(modify);\n      //编辑结束后\n      modify.on(\"modifyend\", function (e) {\n        let features = e.features;\n        let feature = features.array_[0];\n        //获取要素的wkt数据\n        row.geoJSON = JSON.parse(new GeoJSON().writeGeometry(feature.getGeometry()));\n      });\n      this.modify = modify;\n    },\n    //绘制新要素\n    async addFeatures() {\n      let that = this;\n      this.isDraw = true;\n      let map = this.map;\n      this.select.setActive(false);\n      //创建编辑对象Draw\n      let draw = new Draw({\n        source: this.wktLayer.getSource(),//绑定wkt图层源\n        type: this.data[2],//要素类型\n      });\n      map.addInteraction(draw);\n      const $table = this.$refs.xTable;\n      //编辑结束时\n      draw.on(\"drawend\", async function (e) {\n        //存储feature\n        that.drawFeature = e.feature;\n        const { row: newRow } = await $table.insertAt({\n            geoJSON: JSON.parse(new GeoJSON().writeGeometry(e.feature.getGeometry()))\n        }, 0)\n        await $table.setActiveRow(newRow);\n        that.editFeatures(newRow);\n        //移除编辑对象\n        map.removeInteraction(draw);\n      });\n    },\n    //删除选中数据\n    removeCheck() {\n      const $table = this.$refs.xTable;\n      const selectRecords = $table.getCheckboxRecords();\n      if (selectRecords.length === 0) {\n        this.$message.error(\"没有选中数据！\");\n        return;\n      }\n      //打开弹窗\n      this.$confirm('此操作将永久删除数据, 是否继续?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(async () => {\n        let geoms = [];\n        selectRecords.forEach(item => {\n          console.log(item)\n        });\n        //当弹窗点击修改后 请求删除接口\n        if(false) {\n          this.$message.success(\"删除成功！\");\n          await this.$refs.xTable.removeCheckboxRow();\n          this.handleCurrentChange(1);\n        }\n        else {\n          this.$message.success(\"删除接口待完善！\")\n        }\n      });\n    },\n    //编辑表格某一行数据\n    editRowEvent(row) {\n      //修改前的wkt赋值，供取消修改时使用\n      this.oldGeoJSON = row.geoJSON;\n      this.isDraw = false;\n      //获取tabley元素\n      const $table = this.$refs.xTable;\n      //激活编辑的数据行\n      $table.setActiveRow(row);\n      //将编辑数据行的地理数据在地图上显示\n      this.addGeoJSON([row]);\n      //编辑feature\n      this.editFeatures(row);\n    },\n    //保存修改行数据\n    saveRowEvent(row) {\n      let that = this;\n      const $table = this.$refs.xTable;\n      //表格数据保存时\n      $table.clearActived().then(async () => {\n        //移除编辑对象modify\n        that.map.removeInteraction(that.modify);\n        //更新地图要素\n        that.addGeoJSON(that.datas);\n        //是否处于绘制状态\n        if (!that.isDraw) {\n          console.log(\"修改后数据\", row)\n          this.$message.success(\"修改接口待完善！\")\n        } else {\n          console.log(\"添加的新数据\", row)\n          this.$message.success(\"添加接口待完善！\")\n        }\n        //如果查询状态 请求查询接口\n        if (this.isFind) await this.getFindData();\n        else await this.getTableData();\n      });\n    },\n    //取消修改行数据\n    cancelRowEvent(row) {\n      let that = this;\n      const $table = this.$refs.xTable;\n      //表格数据取消修改时\n      $table.clearActived().then(() => {\n        //将旧wkt地理数据还原\n        row.geoJSON = that.oldGeoJSON;\n        // 还原行数据\n        $table.revertData(row);\n        //移除编辑modify对象\n        that.map.removeInteraction(that.modify);\n        //更新wkt图层数据\n        that.addGeoJSON(that.datas);\n      });\n    },\n    //删除行数据\n    removeEvent(row) {\n      //打开弹窗\n      this.$confirm('此操作将永久删除该数据, 是否继续?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(async () => {\n        //当弹窗点击修改后 请求删除接口\n        if(false) {\n          this.$message.success(\"删除成功！\");\n          this.$refs.xTable.remove(row);\n          this.handleCurrentChange(1);\n        }\n        else {\n          this.$message.success(\"删除接口待完善！\")\n        }\n      });\n    },\n    //创建样式\n    styleFunction(feature){\n      const image = new CircleStyle({\n        radius: 4,\n        fill: new Fill({\n          color: 'rgb(255,0,0)',\n        }),\n        stroke: new Stroke({color: 'rgb(0,7,255)', width: 1}),\n      });\n      const styles = {\n        'Point': new Style({\n          image: image,\n        }),\n        'LineString': new Style({\n          stroke: new Stroke({\n            color: 'rgb(255,89,0)',\n            width: 3,\n          }),\n        }),\n        'MultiLineString': new Style({\n          stroke: new Stroke({\n            color: 'rgb(255,89,0)',\n            width: 3,\n          }),\n        }),\n        'MultiPoint': new Style({\n          image: image,\n        }),\n        'MultiPolygon': new Style({\n          stroke: new Stroke({\n            color: 'yellow',\n            width: 1,\n          }),\n          fill: new Fill({\n            color: 'rgba(255,255,0,0.29)',\n          }),\n        }),\n        'Polygon': new Style({\n          stroke: new Stroke({\n            color: 'blue',\n            lineDash: [4],\n            width: 3,\n          }),\n          fill: new Fill({\n            color: 'rgba(0,0,255,0.47)',\n          }),\n        }),\n        'GeometryCollection': new Style({\n          stroke: new Stroke({\n            color: 'rgb(208,0,255)',\n            width: 2,\n          }),\n          fill: new Fill({\n            color: 'rgb(208,0,255)',\n          }),\n          image: new CircleStyle({\n            radius: 10,\n            fill: null,\n            stroke: new Stroke({\n              color: 'rgb(208,0,255)',\n            }),\n          }),\n        }),\n        'Circle': new Style({\n          stroke: new Stroke({\n            color: 'rgba(255,0,0,0.2)',\n            width: 2,\n          }),\n          fill: new Fill({\n            color: 'rgba(255,0,0,0.2)',\n          }),\n        }),\n      };\n      return styles[feature.getGeometry().getType()];\n    },\n    //设置表格行样式\n    rowClassName() {\n      // 返回类名row-height\n      return 'row-height';\n    }\n  },\n  watch: {\n    //监听路由变化\n    $route: {\n      handler: function (val, oldVal) {\n        //更新图层名称\n        this.layerName = val.params.name;\n        //更新分页页码为1\n        this.queryInfo.pageNum = 1;\n        //获取该表格数据\n        this.getTableData();\n      }\n    }\n  }\n}\n</script>\n<style>\n</style>\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./EditFeature.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./EditFeature.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./EditFeature.vue?vue&type=template&id=f8afb806&\"\nimport script from \"./EditFeature.vue?vue&type=script&lang=js&\"\nexport * from \"./EditFeature.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","'use strict';\nvar call = require('../internals/function-call');\nvar fixRegExpWellKnownSymbolLogic = require('../internals/fix-regexp-well-known-symbol-logic');\nvar anObject = require('../internals/an-object');\nvar isNullOrUndefined = require('../internals/is-null-or-undefined');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar sameValue = require('../internals/same-value');\nvar toString = require('../internals/to-string');\nvar getMethod = require('../internals/get-method');\nvar regExpExec = require('../internals/regexp-exec-abstract');\n\n// @@search logic\nfixRegExpWellKnownSymbolLogic('search', function (SEARCH, nativeSearch, maybeCallNative) {\n  return [\n    // `String.prototype.search` method\n    // https://tc39.es/ecma262/#sec-string.prototype.search\n    function search(regexp) {\n      var O = requireObjectCoercible(this);\n      var searcher = isNullOrUndefined(regexp) ? undefined : getMethod(regexp, SEARCH);\n      return searcher ? call(searcher, regexp, O) : new RegExp(regexp)[SEARCH](toString(O));\n    },\n    // `RegExp.prototype[@@search]` method\n    // https://tc39.es/ecma262/#sec-regexp.prototype-@@search\n    function (string) {\n      var rx = anObject(this);\n      var S = toString(string);\n      var res = maybeCallNative(nativeSearch, rx, S);\n\n      if (res.done) return res.value;\n\n      var previousLastIndex = rx.lastIndex;\n      if (!sameValue(previousLastIndex, 0)) rx.lastIndex = 0;\n      var result = regExpExec(rx, S);\n      if (!sameValue(rx.lastIndex, previousLastIndex)) rx.lastIndex = previousLastIndex;\n      return result === null ? -1 : result.index;\n    }\n  ];\n});\n","import _ol_ from '../index.js';\nimport _ol_source_XYZ_ from '../source/xyz.js';\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n *\n * @constructor\n * @extends {ol.source.XYZ}\n * @param {olx.source.OSMOptions=} opt_options Open Street Map options.\n * @api\n */\nvar _ol_source_OSM_ = function(opt_options) {\n\n  var options = opt_options || {};\n\n  var attributions;\n  if (options.attributions !== undefined) {\n    attributions = options.attributions;\n  } else {\n    attributions = [_ol_source_OSM_.ATTRIBUTION];\n  }\n\n  var crossOrigin = options.crossOrigin !== undefined ?\n    options.crossOrigin : 'anonymous';\n\n  var url = options.url !== undefined ?\n    options.url : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n  _ol_source_XYZ_.call(this, {\n    attributions: attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: crossOrigin,\n    opaque: options.opaque !== undefined ? options.opaque : true,\n    maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileLoadFunction: options.tileLoadFunction,\n    url: url,\n    wrapX: options.wrapX\n  });\n\n};\n\n_ol_.inherits(_ol_source_OSM_, _ol_source_XYZ_);\n\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\n_ol_source_OSM_.ATTRIBUTION = '&copy; ' +\n      '<a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> ' +\n      'contributors.';\nexport default _ol_source_OSM_;\n"],"sourceRoot":""}