{"version":3,"sources":["webpack:///./node_modules/ol/source/wmtsrequestencoding.js","webpack:///./node_modules/ol/source/wmts.js","webpack:///./node_modules/ol/layer/image.js","webpack:///./node_modules/ol/source/wmsservertype.js","webpack:///./node_modules/ol/image.js","webpack:///./node_modules/ol/reproj/image.js","webpack:///./node_modules/ol/source/image.js","webpack:///./node_modules/ol/source/imagewms.js","webpack:///./node_modules/ol/source/osm.js","webpack:///./src/components/openlayers/LayerCheckBox.vue","webpack:///src/components/openlayers/LayerCheckBox.vue","webpack:///./src/components/openlayers/LayerCheckBox.vue?962d","webpack:///./src/components/openlayers/LayerCheckBox.vue?a86e","webpack:///./node_modules/ol/tilegrid/wmts.js","webpack:///./node_modules/ol/source/tilewms.js","webpack:///./node_modules/ol/uri.js","webpack:///./src/components/openlayers/LayerCheckBox.vue?1bf6"],"names":["_ol_source_WMTSRequestEncoding_","KVP","REST","_ol_source_WMTS_","options","this","version_","undefined","version","format_","format","dimensions_","dimensions","layer_","layer","matrixSet_","matrixSet","style_","style","urls","url","expandUrl","requestEncoding_","requestEncoding","tileGrid","context","assign","createFromWMTSTemplate_","template","appendParams","replace","m","p","toLowerCase","tileCoord","pixelRatio","projection","localContext","getMatrixId","tileUrlFunction","length","createFromTileUrlFunctions","map","nullTileUrlFunction","call","attributions","cacheSize","crossOrigin","logo","reprojectionErrorThreshold","tileClass","tileLoadFunction","tilePixelRatio","wrapX","transition","setKey","getKeyForDimensions_","inherits","prototype","setUrls","key","join","setTileUrlFunction","fixedTileUrlFunction","bind","getDimensions","getFormat","getLayer","getMatrixSet","getRequestEncoding","getStyle","getVersion","i","res","updateDimensions","optionsFromCapabilities","wmtsCap","config","layers","l","find","elt","index","array","idx","matrixLimits","tileMatrixSets","findIndex","tileMatrixSet","el","supportedCRS","proj1","get","proj2","equivalent","forEach","value","matrixSets","matrixSetObj","code","projConfig","extent","wgs84BoundingBox","wgs84ProjectionExtent","getExtent","transformExtent","projectionExtent","containsExtent","createFromCapabilitiesMatrixSet","gets","ii","constraint","element","encodings","includes","push","_ol_layer_Image_","opt_options","type","IMAGE","getSource","_ol_source_WMSServerType_","CARMENTA_SERVER","GEOSERVER","MAPSERVER","QGIS","_ol_Image_","resolution","src","imageLoadFunction","IDLE","src_","image_","Image","imageListenerKeys_","state","imageLoadFunction_","getImage","handleImageError_","ERROR","unlistenImage_","changed","handleImageLoad_","getHeight","height","LOADED","load","LOADING","listenOnce","LOAD","setImage","image","unlistenByKey","_ol_reproj_Image_","sourceProj","targetProj","targetExtent","targetResolution","getImageFunction","targetProj_","maxSourceExtent_","maxTargetExtent","limitedTargetExtent","getIntersection","targetCenter","getCenter","sourceResolution","calculateSourceResolution","errorThresholdInPixels","DEFAULT_RASTER_REPROJECTION_ERROR_THRESHOLD","triangulation_","targetResolution_","targetExtent_","sourceExtent","calculateSourceExtent","sourceImage_","sourcePixelRatio_","getPixelRatio","canvas_","sourceListenerKey_","disposeInternal","unlistenSource_","getProjection","reproject_","sourceState","getState","width","getWidth","render","getResolution","listen","CHANGE","e","_ol_source_Image_","resolutions_","resolutions","reprojectedImage_","reprojectedRevision_","getResolutions","findNearestResolution","linearFindNearest","sourceProjection","ENABLE_RASTER_REPROJECTION","getRevision","equals","dispose","getImageInternal","handleImageChange","event","dispatchEvent","Event","EventType_","IMAGELOADSTART","IMAGELOADEND","IMAGELOADERROR","defaultImageLoadFunction","_ol_source_ImageWMS_","crossOrigin_","url_","params_","params","v13_","updateV13_","serverType_","hidpi_","hidpi","imageSize_","renderedRevision_","ratio_","ratio","GETFEATUREINFO_IMAGE_SIZE_","getGetFeatureInfoUrl","coordinate","projectionObj","sourceProjectionObj","transform","getForViewAndSize","baseParams","DEFAULT_WMS_VERSION","x","Math","floor","y","getRequestUrl_","getParams","imageResolution","center","viewWidth","ceil","viewHeight","viewExtent","requestWidth","requestHeight","requestExtent","round","getImageLoadFunction","size","assert","getCode","dpi","bbox","axisOrientation","getAxisOrientation","substr","getUrl","setImageLoadFunction","setUrl","updateParams","compareVersions","_ol_source_OSM_","ATTRIBUTION","opaque","maxZoom","_vm","_c","_self","attrs","path","_v","staticStyle","staticClass","staticRenderFns","data","created","mounted","methods","initMap","target","view","zoom","console","osmMap","source","visible","name","baiduMap","origin","tianMap","wmsImage","serverType","wmsTile","wmsGrid","tileSize","wmtsMap","matrixIds","opacity","loadLayersControl","layerName","layerVisibility","treeContent","elementInput","elementLi","elementLable","addChangeEvent","setInnerText","component","_ol_tilegrid_WMTS_","matrixIds_","origins","tileSizes","sizes","z","getMatrixIds","opt_extent","opt_matrixLimits","supportedCRSPropName","matrixIdsPropName","identifierPropName","scaleDenominatorPropName","topLeftCornerPropName","tileWidthPropName","tileHeightPropName","metersPerUnit","getMetersPerUnit","switchOriginXY","sort","a","b","matrixAvailable","elt_ml","index_ml","array_ml","tileWidth","tileHeight","_ol_source_TileWMS_","transparent","gutter_","gutter","tmpExtent_","createEmpty","getKeyForParams_","getTileGrid","getTileGridForProjection","getTileCoordForCoordAndResolution","tileResolution","tileExtent","getTileCoordExtent","toSize","getTileSize","tmpSize","buffer","getGutterInternal","tmp","modulo","hash","getTilePixelRatio","scale","_ol_uri_","uri","keyParams","Object","keys","k","encodeURIComponent","qs","indexOf"],"mappings":"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","file":"js/chunk-e26540c2.b570f555.js","sourcesContent":["/**\n * Request encoding. One of 'KVP', 'REST'.\n * @enum {string}\n */\nvar _ol_source_WMTSRequestEncoding_ = {\n  KVP: 'KVP',  // see spec §8\n  REST: 'REST' // see spec §10\n};\n\nexport default _ol_source_WMTSRequestEncoding_;\n","import _ol_ from '../index.js';\nimport _ol_TileUrlFunction_ from '../tileurlfunction.js';\nimport _ol_array_ from '../array.js';\nimport _ol_extent_ from '../extent.js';\nimport _ol_obj_ from '../obj.js';\nimport _ol_proj_ from '../proj.js';\nimport _ol_source_TileImage_ from '../source/tileimage.js';\nimport _ol_source_WMTSRequestEncoding_ from '../source/wmtsrequestencoding.js';\nimport _ol_tilegrid_WMTS_ from '../tilegrid/wmts.js';\nimport _ol_uri_ from '../uri.js';\n\n/**\n * @classdesc\n * Layer source for tile data from WMTS servers.\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.WMTSOptions} options WMTS options.\n * @api\n */\nvar _ol_source_WMTS_ = function(options) {\n\n  // TODO: add support for TileMatrixLimits\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.version_ = options.version !== undefined ? options.version : '1.0.0';\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.format_ = options.format !== undefined ? options.format : 'image/jpeg';\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.dimensions_ = options.dimensions !== undefined ? options.dimensions : {};\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.layer_ = options.layer;\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.matrixSet_ = options.matrixSet;\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.style_ = options.style;\n\n  var urls = options.urls;\n  if (urls === undefined && options.url !== undefined) {\n    urls = _ol_TileUrlFunction_.expandUrl(options.url);\n  }\n\n  // FIXME: should we guess this requestEncoding from options.url(s)\n  //        structure? that would mean KVP only if a template is not provided.\n\n  /**\n   * @private\n   * @type {ol.source.WMTSRequestEncoding}\n   */\n  this.requestEncoding_ = options.requestEncoding !== undefined ?\n    /** @type {ol.source.WMTSRequestEncoding} */ (options.requestEncoding) :\n    _ol_source_WMTSRequestEncoding_.KVP;\n\n  var requestEncoding = this.requestEncoding_;\n\n  // FIXME: should we create a default tileGrid?\n  // we could issue a getCapabilities xhr to retrieve missing configuration\n  var tileGrid = options.tileGrid;\n\n  // context property names are lower case to allow for a case insensitive\n  // replacement as some services use different naming conventions\n  var context = {\n    'layer': this.layer_,\n    'style': this.style_,\n    'tilematrixset': this.matrixSet_\n  };\n\n  if (requestEncoding == _ol_source_WMTSRequestEncoding_.KVP) {\n    _ol_obj_.assign(context, {\n      'Service': 'WMTS',\n      'Request': 'GetTile',\n      'Version': this.version_,\n      'Format': this.format_\n    });\n  }\n\n  var dimensions = this.dimensions_;\n\n  /**\n   * @param {string} template Template.\n   * @return {ol.TileUrlFunctionType} Tile URL function.\n   * @private\n   */\n  this.createFromWMTSTemplate_ = function(template) {\n\n    // TODO: we may want to create our own appendParams function so that params\n    // order conforms to wmts spec guidance, and so that we can avoid to escape\n    // special template params\n\n    template = (requestEncoding == _ol_source_WMTSRequestEncoding_.KVP) ?\n      _ol_uri_.appendParams(template, context) :\n      template.replace(/\\{(\\w+?)\\}/g, function(m, p) {\n        return (p.toLowerCase() in context) ? context[p.toLowerCase()] : m;\n      });\n\n    return (\n      /**\n       * @param {ol.TileCoord} tileCoord Tile coordinate.\n       * @param {number} pixelRatio Pixel ratio.\n       * @param {ol.proj.Projection} projection Projection.\n       * @return {string|undefined} Tile URL.\n       */\n      function(tileCoord, pixelRatio, projection) {\n        if (!tileCoord) {\n          return undefined;\n        } else {\n          var localContext = {\n            'TileMatrix': tileGrid.getMatrixId(tileCoord[0]),\n            'TileCol': tileCoord[1],\n            'TileRow': -tileCoord[2] - 1\n          };\n          _ol_obj_.assign(localContext, dimensions);\n          var url = template;\n          if (requestEncoding == _ol_source_WMTSRequestEncoding_.KVP) {\n            url = _ol_uri_.appendParams(url, localContext);\n          } else {\n            url = url.replace(/\\{(\\w+?)\\}/g, function(m, p) {\n              return localContext[p];\n            });\n          }\n          return url;\n        }\n      }\n    );\n  };\n\n  var tileUrlFunction = (urls && urls.length > 0) ?\n    _ol_TileUrlFunction_.createFromTileUrlFunctions(\n        urls.map(this.createFromWMTSTemplate_)) :\n    _ol_TileUrlFunction_.nullTileUrlFunction;\n\n  _ol_source_TileImage_.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    logo: options.logo,\n    projection: options.projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileClass: options.tileClass,\n    tileGrid: tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    tilePixelRatio: options.tilePixelRatio,\n    tileUrlFunction: tileUrlFunction,\n    urls: urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : false,\n    transition: options.transition\n  });\n\n  this.setKey(this.getKeyForDimensions_());\n\n};\n\n_ol_.inherits(_ol_source_WMTS_, _ol_source_TileImage_);\n\n/**\n * Set the URLs to use for requests.\n * URLs may contain OCG conform URL Template Variables: {TileMatrix}, {TileRow}, {TileCol}.\n * @override\n */\n_ol_source_WMTS_.prototype.setUrls = function(urls) {\n  this.urls = urls;\n  var key = urls.join('\\n');\n  this.setTileUrlFunction(this.fixedTileUrlFunction ?\n    this.fixedTileUrlFunction.bind(this) :\n    _ol_TileUrlFunction_.createFromTileUrlFunctions(urls.map(this.createFromWMTSTemplate_.bind(this))), key);\n};\n\n/**\n * Get the dimensions, i.e. those passed to the constructor through the\n * \"dimensions\" option, and possibly updated using the updateDimensions\n * method.\n * @return {!Object} Dimensions.\n * @api\n */\n_ol_source_WMTS_.prototype.getDimensions = function() {\n  return this.dimensions_;\n};\n\n\n/**\n * Return the image format of the WMTS source.\n * @return {string} Format.\n * @api\n */\n_ol_source_WMTS_.prototype.getFormat = function() {\n  return this.format_;\n};\n\n\n/**\n * Return the layer of the WMTS source.\n * @return {string} Layer.\n * @api\n */\n_ol_source_WMTS_.prototype.getLayer = function() {\n  return this.layer_;\n};\n\n\n/**\n * Return the matrix set of the WMTS source.\n * @return {string} MatrixSet.\n * @api\n */\n_ol_source_WMTS_.prototype.getMatrixSet = function() {\n  return this.matrixSet_;\n};\n\n\n/**\n * Return the request encoding, either \"KVP\" or \"REST\".\n * @return {ol.source.WMTSRequestEncoding} Request encoding.\n * @api\n */\n_ol_source_WMTS_.prototype.getRequestEncoding = function() {\n  return this.requestEncoding_;\n};\n\n\n/**\n * Return the style of the WMTS source.\n * @return {string} Style.\n * @api\n */\n_ol_source_WMTS_.prototype.getStyle = function() {\n  return this.style_;\n};\n\n\n/**\n * Return the version of the WMTS source.\n * @return {string} Version.\n * @api\n */\n_ol_source_WMTS_.prototype.getVersion = function() {\n  return this.version_;\n};\n\n\n/**\n * @private\n * @return {string} The key for the current dimensions.\n */\n_ol_source_WMTS_.prototype.getKeyForDimensions_ = function() {\n  var i = 0;\n  var res = [];\n  for (var key in this.dimensions_) {\n    res[i++] = key + '-' + this.dimensions_[key];\n  }\n  return res.join('/');\n};\n\n\n/**\n * Update the dimensions.\n * @param {Object} dimensions Dimensions.\n * @api\n */\n_ol_source_WMTS_.prototype.updateDimensions = function(dimensions) {\n  _ol_obj_.assign(this.dimensions_, dimensions);\n  this.setKey(this.getKeyForDimensions_());\n};\n\n\n/**\n * Generate source options from a capabilities object.\n * @param {Object} wmtsCap An object representing the capabilities document.\n * @param {Object} config Configuration properties for the layer.  Defaults for\n *                  the layer will apply if not provided.\n *\n * Required config properties:\n *  - layer - {string} The layer identifier.\n *\n * Optional config properties:\n *  - matrixSet - {string} The matrix set identifier, required if there is\n *       more than one matrix set in the layer capabilities.\n *  - projection - {string} The desired CRS when no matrixSet is specified.\n *       eg: \"EPSG:3857\". If the desired projection is not available,\n *       an error is thrown.\n *  - requestEncoding - {string} url encoding format for the layer. Default is\n *       the first tile url format found in the GetCapabilities response.\n *  - style - {string} The name of the style\n *  - format - {string} Image format for the layer. Default is the first\n *       format returned in the GetCapabilities response.\n *  - crossOrigin - {string|null|undefined} Cross origin. Default is `undefined`.\n * @return {?olx.source.WMTSOptions} WMTS source options object or `null` if the layer was not found.\n * @api\n */\n_ol_source_WMTS_.optionsFromCapabilities = function(wmtsCap, config) {\n  var layers = wmtsCap['Contents']['Layer'];\n  var l = _ol_array_.find(layers, function(elt, index, array) {\n    return elt['Identifier'] == config['layer'];\n  });\n  if (l === null) {\n    return null;\n  }\n  var tileMatrixSets = wmtsCap['Contents']['TileMatrixSet'];\n  var idx, matrixSet, matrixLimits;\n  if (l['TileMatrixSetLink'].length > 1) {\n    if ('projection' in config) {\n      idx = _ol_array_.findIndex(l['TileMatrixSetLink'],\n          function(elt, index, array) {\n            var tileMatrixSet = _ol_array_.find(tileMatrixSets, function(el) {\n              return el['Identifier'] == elt['TileMatrixSet'];\n            });\n            var supportedCRS = tileMatrixSet['SupportedCRS'];\n            var proj1 = _ol_proj_.get(supportedCRS.replace(/urn:ogc:def:crs:(\\w+):(.*:)?(\\w+)$/, '$1:$3')) ||\n                _ol_proj_.get(supportedCRS);\n            var proj2 = _ol_proj_.get(config['projection']);\n            if (proj1 && proj2) {\n              return _ol_proj_.equivalent(proj1, proj2);\n            } else {\n              return supportedCRS == config['projection'];\n            }\n          });\n    } else {\n      idx = _ol_array_.findIndex(l['TileMatrixSetLink'],\n          function(elt, index, array) {\n            return elt['TileMatrixSet'] == config['matrixSet'];\n          });\n    }\n  } else {\n    idx = 0;\n  }\n  if (idx < 0) {\n    idx = 0;\n  }\n  matrixSet = /** @type {string} */\n    (l['TileMatrixSetLink'][idx]['TileMatrixSet']);\n  matrixLimits = /** @type {Array.<Object>} */\n    (l['TileMatrixSetLink'][idx]['TileMatrixSetLimits']);\n\n  var format = /** @type {string} */ (l['Format'][0]);\n  if ('format' in config) {\n    format = config['format'];\n  }\n  idx = _ol_array_.findIndex(l['Style'], function(elt, index, array) {\n    if ('style' in config) {\n      return elt['Title'] == config['style'];\n    } else {\n      return elt['isDefault'];\n    }\n  });\n  if (idx < 0) {\n    idx = 0;\n  }\n  var style = /** @type {string} */ (l['Style'][idx]['Identifier']);\n\n  var dimensions = {};\n  if ('Dimension' in l) {\n    l['Dimension'].forEach(function(elt, index, array) {\n      var key = elt['Identifier'];\n      var value = elt['Default'];\n      if (value === undefined) {\n        value = elt['Value'][0];\n      }\n      dimensions[key] = value;\n    });\n  }\n\n  var matrixSets = wmtsCap['Contents']['TileMatrixSet'];\n  var matrixSetObj = _ol_array_.find(matrixSets, function(elt, index, array) {\n    return elt['Identifier'] == matrixSet;\n  });\n\n  var projection;\n  var code = matrixSetObj['SupportedCRS'];\n  if (code) {\n    projection = _ol_proj_.get(code.replace(/urn:ogc:def:crs:(\\w+):(.*:)?(\\w+)$/, '$1:$3')) ||\n        _ol_proj_.get(code);\n  }\n  if ('projection' in config) {\n    var projConfig = _ol_proj_.get(config['projection']);\n    if (projConfig) {\n      if (!projection || _ol_proj_.equivalent(projConfig, projection)) {\n        projection = projConfig;\n      }\n    }\n  }\n\n  var wgs84BoundingBox = l['WGS84BoundingBox'];\n  var extent, wrapX;\n  if (wgs84BoundingBox !== undefined) {\n    var wgs84ProjectionExtent = _ol_proj_.get('EPSG:4326').getExtent();\n    wrapX = (wgs84BoundingBox[0] == wgs84ProjectionExtent[0] &&\n        wgs84BoundingBox[2] == wgs84ProjectionExtent[2]);\n    extent = _ol_proj_.transformExtent(\n        wgs84BoundingBox, 'EPSG:4326', projection);\n    var projectionExtent = projection.getExtent();\n    if (projectionExtent) {\n      // If possible, do a sanity check on the extent - it should never be\n      // bigger than the validity extent of the projection of a matrix set.\n      if (!_ol_extent_.containsExtent(projectionExtent, extent)) {\n        extent = undefined;\n      }\n    }\n  }\n\n  var tileGrid = _ol_tilegrid_WMTS_.createFromCapabilitiesMatrixSet(\n      matrixSetObj, extent, matrixLimits);\n\n  /** @type {!Array.<string>} */\n  var urls = [];\n  var requestEncoding = config['requestEncoding'];\n  requestEncoding = requestEncoding !== undefined ? requestEncoding : '';\n\n  if ('OperationsMetadata' in wmtsCap && 'GetTile' in wmtsCap['OperationsMetadata']) {\n    var gets = wmtsCap['OperationsMetadata']['GetTile']['DCP']['HTTP']['Get'];\n\n    for (var i = 0, ii = gets.length; i < ii; ++i) {\n      if (gets[i]['Constraint']) {\n        var constraint = _ol_array_.find(gets[i]['Constraint'], function(element) {\n          return element['name'] == 'GetEncoding';\n        });\n        var encodings = constraint['AllowedValues']['Value'];\n\n        if (requestEncoding === '') {\n          // requestEncoding not provided, use the first encoding from the list\n          requestEncoding = encodings[0];\n        }\n        if (requestEncoding === _ol_source_WMTSRequestEncoding_.KVP) {\n          if (_ol_array_.includes(encodings, _ol_source_WMTSRequestEncoding_.KVP)) {\n            urls.push(/** @type {string} */ (gets[i]['href']));\n          }\n        } else {\n          break;\n        }\n      } else if (gets[i]['href']) {\n        requestEncoding = _ol_source_WMTSRequestEncoding_.KVP;\n        urls.push(/** @type {string} */ (gets[i]['href']));\n      }\n    }\n  }\n  if (urls.length === 0) {\n    requestEncoding = _ol_source_WMTSRequestEncoding_.REST;\n    l['ResourceURL'].forEach(function(element) {\n      if (element['resourceType'] === 'tile') {\n        format = element['format'];\n        urls.push(/** @type {string} */ (element['template']));\n      }\n    });\n  }\n\n  return {\n    urls: urls,\n    layer: config['layer'],\n    matrixSet: matrixSet,\n    format: format,\n    projection: projection,\n    requestEncoding: requestEncoding,\n    tileGrid: tileGrid,\n    style: style,\n    dimensions: dimensions,\n    wrapX: wrapX,\n    crossOrigin: config['crossOrigin']\n  };\n};\nexport default _ol_source_WMTS_;\n","import _ol_ from '../index.js';\nimport _ol_LayerType_ from '../layertype.js';\nimport _ol_layer_Layer_ from '../layer/layer.js';\n\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link ol.Object}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @constructor\n * @extends {ol.layer.Layer}\n * @fires ol.render.Event\n * @param {olx.layer.ImageOptions=} opt_options Layer options.\n * @api\n */\nvar _ol_layer_Image_ = function(opt_options) {\n  var options = opt_options ? opt_options : {};\n  _ol_layer_Layer_.call(this,  /** @type {olx.layer.LayerOptions} */ (options));\n\n  /**\n   * The layer type.\n   * @protected\n   * @type {ol.LayerType}\n   */\n  this.type = _ol_LayerType_.IMAGE;\n\n};\n\n_ol_.inherits(_ol_layer_Image_, _ol_layer_Layer_);\n\n\n/**\n * Return the associated {@link ol.source.Image source} of the image layer.\n * @function\n * @return {ol.source.Image} Source.\n * @api\n */\n_ol_layer_Image_.prototype.getSource;\nexport default _ol_layer_Image_;\n","/**\n * Available server types: `'carmentaserver'`, `'geoserver'`, `'mapserver'`,\n *     `'qgis'`. These are servers that have vendor parameters beyond the WMS\n *     specification that OpenLayers can make use of.\n * @enum {string}\n */\nvar _ol_source_WMSServerType_ = {\n  CARMENTA_SERVER: 'carmentaserver',\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGIS: 'qgis'\n};\n\nexport default _ol_source_WMSServerType_;\n","import _ol_ from './index.js';\nimport _ol_ImageBase_ from './imagebase.js';\nimport _ol_ImageState_ from './imagestate.js';\nimport _ol_events_ from './events.js';\nimport _ol_events_EventType_ from './events/eventtype.js';\nimport _ol_extent_ from './extent.js';\n\n/**\n * @constructor\n * @extends {ol.ImageBase}\n * @param {ol.Extent} extent Extent.\n * @param {number|undefined} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {string} src Image source URI.\n * @param {?string} crossOrigin Cross origin.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n */\nvar _ol_Image_ = function(extent, resolution, pixelRatio, src, crossOrigin, imageLoadFunction) {\n\n  _ol_ImageBase_.call(this, extent, resolution, pixelRatio, _ol_ImageState_.IDLE);\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.src_ = src;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement|Image|HTMLVideoElement}\n   */\n  this.image_ = new Image();\n  if (crossOrigin !== null) {\n    this.image_.crossOrigin = crossOrigin;\n  }\n\n  /**\n   * @private\n   * @type {Array.<ol.EventsKey>}\n   */\n  this.imageListenerKeys_ = null;\n\n  /**\n   * @protected\n   * @type {ol.ImageState}\n   */\n  this.state = _ol_ImageState_.IDLE;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = imageLoadFunction;\n\n};\n\n_ol_.inherits(_ol_Image_, _ol_ImageBase_);\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_Image_.prototype.getImage = function() {\n  return this.image_;\n};\n\n\n/**\n * Tracks loading or read errors.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageError_ = function() {\n  this.state = _ol_ImageState_.ERROR;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Tracks successful image load.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageLoad_ = function() {\n  if (this.resolution === undefined) {\n    this.resolution = _ol_extent_.getHeight(this.extent) / this.image_.height;\n  }\n  this.state = _ol_ImageState_.LOADED;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Load the image or retry if loading previously failed.\n * Loading is taken care of by the tile queue, and calling this method is\n * only needed for preloading or for reloading in case of an error.\n * @override\n * @api\n */\n_ol_Image_.prototype.load = function() {\n  if (this.state == _ol_ImageState_.IDLE || this.state == _ol_ImageState_.ERROR) {\n    this.state = _ol_ImageState_.LOADING;\n    this.changed();\n    this.imageListenerKeys_ = [\n      _ol_events_.listenOnce(this.image_, _ol_events_EventType_.ERROR,\n          this.handleImageError_, this),\n      _ol_events_.listenOnce(this.image_, _ol_events_EventType_.LOAD,\n          this.handleImageLoad_, this)\n    ];\n    this.imageLoadFunction_(this, this.src_);\n  }\n};\n\n\n/**\n * @param {HTMLCanvasElement|Image|HTMLVideoElement} image Image.\n */\n_ol_Image_.prototype.setImage = function(image) {\n  this.image_ = image;\n};\n\n\n/**\n * Discards event handlers which listen for load completion or errors.\n *\n * @private\n */\n_ol_Image_.prototype.unlistenImage_ = function() {\n  this.imageListenerKeys_.forEach(_ol_events_.unlistenByKey);\n  this.imageListenerKeys_ = null;\n};\nexport default _ol_Image_;\n","import _ol_ from '../index.js';\nimport _ol_ImageBase_ from '../imagebase.js';\nimport _ol_ImageState_ from '../imagestate.js';\nimport _ol_events_ from '../events.js';\nimport _ol_events_EventType_ from '../events/eventtype.js';\nimport _ol_extent_ from '../extent.js';\nimport _ol_reproj_ from '../reproj.js';\nimport _ol_reproj_Triangulation_ from '../reproj/triangulation.js';\n\n/**\n * @classdesc\n * Class encapsulating single reprojected image.\n * See {@link ol.source.Image}.\n *\n * @constructor\n * @extends {ol.ImageBase}\n * @param {ol.proj.Projection} sourceProj Source projection (of the data).\n * @param {ol.proj.Projection} targetProj Target projection.\n * @param {ol.Extent} targetExtent Target extent.\n * @param {number} targetResolution Target resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.ReprojImageFunctionType} getImageFunction\n *     Function returning source images (extent, resolution, pixelRatio).\n */\nvar _ol_reproj_Image_ = function(sourceProj, targetProj,\n    targetExtent, targetResolution, pixelRatio, getImageFunction) {\n\n  /**\n   * @private\n   * @type {ol.proj.Projection}\n   */\n  this.targetProj_ = targetProj;\n\n  /**\n   * @private\n   * @type {ol.Extent}\n   */\n  this.maxSourceExtent_ = sourceProj.getExtent();\n  var maxTargetExtent = targetProj.getExtent();\n\n  var limitedTargetExtent = maxTargetExtent ?\n    _ol_extent_.getIntersection(targetExtent, maxTargetExtent) : targetExtent;\n\n  var targetCenter = _ol_extent_.getCenter(limitedTargetExtent);\n  var sourceResolution = _ol_reproj_.calculateSourceResolution(\n      sourceProj, targetProj, targetCenter, targetResolution);\n\n  var errorThresholdInPixels = _ol_.DEFAULT_RASTER_REPROJECTION_ERROR_THRESHOLD;\n\n  /**\n   * @private\n   * @type {!ol.reproj.Triangulation}\n   */\n  this.triangulation_ = new _ol_reproj_Triangulation_(\n      sourceProj, targetProj, limitedTargetExtent, this.maxSourceExtent_,\n      sourceResolution * errorThresholdInPixels);\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.targetResolution_ = targetResolution;\n\n  /**\n   * @private\n   * @type {ol.Extent}\n   */\n  this.targetExtent_ = targetExtent;\n\n  var sourceExtent = this.triangulation_.calculateSourceExtent();\n\n  /**\n   * @private\n   * @type {ol.ImageBase}\n   */\n  this.sourceImage_ =\n      getImageFunction(sourceExtent, sourceResolution, pixelRatio);\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.sourcePixelRatio_ =\n      this.sourceImage_ ? this.sourceImage_.getPixelRatio() : 1;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement}\n   */\n  this.canvas_ = null;\n\n  /**\n   * @private\n   * @type {?ol.EventsKey}\n   */\n  this.sourceListenerKey_ = null;\n\n\n  var state = _ol_ImageState_.LOADED;\n\n  if (this.sourceImage_) {\n    state = _ol_ImageState_.IDLE;\n  }\n\n  _ol_ImageBase_.call(this, targetExtent, targetResolution, this.sourcePixelRatio_, state);\n};\n\n_ol_.inherits(_ol_reproj_Image_, _ol_ImageBase_);\n\n\n/**\n * @inheritDoc\n */\n_ol_reproj_Image_.prototype.disposeInternal = function() {\n  if (this.state == _ol_ImageState_.LOADING) {\n    this.unlistenSource_();\n  }\n  _ol_ImageBase_.prototype.disposeInternal.call(this);\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_reproj_Image_.prototype.getImage = function() {\n  return this.canvas_;\n};\n\n\n/**\n * @return {ol.proj.Projection} Projection.\n */\n_ol_reproj_Image_.prototype.getProjection = function() {\n  return this.targetProj_;\n};\n\n\n/**\n * @private\n */\n_ol_reproj_Image_.prototype.reproject_ = function() {\n  var sourceState = this.sourceImage_.getState();\n  if (sourceState == _ol_ImageState_.LOADED) {\n    var width = _ol_extent_.getWidth(this.targetExtent_) / this.targetResolution_;\n    var height =\n        _ol_extent_.getHeight(this.targetExtent_) / this.targetResolution_;\n\n    this.canvas_ = _ol_reproj_.render(width, height, this.sourcePixelRatio_,\n        this.sourceImage_.getResolution(), this.maxSourceExtent_,\n        this.targetResolution_, this.targetExtent_, this.triangulation_, [{\n          extent: this.sourceImage_.getExtent(),\n          image: this.sourceImage_.getImage()\n        }], 0);\n  }\n  this.state = sourceState;\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_reproj_Image_.prototype.load = function() {\n  if (this.state == _ol_ImageState_.IDLE) {\n    this.state = _ol_ImageState_.LOADING;\n    this.changed();\n\n    var sourceState = this.sourceImage_.getState();\n    if (sourceState == _ol_ImageState_.LOADED ||\n        sourceState == _ol_ImageState_.ERROR) {\n      this.reproject_();\n    } else {\n      this.sourceListenerKey_ = _ol_events_.listen(this.sourceImage_,\n          _ol_events_EventType_.CHANGE, function(e) {\n            var sourceState = this.sourceImage_.getState();\n            if (sourceState == _ol_ImageState_.LOADED ||\n                sourceState == _ol_ImageState_.ERROR) {\n              this.unlistenSource_();\n              this.reproject_();\n            }\n          }, this);\n      this.sourceImage_.load();\n    }\n  }\n};\n\n\n/**\n * @private\n */\n_ol_reproj_Image_.prototype.unlistenSource_ = function() {\n  _ol_events_.unlistenByKey(/** @type {!ol.EventsKey} */ (this.sourceListenerKey_));\n  this.sourceListenerKey_ = null;\n};\nexport default _ol_reproj_Image_;\n","import _ol_ from '../index.js';\nimport _ol_ImageState_ from '../imagestate.js';\nimport _ol_array_ from '../array.js';\nimport _ol_events_Event_ from '../events/event.js';\nimport _ol_extent_ from '../extent.js';\nimport _ol_proj_ from '../proj.js';\nimport _ol_reproj_Image_ from '../reproj/image.js';\nimport _ol_source_Source_ from '../source/source.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing a single image.\n *\n * @constructor\n * @abstract\n * @extends {ol.source.Source}\n * @param {ol.SourceImageOptions} options Single image source options.\n * @api\n */\nvar _ol_source_Image_ = function(options) {\n  _ol_source_Source_.call(this, {\n    attributions: options.attributions,\n    extent: options.extent,\n    logo: options.logo,\n    projection: options.projection,\n    state: options.state\n  });\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.resolutions_ = options.resolutions !== undefined ?\n    options.resolutions : null;\n\n\n  /**\n   * @private\n   * @type {ol.reproj.Image}\n   */\n  this.reprojectedImage_ = null;\n\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.reprojectedRevision_ = 0;\n};\n\n_ol_.inherits(_ol_source_Image_, _ol_source_Source_);\n\n\n/**\n * @return {Array.<number>} Resolutions.\n * @override\n */\n_ol_source_Image_.prototype.getResolutions = function() {\n  return this.resolutions_;\n};\n\n\n/**\n * @protected\n * @param {number} resolution Resolution.\n * @return {number} Resolution.\n */\n_ol_source_Image_.prototype.findNearestResolution = function(resolution) {\n  if (this.resolutions_) {\n    var idx = _ol_array_.linearFindNearest(this.resolutions_, resolution, 0);\n    resolution = this.resolutions_[idx];\n  }\n  return resolution;\n};\n\n\n/**\n * @param {ol.Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @return {ol.ImageBase} Single image.\n */\n_ol_source_Image_.prototype.getImage = function(extent, resolution, pixelRatio, projection) {\n  var sourceProjection = this.getProjection();\n  if (!_ol_.ENABLE_RASTER_REPROJECTION ||\n      !sourceProjection ||\n      !projection ||\n      _ol_proj_.equivalent(sourceProjection, projection)) {\n    if (sourceProjection) {\n      projection = sourceProjection;\n    }\n    return this.getImageInternal(extent, resolution, pixelRatio, projection);\n  } else {\n    if (this.reprojectedImage_) {\n      if (this.reprojectedRevision_ == this.getRevision() &&\n          _ol_proj_.equivalent(\n              this.reprojectedImage_.getProjection(), projection) &&\n          this.reprojectedImage_.getResolution() == resolution &&\n          _ol_extent_.equals(this.reprojectedImage_.getExtent(), extent)) {\n        return this.reprojectedImage_;\n      }\n      this.reprojectedImage_.dispose();\n      this.reprojectedImage_ = null;\n    }\n\n    this.reprojectedImage_ = new _ol_reproj_Image_(\n        sourceProjection, projection, extent, resolution, pixelRatio,\n        function(extent, resolution, pixelRatio) {\n          return this.getImageInternal(extent, resolution,\n              pixelRatio, sourceProjection);\n        }.bind(this));\n    this.reprojectedRevision_ = this.getRevision();\n\n    return this.reprojectedImage_;\n  }\n};\n\n\n/**\n * @abstract\n * @param {ol.Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @return {ol.ImageBase} Single image.\n * @protected\n */\n_ol_source_Image_.prototype.getImageInternal = function(extent, resolution, pixelRatio, projection) {};\n\n\n/**\n * Handle image change events.\n * @param {ol.events.Event} event Event.\n * @protected\n */\n_ol_source_Image_.prototype.handleImageChange = function(event) {\n  var image = /** @type {ol.Image} */ (event.target);\n  switch (image.getState()) {\n    case _ol_ImageState_.LOADING:\n      this.dispatchEvent(\n          new _ol_source_Image_.Event(_ol_source_Image_.EventType_.IMAGELOADSTART,\n              image));\n      break;\n    case _ol_ImageState_.LOADED:\n      this.dispatchEvent(\n          new _ol_source_Image_.Event(_ol_source_Image_.EventType_.IMAGELOADEND,\n              image));\n      break;\n    case _ol_ImageState_.ERROR:\n      this.dispatchEvent(\n          new _ol_source_Image_.Event(_ol_source_Image_.EventType_.IMAGELOADERROR,\n              image));\n      break;\n    default:\n      // pass\n  }\n};\n\n\n/**\n * Default image load function for image sources that use ol.Image image\n * instances.\n * @param {ol.Image} image Image.\n * @param {string} src Source.\n */\n_ol_source_Image_.defaultImageLoadFunction = function(image, src) {\n  image.getImage().src = src;\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link ol.source.Image} instances are instances of this\n * type.\n *\n * @constructor\n * @extends {ol.events.Event}\n * @implements {oli.source.ImageEvent}\n * @param {string} type Type.\n * @param {ol.Image} image The image.\n */\n_ol_source_Image_.Event = function(type, image) {\n\n  _ol_events_Event_.call(this, type);\n\n  /**\n   * The image related to the event.\n   * @type {ol.Image}\n   * @api\n   */\n  this.image = image;\n\n};\n_ol_.inherits(_ol_source_Image_.Event, _ol_events_Event_);\n\n\n/**\n * @enum {string}\n * @private\n */\n_ol_source_Image_.EventType_ = {\n\n  /**\n   * Triggered when an image starts loading.\n   * @event ol.source.Image.Event#imageloadstart\n   * @api\n   */\n  IMAGELOADSTART: 'imageloadstart',\n\n  /**\n   * Triggered when an image finishes loading.\n   * @event ol.source.Image.Event#imageloadend\n   * @api\n   */\n  IMAGELOADEND: 'imageloadend',\n\n  /**\n   * Triggered if image loading results in an error.\n   * @event ol.source.Image.Event#imageloaderror\n   * @api\n   */\n  IMAGELOADERROR: 'imageloaderror'\n\n};\nexport default _ol_source_Image_;\n","// FIXME cannot be shared between maps with different projections\n\nimport _ol_ from '../index.js';\nimport _ol_Image_ from '../image.js';\nimport _ol_asserts_ from '../asserts.js';\nimport _ol_events_ from '../events.js';\nimport _ol_events_EventType_ from '../events/eventtype.js';\nimport _ol_extent_ from '../extent.js';\nimport _ol_obj_ from '../obj.js';\nimport _ol_proj_ from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport _ol_source_Image_ from '../source/image.js';\nimport _ol_source_WMSServerType_ from '../source/wmsservertype.js';\nimport _ol_string_ from '../string.js';\nimport _ol_uri_ from '../uri.js';\n\n/**\n * @classdesc\n * Source for WMS servers providing single, untiled images.\n *\n * @constructor\n * @fires ol.source.Image.Event\n * @extends {ol.source.Image}\n * @param {olx.source.ImageWMSOptions=} opt_options Options.\n * @api\n */\nvar _ol_source_ImageWMS_ = function(opt_options) {\n\n  var options = opt_options || {};\n\n  _ol_source_Image_.call(this, {\n    attributions: options.attributions,\n    logo: options.logo,\n    projection: options.projection,\n    resolutions: options.resolutions\n  });\n\n  /**\n   * @private\n   * @type {?string}\n   */\n  this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.url_ = options.url;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\n    options.imageLoadFunction : _ol_source_Image_.defaultImageLoadFunction;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = options.params || {};\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n  this.updateV13_();\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Image}\n   */\n  this.image_ = null;\n\n  /**\n   * @private\n   * @type {ol.Size}\n   */\n  this.imageSize_ = [0, 0];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.renderedRevision_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n\n};\n\n_ol_.inherits(_ol_source_ImageWMS_, _ol_source_Image_);\n\n\n/**\n * @const\n * @type {ol.Size}\n * @private\n */\n_ol_source_ImageWMS_.GETFEATUREINFO_IMAGE_SIZE_ = [101, 101];\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\n_ol_source_ImageWMS_.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  if (this.url_ === undefined) {\n    return undefined;\n  }\n  var projectionObj = _ol_proj_.get(projection);\n  var sourceProjectionObj = this.getProjection();\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    resolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, resolution);\n    coordinate = _ol_proj_.transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  var extent = _ol_extent_.getForViewAndSize(\n      coordinate, resolution, 0,\n      _ol_source_ImageWMS_.GETFEATUREINFO_IMAGE_SIZE_);\n\n  var baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': _ol_.DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  _ol_obj_.assign(baseParams, this.params_, params);\n\n  var x = Math.floor((coordinate[0] - extent[0]) / resolution);\n  var y = Math.floor((extent[3] - coordinate[1]) / resolution);\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(\n      extent, _ol_source_ImageWMS_.GETFEATUREINFO_IMAGE_SIZE_,\n      1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\n_ol_source_ImageWMS_.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_source_ImageWMS_.prototype.getImageInternal = function(extent, resolution, pixelRatio, projection) {\n\n  if (this.url_ === undefined) {\n    return null;\n  }\n\n  resolution = this.findNearestResolution(resolution);\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  var imageResolution = resolution / pixelRatio;\n\n  var center = _ol_extent_.getCenter(extent);\n  var viewWidth = Math.ceil(_ol_extent_.getWidth(extent) / imageResolution);\n  var viewHeight = Math.ceil(_ol_extent_.getHeight(extent) / imageResolution);\n  var viewExtent = _ol_extent_.getForViewAndSize(center, imageResolution, 0,\n      [viewWidth, viewHeight]);\n  var requestWidth = Math.ceil(this.ratio_ * _ol_extent_.getWidth(extent) / imageResolution);\n  var requestHeight = Math.ceil(this.ratio_ * _ol_extent_.getHeight(extent) / imageResolution);\n  var requestExtent = _ol_extent_.getForViewAndSize(center, imageResolution, 0,\n      [requestWidth, requestHeight]);\n\n  var image = this.image_;\n  if (image &&\n      this.renderedRevision_ == this.getRevision() &&\n      image.getResolution() == resolution &&\n      image.getPixelRatio() == pixelRatio &&\n      _ol_extent_.containsExtent(image.getExtent(), viewExtent)) {\n    return image;\n  }\n\n  var params = {\n    'SERVICE': 'WMS',\n    'VERSION': _ol_.DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  _ol_obj_.assign(params, this.params_);\n\n  this.imageSize_[0] = Math.round(_ol_extent_.getWidth(requestExtent) / imageResolution);\n  this.imageSize_[1] = Math.round(_ol_extent_.getHeight(requestExtent) / imageResolution);\n\n  var url = this.getRequestUrl_(requestExtent, this.imageSize_, pixelRatio,\n      projection, params);\n\n  this.image_ = new _ol_Image_(requestExtent, resolution, pixelRatio,\n      url, this.crossOrigin_, this.imageLoadFunction_);\n\n  this.renderedRevision_ = this.getRevision();\n\n  _ol_events_.listen(this.image_, _ol_events_EventType_.CHANGE,\n      this.handleImageChange, this);\n\n  return this.image_;\n\n};\n\n\n/**\n * Return the image load function of the source.\n * @return {ol.ImageLoadFunctionType} The image load function.\n * @api\n */\n_ol_source_ImageWMS_.prototype.getImageLoadFunction = function() {\n  return this.imageLoadFunction_;\n};\n\n\n/**\n * @param {ol.Extent} extent Extent.\n * @param {ol.Size} size Size.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string} Request URL.\n * @private\n */\n_ol_source_ImageWMS_.prototype.getRequestUrl_ = function(extent, size, pixelRatio, projection, params) {\n\n  _ol_asserts_.assert(this.url_ !== undefined, 9); // `url` must be configured or set using `#setUrl()`\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case _ol_source_WMSServerType_.GEOSERVER:\n        var dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case _ol_source_WMSServerType_.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case _ol_source_WMSServerType_.CARMENTA_SERVER:\n      case _ol_source_WMSServerType_.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        _ol_asserts_.assert(false, 8); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  params['WIDTH'] = size[0];\n  params['HEIGHT'] = size[1];\n\n  var axisOrientation = projection.getAxisOrientation();\n  var bbox;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    bbox = [extent[1], extent[0], extent[3], extent[2]];\n  } else {\n    bbox = extent;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  return _ol_uri_.appendParams(/** @type {string} */ (this.url_), params);\n};\n\n\n/**\n * Return the URL used for this WMS source.\n * @return {string|undefined} URL.\n * @api\n */\n_ol_source_ImageWMS_.prototype.getUrl = function() {\n  return this.url_;\n};\n\n\n/**\n * Set the image load function of the source.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n * @api\n */\n_ol_source_ImageWMS_.prototype.setImageLoadFunction = function(\n    imageLoadFunction) {\n  this.image_ = null;\n  this.imageLoadFunction_ = imageLoadFunction;\n  this.changed();\n};\n\n\n/**\n * Set the URL to use for requests.\n * @param {string|undefined} url URL.\n * @api\n */\n_ol_source_ImageWMS_.prototype.setUrl = function(url) {\n  if (url != this.url_) {\n    this.url_ = url;\n    this.image_ = null;\n    this.changed();\n  }\n};\n\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\n_ol_source_ImageWMS_.prototype.updateParams = function(params) {\n  _ol_obj_.assign(this.params_, params);\n  this.updateV13_();\n  this.image_ = null;\n  this.changed();\n};\n\n\n/**\n * @private\n */\n_ol_source_ImageWMS_.prototype.updateV13_ = function() {\n  var version = this.params_['VERSION'] || _ol_.DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default _ol_source_ImageWMS_;\n","import _ol_ from '../index.js';\nimport _ol_source_XYZ_ from '../source/xyz.js';\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n *\n * @constructor\n * @extends {ol.source.XYZ}\n * @param {olx.source.OSMOptions=} opt_options Open Street Map options.\n * @api\n */\nvar _ol_source_OSM_ = function(opt_options) {\n\n  var options = opt_options || {};\n\n  var attributions;\n  if (options.attributions !== undefined) {\n    attributions = options.attributions;\n  } else {\n    attributions = [_ol_source_OSM_.ATTRIBUTION];\n  }\n\n  var crossOrigin = options.crossOrigin !== undefined ?\n    options.crossOrigin : 'anonymous';\n\n  var url = options.url !== undefined ?\n    options.url : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n  _ol_source_XYZ_.call(this, {\n    attributions: attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: crossOrigin,\n    opaque: options.opaque !== undefined ? options.opaque : true,\n    maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileLoadFunction: options.tileLoadFunction,\n    url: url,\n    wrapX: options.wrapX\n  });\n\n};\n\n_ol_.inherits(_ol_source_OSM_, _ol_source_XYZ_);\n\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\n_ol_source_OSM_.ATTRIBUTION = '&copy; ' +\n      '<a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> ' +\n      'contributors.';\nexport default _ol_source_OSM_;\n","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[_c('el-breadcrumb',{attrs:{\"separator-class\":\"el-icon-arrow-right\"}},[_c('el-breadcrumb-item',{attrs:{\"to\":{ path: '/home' }}},[_vm._v(\"首页\")]),_c('el-breadcrumb-item',[_vm._v(\"OpenLayers\")]),_c('el-breadcrumb-item',[_vm._v(\"图层多选控件\")])],1),_c('el-card',[_c('div',{staticStyle:{\"width\":\"100%\",\"height\":\"100%\"},attrs:{\"id\":\"map\"}},[_c('div',{attrs:{\"id\":\"mouse-position\"}}),_c('div',{staticClass:\"layerControl\",attrs:{\"id\":\"layerControl\"}},[_c('div',{staticClass:\"title\"},[_c('label',[_vm._v(\"图层列表\")])]),_c('ul',{staticClass:\"layerTree\",attrs:{\"id\":\"layerTree\"}})])])])],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div>\r\n    <!--面包屑导航区域-->\r\n    <el-breadcrumb separator-class=\"el-icon-arrow-right\">\r\n      <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\r\n      <el-breadcrumb-item>OpenLayers</el-breadcrumb-item>\r\n      <el-breadcrumb-item>图层多选控件</el-breadcrumb-item>\r\n    </el-breadcrumb>\r\n    <!--卡片区域-->\r\n    <el-card>\r\n      <div id=\"map\" style=\"width:100%;height:100%\">\r\n        <div id=\"mouse-position\"></div>\r\n        <div id=\"layerControl\" class=\"layerControl\">\r\n          <div class=\"title\"><label>图层列表</label></div>\r\n          <ul id=\"layerTree\" class=\"layerTree\"></ul>\r\n        </div>\r\n      </div>\r\n    </el-card>\r\n  </div>\r\n\r\n</template>\r\n<script>\r\nimport Map from 'ol/map';\r\nimport View from 'ol/view';\r\nimport TileLayer from 'ol/layer/tile';\r\nimport ImageLayer from 'ol/layer/image';\r\nimport TileGrid from 'ol/tilegrid/tilegrid';\r\nimport WMTSGrid from 'ol/tilegrid/wmts';\r\nimport OSM from \"ol/source/osm\";\r\nimport XYZ from 'ol/source/xyz';\r\nimport TileImage from 'ol/source/tileimage';\r\nimport ImageWMS from 'ol/source/imagewms';\r\nimport TileWMS from 'ol/source/tilewms';\r\nimport WMTS from 'ol/source/wmts';\r\nimport proj from 'ol/proj';\r\nimport extent from 'ol/extent';\r\nexport default {\r\n  data() {\r\n    return {\r\n    }\r\n  },\r\n  created() {\r\n  },\r\n  mounted() {\r\n    this.initMap()\r\n  },\r\n  methods: {\r\n    initMap() {\r\n\r\n      //实例化Map对象加载地图\r\n      let map = new Map({\r\n        target: 'map', //地图容器div的ID\r\n        //地图容器中加载的图层\r\n        layers: [this.osmMap(), this.baiduMap(), this.tianMap(), this.wmsImage(), this.wmsTile(), this.wmsGrid(), this.wmtsMap()],\r\n        //地图视图设置\r\n        view: new View({\r\n          center: [0, 0], //地图初始中心点\r\n          zoom: 2 //地图初始显示级别\r\n        })\r\n      });\r\n      console.log(map);\r\n      //加载图层列表数据\r\n      this.loadLayersControl(map, \"layerTree\");\r\n    },\r\n    //OSM地图\r\n    osmMap() {\r\n\r\n      const openStreetMap = new TileLayer({\r\n        source: new OSM(),\r\n        visible: true,\r\n        name: 'OSM地图'\r\n      })\r\n      return openStreetMap;\r\n    },\r\n    //百度地图\r\n    baiduMap() {\r\n\r\n      let projection = proj.get(\"EPSG:3857\");\r\n      let resolutions = [];\r\n      for (let i = 0; i < 19; i++) {\r\n        resolutions[i] = Math.pow(2, 18 - i);\r\n      }\r\n      let tilegrid = new TileGrid({\r\n        origin: [0, 0],\r\n        resolutions: resolutions\r\n      });\r\n\r\n      let baidu_source = new TileImage({\r\n        projection: projection,\r\n        tileGrid: tilegrid,\r\n        tileUrlFunction: function (tileCoord, pixelRatio, proj) {\r\n          if (!tileCoord) {\r\n            return '';\r\n          }\r\n          let z = tileCoord[0];\r\n          let x = tileCoord[1];\r\n          let y = -tileCoord[2] - 1;\r\n          return \"http://online1.map.bdimg.com/onlinelabel/?qt=tile&x=\" + x + \"&y=\" + y + \"&z=\" + z + \"&styles=pl&scaler=1&udt=20191119\";\r\n        },\r\n      });\r\n\r\n      const baiduMap = new TileLayer({\r\n        source: baidu_source,\r\n        visible: true,\r\n        name: '百度地图'\r\n      })\r\n      return baiduMap;\r\n    },\r\n    //天地图\r\n    tianMap() {\r\n\r\n      const tianMap = new TileLayer({\r\n        source: new XYZ({\r\n          url: \"http://t4.tianditu.gov.cn/DataServer?T=vec_w&x={x}&y={y}&l={z}&tk=49ea1deec0ffd88ef13a3f69987e9a63\"\r\n        }),\r\n        visible: true,\r\n        name: '天地图'\r\n      })\r\n      return tianMap;\r\n    },\r\n    //wmsImage服务\r\n    wmsImage() {\r\n\r\n      let wmsImageSource = new ImageWMS({\r\n        url: 'https://ahocelet.com/geoserver/wms', //WMS服务基地址\r\n        params: { 'LAYERS': 'topp:states' }, //图层参数\r\n        ratio: 1,\r\n        serverType: 'geoserver', //服务类型\r\n      });\r\n      return new ImageLayer({\r\n        extent: [-13884991, 2870341, -7455066, 6338219], //数据范围\r\n        source: wmsImageSource,\r\n        visible: true,\r\n        name: 'wmsImage地图'\r\n      });\r\n    },\r\n    //wmsTile服务\r\n    wmsTile() {\r\n\r\n      let wmsTileSource = new TileWMS({\r\n        url: 'https://ahocelet.com/geoserver/wms', //WMS服务地址\r\n        params: { 'LAYERS': 'ne:ne_10m_admin_0_countries', 'TILED': true }, //图层等参数\r\n        serverType: 'geoserver'//服务类型\r\n      });\r\n      return new TileLayer({\r\n        source: wmsTileSource,\r\n        visible: true,\r\n        name: 'wmsTile地图'\r\n      });\r\n    },\r\n    //wmsGrid服务\r\n    wmsGrid() {\r\n      //通过范围计算得到分辨率数组对象resolutions\r\n      let projExtent = proj.get('EPSG:3857').getExtent();\r\n      let startResolution = extent.getWidth(projExtent) / 256;\r\n      let resolutions = new Array(22);\r\n      for (let i = 0, ii = resolutions.length; i < ii; ++i) {\r\n        resolutions[i] = startResolution / Math.pow(2, i);\r\n      }\r\n      //实例化ol.tilegrid.TileGrid对象\r\n      let tileGrid = new TileGrid({\r\n        extent: [-13884991, 2870341, -7455066, 6338219], //数据范围\r\n        resolutions: resolutions, //分辨率数组\r\n        tileSize: [512, 256] //瓦片大小\r\n      });\r\n      //使用TileLayer实例化WMS图层对象，设置ol.source.TileWMS的tileGrid参数\r\n      let wmsGridSource = new TileWMS({\r\n        url: 'https://ahocelet.com/geoserver/wms', //WMS服务地址\r\n        params: { 'LAYERS': 'topp:states', 'TILED': true }, //图层等参数\r\n        serverType: 'geoserver', //服务类型\r\n        tileGrid: tileGrid  //瓦片网格对象参数（瓦片大小为512x256）\r\n      })\r\n\r\n      return new TileLayer({\r\n        source: wmsGridSource,\r\n        visible: true,\r\n        name: 'wmsGrid地图'\r\n      });\r\n    },\r\n    //WMTS服务\r\n    wmtsMap() {\r\n      //通过范围计算得到分辨率数组\r\n      let projection = proj.get('EPSG:3857');\r\n      let projectionExtent = projection.getExtent();\r\n      let size = extent.getWidth(projectionExtent) / 256;\r\n      let resolutions = new Array(14);\r\n      let matrixIds = new Array(14);\r\n      for (let z = 0; z < 14; ++z) {\r\n        // generate resolutions and matrixIds arrays for this WMTS\r\n        resolutions[z] = size / Math.pow(2, z);\r\n        matrixIds[z] = z;\r\n      }\r\n      let wmtsSource = new WMTS({\r\n        attributions: // 数据源信息\r\n          'Tiles © <a href=\"https://services.arcgisonline.com/arcgis/rest/' +\r\n          'services/Demographics/USA_Population_Density/MapServer/\">ArcGIS</a>',\r\n        url: //WMTS服务基地址\r\n          'https://services.arcgisonline.com/arcgis/rest/' +\r\n          'services/Demographics/USA_Population_Density/MapServer/WMTS/',\r\n        layer: '0',\r\n        matrixSet: 'EPSG:3857', //投影坐标系设置矩阵\r\n        format: 'image/png', //图片格式\r\n        projection: projection, //数据的投影坐标系\r\n        //瓦片网格对象\r\n        tileGrid: new WMTSGrid({\r\n          origin: new extent.getTopLeft(projectionExtent), //原点（左上角）\r\n          resolutions: resolutions, //分辨率数组\r\n          matrixIds: matrixIds, //矩阵标识列表，与地图级数保持一致\r\n        }),\r\n        style: 'default',\r\n        wrapX: true,\r\n      })\r\n      //实例化WMTS服务图层对象（TileLayer，ol.source.WMTS）\r\n      return new TileLayer({\r\n        opacity: 0.7, //图层透明度\r\n        source: wmtsSource,\r\n        visible: true,\r\n        name: 'wmtsMap地图'\r\n      });\r\n    },\r\n\r\n    /**\r\n     * 加载图层列表数据\r\n     * @param {ol.Map} map 地图对象\r\n     * @param {string} id 图层列表容器ID\r\n     */\r\n    loadLayersControl(map, id) {\r\n      let layer = new Array();  //map中的图层数组\r\n      let layerName = new Array();  //图层名称数组\r\n      let layerVisibility = new Array();  //图层可见属性数组\r\n      let treeContent = document.getElementById(id); //图层目录容器\r\n      let layers = map.getLayers(); //获取地图中所有图层\r\n      for (let i = 0; i < layers.getLength(); i++) {\r\n        //获取每个图层的名称、是否可见属性\r\n        layer[i] = layers.item(i);\r\n        layerName[i] = layer[i].get('name');\r\n        layerVisibility[i] = layer[i].getVisible();\r\n\r\n        //新增li元素，用来承载图层项\r\n        let elementLi = document.createElement('li');\r\n        treeContent.appendChild(elementLi); // 添加子节点\r\n        //创建复选框元素\r\n        let elementInput = document.createElement('input');\r\n        elementInput.type = \"checkbox\";\r\n        elementInput.name = \"layers\";\r\n        elementLi.appendChild(elementInput);\r\n        //创建label元素\r\n        let elementLable = document.createElement('label');\r\n        elementLable.className = \"layer\";\r\n        //设置图层名称\r\n        this.setInnerText(elementLable, layerName[i]);\r\n        elementLi.appendChild(elementLable);\r\n\r\n        //设置图层默认显示状态\r\n        if (layerVisibility[i]) {\r\n          elementInput.checked = true;\r\n        }\r\n        this.addChangeEvent(elementInput, layer[i]);  //为checkbox添加变更事件\r\n      }\r\n    },\r\n    /**\r\n     * 为checkbox元素绑定变更事件\r\n     * @param {input} element checkbox元素\r\n     * @param {ol.layer.Layer} layer 图层对象\r\n     */\r\n    addChangeEvent(element, layer) {\r\n      element.onclick = function () {\r\n        if (element.checked) {\r\n          layer.setVisible(true); //显示图层\r\n        } else {\r\n          layer.setVisible(false); //不显示图层\r\n        }\r\n      };\r\n    },\r\n    /**\r\n     * 动态设置元素文本内容（兼容）\r\n     */\r\n    setInnerText(element, text) {\r\n      if (typeof element.textContent == \"string\") {\r\n        element.textContent = text;\r\n      } else {\r\n        element.innerText = text;\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n/* 图层控件层样式设置 */\r\n.layerControl {\r\n  position: absolute;\r\n  bottom: 5px;\r\n  min-width: 200px;\r\n  max-height: 250px;\r\n  right: 40px;\r\n  top: 130px;\r\n  z-index: 2001;\r\n  /*在地图容器中的层，要设置z-index的值让其显示在地图上层*/\r\n  color: #ffffff;\r\n  background-color: #4c4e5a;\r\n  border-width: 10px;\r\n  /*边缘的宽度*/\r\n  border-radius: 10px;\r\n  /*圆角的大小 */\r\n  border-color: #000 #000 #000 #000;\r\n  /*边框颜色*/\r\n}\r\n\r\n.layerControl .title {\r\n  font-weight: bold;\r\n  font-size: 15px;\r\n  margin: 10px;\r\n}\r\n\r\n.layerTree li {\r\n  list-style: none;\r\n  margin: 5px 10px;\r\n}\r\n\r\n/* 鼠标位置控件层样式设置 */\r\n#mouse-position {\r\n  float: left;\r\n  position: absolute;\r\n  bottom: 5px;\r\n  width: 200px;\r\n  height: 20px;\r\n  z-index: 2000;\r\n  /*在地图容器中的层，要设置z-index的值让其显示在地图上层*/\r\n}\r\n</style>\r\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./LayerCheckBox.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./LayerCheckBox.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./LayerCheckBox.vue?vue&type=template&id=5097ea8c&scoped=true&\"\nimport script from \"./LayerCheckBox.vue?vue&type=script&lang=js&\"\nexport * from \"./LayerCheckBox.vue?vue&type=script&lang=js&\"\nimport style0 from \"./LayerCheckBox.vue?vue&type=style&index=0&id=5097ea8c&prod&lang=less&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"5097ea8c\",\n  null\n  \n)\n\nexport default component.exports","import _ol_ from '../index.js';\nimport _ol_array_ from '../array.js';\nimport _ol_proj_ from '../proj.js';\nimport _ol_tilegrid_TileGrid_ from '../tilegrid/tilegrid.js';\n\n/**\n * @classdesc\n * Set the grid pattern for sources accessing WMTS tiled-image servers.\n *\n * @constructor\n * @extends {ol.tilegrid.TileGrid}\n * @param {olx.tilegrid.WMTSOptions} options WMTS options.\n * @struct\n * @api\n */\nvar _ol_tilegrid_WMTS_ = function(options) {\n  /**\n   * @private\n   * @type {!Array.<string>}\n   */\n  this.matrixIds_ = options.matrixIds;\n  // FIXME: should the matrixIds become optional?\n\n  _ol_tilegrid_TileGrid_.call(this, {\n    extent: options.extent,\n    origin: options.origin,\n    origins: options.origins,\n    resolutions: options.resolutions,\n    tileSize: options.tileSize,\n    tileSizes: options.tileSizes,\n    sizes: options.sizes\n  });\n};\n\n_ol_.inherits(_ol_tilegrid_WMTS_, _ol_tilegrid_TileGrid_);\n\n\n/**\n * @param {number} z Z.\n * @return {string} MatrixId..\n */\n_ol_tilegrid_WMTS_.prototype.getMatrixId = function(z) {\n  return this.matrixIds_[z];\n};\n\n\n/**\n * Get the list of matrix identifiers.\n * @return {Array.<string>} MatrixIds.\n * @api\n */\n_ol_tilegrid_WMTS_.prototype.getMatrixIds = function() {\n  return this.matrixIds_;\n};\n\n\n/**\n * Create a tile grid from a WMTS capabilities matrix set and an\n * optional TileMatrixSetLimits.\n * @param {Object} matrixSet An object representing a matrixSet in the\n *     capabilities document.\n * @param {ol.Extent=} opt_extent An optional extent to restrict the tile\n *     ranges the server provides.\n * @param {Array.<Object>=} opt_matrixLimits An optional object representing\n *     the available matrices for tileGrid.\n * @return {ol.tilegrid.WMTS} WMTS tileGrid instance.\n * @api\n */\n_ol_tilegrid_WMTS_.createFromCapabilitiesMatrixSet = function(matrixSet, opt_extent,\n    opt_matrixLimits) {\n\n  /** @type {!Array.<number>} */\n  var resolutions = [];\n  /** @type {!Array.<string>} */\n  var matrixIds = [];\n  /** @type {!Array.<ol.Coordinate>} */\n  var origins = [];\n  /** @type {!Array.<ol.Size>} */\n  var tileSizes = [];\n  /** @type {!Array.<ol.Size>} */\n  var sizes = [];\n\n  var matrixLimits = opt_matrixLimits !== undefined ? opt_matrixLimits : [];\n\n  var supportedCRSPropName = 'SupportedCRS';\n  var matrixIdsPropName = 'TileMatrix';\n  var identifierPropName = 'Identifier';\n  var scaleDenominatorPropName = 'ScaleDenominator';\n  var topLeftCornerPropName = 'TopLeftCorner';\n  var tileWidthPropName = 'TileWidth';\n  var tileHeightPropName = 'TileHeight';\n\n  var code = matrixSet[supportedCRSPropName];\n  var projection = _ol_proj_.get(code.replace(/urn:ogc:def:crs:(\\w+):(.*:)?(\\w+)$/, '$1:$3')) ||\n      _ol_proj_.get(code);\n  var metersPerUnit = projection.getMetersPerUnit();\n  // swap origin x and y coordinates if axis orientation is lat/long\n  var switchOriginXY = projection.getAxisOrientation().substr(0, 2) == 'ne';\n\n  matrixSet[matrixIdsPropName].sort(function(a, b) {\n    return b[scaleDenominatorPropName] - a[scaleDenominatorPropName];\n  });\n\n  matrixSet[matrixIdsPropName].forEach(function(elt, index, array) {\n\n    var matrixAvailable;\n    // use of matrixLimits to filter TileMatrices from GetCapabilities\n    // TileMatrixSet from unavailable matrix levels.\n    if (matrixLimits.length > 0) {\n      matrixAvailable = _ol_array_.find(matrixLimits,\n          function(elt_ml, index_ml, array_ml) {\n            return elt[identifierPropName] == elt_ml[matrixIdsPropName];\n          });\n    } else {\n      matrixAvailable = true;\n    }\n\n    if (matrixAvailable) {\n      matrixIds.push(elt[identifierPropName]);\n      var resolution = elt[scaleDenominatorPropName] * 0.28E-3 / metersPerUnit;\n      var tileWidth = elt[tileWidthPropName];\n      var tileHeight = elt[tileHeightPropName];\n      if (switchOriginXY) {\n        origins.push([elt[topLeftCornerPropName][1],\n          elt[topLeftCornerPropName][0]]);\n      } else {\n        origins.push(elt[topLeftCornerPropName]);\n      }\n      resolutions.push(resolution);\n      tileSizes.push(tileWidth == tileHeight ?\n        tileWidth : [tileWidth, tileHeight]);\n      // top-left origin, so height is negative\n      sizes.push([elt['MatrixWidth'], -elt['MatrixHeight']]);\n    }\n  });\n\n  return new _ol_tilegrid_WMTS_({\n    extent: opt_extent,\n    origins: origins,\n    resolutions: resolutions,\n    matrixIds: matrixIds,\n    tileSizes: tileSizes,\n    sizes: sizes\n  });\n};\nexport default _ol_tilegrid_WMTS_;\n","// FIXME add minZoom support\n// FIXME add date line wrap (tile coord transform)\n// FIXME cannot be shared between maps with different projections\n\nimport _ol_ from '../index.js';\nimport _ol_asserts_ from '../asserts.js';\nimport _ol_extent_ from '../extent.js';\nimport _ol_obj_ from '../obj.js';\nimport _ol_math_ from '../math.js';\nimport _ol_proj_ from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport _ol_size_ from '../size.js';\nimport _ol_source_TileImage_ from '../source/tileimage.js';\nimport _ol_source_WMSServerType_ from '../source/wmsservertype.js';\nimport _ol_tilecoord_ from '../tilecoord.js';\nimport _ol_string_ from '../string.js';\nimport _ol_uri_ from '../uri.js';\n\n/**\n * @classdesc\n * Layer source for tile data from WMS servers.\n *\n * @constructor\n * @extends {ol.source.TileImage}\n * @param {olx.source.TileWMSOptions=} opt_options Tile WMS options.\n * @api\n */\nvar _ol_source_TileWMS_ = function(opt_options) {\n\n  var options = opt_options || {};\n\n  var params = options.params || {};\n\n  var transparent = 'TRANSPARENT' in params ? params['TRANSPARENT'] : true;\n\n  _ol_source_TileImage_.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    logo: options.logo,\n    opaque: !transparent,\n    projection: options.projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileClass: options.tileClass,\n    tileGrid: options.tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = params;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Extent}\n   */\n  this.tmpExtent_ = _ol_extent_.createEmpty();\n\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n\n};\n\n_ol_.inherits(_ol_source_TileWMS_, _ol_source_TileImage_);\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\n_ol_source_TileWMS_.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  var projectionObj = _ol_proj_.get(projection);\n  var sourceProjectionObj = this.getProjection();\n\n  var tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projectionObj);\n  }\n\n  var tileCoord = tileGrid.getTileCoordForCoordAndResolution(coordinate, resolution);\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  var tileResolution = tileGrid.getResolution(tileCoord[0]);\n  var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  var tileSize = _ol_size_.toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n\n  var gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = _ol_extent_.buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    tileResolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, tileResolution);\n    tileExtent = _ol_proj_.transformExtent(tileExtent, projectionObj, sourceProjectionObj);\n    coordinate = _ol_proj_.transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  var baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': _ol_.DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  _ol_obj_.assign(baseParams, this.params_, params);\n\n  var x = Math.floor((coordinate[0] - tileExtent[0]) / tileResolution);\n  var y = Math.floor((tileExtent[3] - coordinate[1]) / tileResolution);\n\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n      1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_source_TileWMS_.prototype.getGutterInternal = function() {\n  return this.gutter_;\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\n_ol_source_TileWMS_.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @param {ol.TileCoord} tileCoord Tile coordinate.\n * @param {ol.Size} tileSize Tile size.\n * @param {ol.Extent} tileExtent Tile extent.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string|undefined} Request URL.\n * @private\n */\n_ol_source_TileWMS_.prototype.getRequestUrl_ = function(tileCoord, tileSize, tileExtent,\n    pixelRatio, projection, params) {\n\n  var urls = this.urls;\n  if (!urls) {\n    return undefined;\n  }\n\n  params['WIDTH'] = tileSize[0];\n  params['HEIGHT'] = tileSize[1];\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case _ol_source_WMSServerType_.GEOSERVER:\n        var dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case _ol_source_WMSServerType_.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case _ol_source_WMSServerType_.CARMENTA_SERVER:\n      case _ol_source_WMSServerType_.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        _ol_asserts_.assert(false, 52); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  var axisOrientation = projection.getAxisOrientation();\n  var bbox = tileExtent;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    var tmp;\n    tmp = tileExtent[0];\n    bbox[0] = tileExtent[1];\n    bbox[1] = tmp;\n    tmp = tileExtent[2];\n    bbox[2] = tileExtent[3];\n    bbox[3] = tmp;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  var url;\n  if (urls.length == 1) {\n    url = urls[0];\n  } else {\n    var index = _ol_math_.modulo(_ol_tilecoord_.hash(tileCoord), urls.length);\n    url = urls[index];\n  }\n  return _ol_uri_.appendParams(url, params);\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_source_TileWMS_.prototype.getTilePixelRatio = function(pixelRatio) {\n  return (!this.hidpi_ || this.serverType_ === undefined) ? 1 :\n  /** @type {number} */ (pixelRatio);\n};\n\n\n/**\n * @private\n * @return {string} The key for the current params.\n */\n_ol_source_TileWMS_.prototype.getKeyForParams_ = function() {\n  var i = 0;\n  var res = [];\n  for (var key in this.params_) {\n    res[i++] = key + '-' + this.params_[key];\n  }\n  return res.join('/');\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_source_TileWMS_.prototype.fixedTileUrlFunction = function(tileCoord, pixelRatio, projection) {\n\n  var tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projection);\n  }\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  var tileResolution = tileGrid.getResolution(tileCoord[0]);\n  var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  var tileSize = _ol_size_.toSize(\n      tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n  var gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = _ol_size_.buffer(tileSize, gutter, this.tmpSize);\n    tileExtent = _ol_extent_.buffer(tileExtent,\n        tileResolution * gutter, tileExtent);\n  }\n\n  if (pixelRatio != 1) {\n    tileSize = _ol_size_.scale(tileSize, pixelRatio, this.tmpSize);\n  }\n\n  var baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': _ol_.DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  _ol_obj_.assign(baseParams, this.params_);\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n      pixelRatio, projection, baseParams);\n};\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\n_ol_source_TileWMS_.prototype.updateParams = function(params) {\n  _ol_obj_.assign(this.params_, params);\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n};\n\n\n/**\n * @private\n */\n_ol_source_TileWMS_.prototype.updateV13_ = function() {\n  var version = this.params_['VERSION'] || _ol_.DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default _ol_source_TileWMS_;\n","var _ol_uri_ = {};\n\n\n/**\n * Appends query parameters to a URI.\n *\n * @param {string} uri The original URI, which may already have query data.\n * @param {!Object} params An object where keys are URI-encoded parameter keys,\n *     and the values are arbitrary types or arrays.\n * @return {string} The new URI.\n */\n_ol_uri_.appendParams = function(uri, params) {\n  var keyParams = [];\n  // Skip any null or undefined parameter values\n  Object.keys(params).forEach(function(k) {\n    if (params[k] !== null && params[k] !== undefined) {\n      keyParams.push(k + '=' + encodeURIComponent(params[k]));\n    }\n  });\n  var qs = keyParams.join('&');\n  // remove any trailing ? or &\n  uri = uri.replace(/[?&]$/, '');\n  // append ? or & depending on whether uri has existing parameters\n  uri = uri.indexOf('?') === -1 ? uri + '?' : uri + '&';\n  return uri + qs;\n};\nexport default _ol_uri_;\n","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--10-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./LayerCheckBox.vue?vue&type=style&index=0&id=5097ea8c&prod&lang=less&scoped=true&\""],"sourceRoot":""}