{"version":3,"sources":["webpack:///./src/components/geoserver/wfs/AllWFS.vue","webpack:///src/components/geoserver/wfs/AllWFS.vue","webpack:///./src/components/geoserver/wfs/AllWFS.vue?7719","webpack:///./src/components/geoserver/wfs/AllWFS.vue?e538","webpack:///./node_modules/core-js/modules/es.array.join.js"],"names":["render","_vm","this","_c","_self","attrs","path","_v","on","insertClick","updateClick","deleteClick","endClick","staticRenderFns","data","geoserverData","wsName","uri","wfsURL","layer","select","edit","draw","created","mounted","methods","initMap","format","url","that","extent","strategy","title","source","getTdtLayer","target","layers","view","projection","center","zoom","map","style","image","radius","fill","color","features","type","freehand","stopClick","sendWFS","ft","id","properties","WFSTSerializer","_this","options","featureNS","featurePrefix","featureType","srsName","coordinates","geom","flatCoordinates","featObject","serializer","featString","headers","res","console","alert","window","component","$","uncurryThis","IndexedObject","toIndexedObject","arrayMethodIsStrict","nativeJoin","join","ES3_STRINGS","Object","STRICT_METHOD","proto","forced","separator","undefined"],"mappings":"yHAAA,IAAIA,EAAS,WAAkB,IAAIC,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,MAAM,CAACA,EAAG,gBAAgB,CAACE,MAAM,CAAC,kBAAkB,wBAAwB,CAACF,EAAG,qBAAqB,CAACE,MAAM,CAAC,GAAK,CAAEC,KAAM,WAAY,CAACL,EAAIM,GAAG,QAAQJ,EAAG,qBAAqB,CAACF,EAAIM,GAAG,eAAeJ,EAAG,qBAAqB,CAACF,EAAIM,GAAG,SAASJ,EAAG,qBAAqB,CAACF,EAAIM,GAAG,cAAc,GAAGJ,EAAG,UAAU,CAACA,EAAG,SAAS,CAACE,MAAM,CAAC,GAAK,UAAUG,GAAG,CAAC,MAAQP,EAAIQ,cAAc,CAACR,EAAIM,GAAG,QAAQJ,EAAG,SAAS,CAACE,MAAM,CAAC,GAAK,UAAUG,GAAG,CAAC,MAAQP,EAAIS,cAAc,CAACT,EAAIM,GAAG,QAAQJ,EAAG,SAAS,CAACE,MAAM,CAAC,GAAK,UAAUG,GAAG,CAAC,MAAQP,EAAIU,cAAc,CAACV,EAAIM,GAAG,QAAQJ,EAAG,SAAS,CAACE,MAAM,CAAC,GAAK,OAAOG,GAAG,CAAC,MAAQP,EAAIW,WAAW,CAACX,EAAIM,GAAG,UAAUJ,EAAG,MAAM,CAACE,MAAM,CAAC,GAAK,YAAY,IAEjtBQ,EAAkB,G,kOCiCP,GACfC,gBACA,OAEAC,eACAC,oBACAC,0CACAC,mDACAC,cAEAC,YACAC,UACAC,YAGAC,qBAEAC,mBACA,gBAEAC,SACAC,mBACA,WAEA,cACAC,kBACAC,gBACA,OACAC,gFACAA,2BACAA,sBAFAA,yDAGAC,0BAEAC,uBAGA,cACAC,kBACAC,WAGA,GACAC,wBACAA,2BAGA,cACAC,aACAC,SACAC,iBACAC,uBACAC,+BACAC,WAIAC,gCACA,6BACAA,4CAEAA,+CAIA,kBACAL,WACAM,kBACAC,kBACAC,SACAC,iBACAC,qBAMA,cACAC,2BAGA,cACAd,mBACAc,cAEAC,aACAC,YACAC,eAGAT,oBACAA,oBACAA,oBACApB,gBACAC,gBACAF,gBAEAE,4BACA,gBACAO,yBAEAT,2BACA,iBACA,eACA,WACA,eACAS,0BAKAR,8BAEA,iBACA,YACAQ,yBAEA,cACA,YACA,aAEApB,uBACA,0BACA,wBACA,yBAEAC,uBACA,wBACA,wBACA,2BAEAC,uBACA,wBACA,wBACA,2BAEAC,oBACA,wBACA,0BACA,yBAEAuC,sBAAA,oLAiEA,OA9DAC,YAEAC,YACAC,oBAEAC,aACAC,kBACAC,GACAC,gBACAC,uBACAC,oBACAC,qBAEA,cACAP,mBACAA,YACAA,mBACAA,mBACAQ,mCACAR,WACAA,WACAF,mBAEAW,kBACAA,kCACA,6BACA,WACA,SACAC,OACAA,aAGAZ,0BACAA,iBAEAa,uCACA,cACAb,WACAE,mBACAA,YAEAQ,mCACAR,WACAA,WACAF,mBAEAA,gDACA,6BACA,WACA,SACAY,OACAA,aAGAZ,0BAEAa,uCACA,eACAb,WACAa,uCAEAC,oBACAC,yBAAA,UACA,oCACAA,EACA,CACAC,SAEA,oCAEA,iBAPAC,UAQA,4BACAC,eACAC,mBAGAA,eACAC,0BACA,2CAjFA,MC/K8W,I,YCO1WC,EAAY,eACd,EACAzE,EACAa,GACA,EACA,KACA,WACA,MAIa,aAAA4D,E,2CCjBf,IAAIC,EAAI,EAAQ,QACZC,EAAc,EAAQ,QACtBC,EAAgB,EAAQ,QACxBC,EAAkB,EAAQ,QAC1BC,EAAsB,EAAQ,QAE9BC,EAAaJ,EAAY,GAAGK,MAE5BC,EAAcL,GAAiBM,OAC/BC,EAAgBL,EAAoB,OAAQ,KAIhDJ,EAAE,CAAEvC,OAAQ,QAASiD,OAAO,EAAMC,OAAQJ,IAAgBE,GAAiB,CACzEH,KAAM,SAAcM,GAClB,OAAOP,EAAWF,EAAgB3E,WAAqBqF,IAAdD,EAA0B,IAAMA","file":"js/chunk-00e773d4.66c09bff.js","sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[_c('el-breadcrumb',{attrs:{\"separator-class\":\"el-icon-arrow-right\"}},[_c('el-breadcrumb-item',{attrs:{\"to\":{ path: '/home' }}},[_vm._v(\"首页\")]),_c('el-breadcrumb-item',[_vm._v(\"GeoServer\")]),_c('el-breadcrumb-item',[_vm._v(\"WFS\")]),_c('el-breadcrumb-item',[_vm._v(\"WFS综合操作\")])],1),_c('el-card',[_c('button',{attrs:{\"id\":\"insert\"},on:{\"click\":_vm.insertClick}},[_vm._v(\"添加\")]),_c('button',{attrs:{\"id\":\"update\"},on:{\"click\":_vm.updateClick}},[_vm._v(\"修改\")]),_c('button',{attrs:{\"id\":\"delete\"},on:{\"click\":_vm.deleteClick}},[_vm._v(\"删除\")]),_c('button',{attrs:{\"id\":\"end\"},on:{\"click\":_vm.endClick}},[_vm._v(\"结束操作\")]),_c('div',{attrs:{\"id\":\"map\"}})])],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div>\r\n        <!--面包屑导航区域-->\r\n        <el-breadcrumb separator-class=\"el-icon-arrow-right\">\r\n            <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\r\n            <el-breadcrumb-item>GeoServer</el-breadcrumb-item>\r\n            <el-breadcrumb-item>WFS</el-breadcrumb-item>\r\n            <el-breadcrumb-item>WFS综合操作</el-breadcrumb-item>\r\n        </el-breadcrumb>\r\n        <!--卡片区域-->\r\n        <el-card>\r\n            <button id=\"insert\" @click=\"insertClick\">添加</button>\r\n            <button id=\"update\" @click=\"updateClick\">修改</button>\r\n            <button id=\"delete\" @click=\"deleteClick\">删除</button>\r\n            <button id=\"end\" @click=\"endClick\">结束操作</button>\r\n            <div id=\"map\"></div>\r\n        </el-card>\r\n    </div>\r\n</template>\r\n<script>\r\nimport Map from 'ol/map';\r\nimport View from 'ol/view';\r\nimport Point from 'ol/geom/point';\r\nimport VectorLayer from 'ol/layer/vector';\r\nimport Vector from 'ol/source/vector';\r\nimport GeoJSON from 'ol/format/geojson';\r\nimport WFS from 'ol/format/wfs';\r\nimport Draw from 'ol/interaction/draw';\r\nimport Select from 'ol/interaction/select';\r\nimport Modify from 'ol/interaction/modify';\r\nimport Style from 'ol/style/style';\r\nimport Circle from 'ol/style/circle';\r\nimport Fill from 'ol/style/fill';\r\nimport loadingstrategy from 'ol/loadingstrategy';\r\nimport {getTdtLayer} from \"../../../utils/searchUtils\";\r\nexport default {\r\n    data() {\r\n        return {\r\n            // 服务配置，命名空间、图层、服务地址等\r\n            geoserverData: {\r\n                wsName: 'webgistest',\r\n                uri: 'http://www.openplans.org/webgistest',\r\n                wfsURL: process.env.VUE_APP_GEOSERVER + 'geoserver/wfs?',\r\n                layer: 'port'\r\n            },\r\n            select: null,\r\n            edit: null,\r\n            draw: null\r\n        }\r\n    },\r\n    created() {\r\n    },\r\n    mounted() {\r\n        this.initMap()\r\n    },\r\n    methods: {\r\n        initMap() {\r\n            const that = this\r\n            //测试数据 添加WFS数据  添加所有\r\n            let wfsSource = new Vector({\r\n                format: new GeoJSON(),\r\n                url: function (extent) {\r\n                    return (\r\n                        that.geoserverData.wfsURL + 'service=WFS&version=1.1.0&request=GetFeature&typeName=' +\r\n                        that.geoserverData.wsName + \":\" +\r\n                        that.geoserverData.layer + '&' + 'outputFormat=application/json&srsname=EPSG:3857&bbox=' +\r\n                        extent.join(',') + ',EPSG:3857');\r\n                },\r\n                strategy: loadingstrategy.bbox\r\n            });\r\n\r\n            let wfsLayer = new VectorLayer({\r\n                title: 'add Layer',\r\n                source: wfsSource\r\n            })\r\n\r\n            let layers = [\r\n              getTdtLayer(\"vec_w\"),\r\n              getTdtLayer(\"cva_w\"), wfsLayer\r\n            ];\r\n\r\n            let map = new Map({\r\n                target: 'map',\r\n                layers: layers,\r\n                view: new View({\r\n                  projection: \"EPSG:3857\",\r\n                  center: [12233037.3, 4861921.87],\r\n                    zoom: 4\r\n                })\r\n            });\r\n\r\n            map.on('pointermove', function (evt) {\r\n                if (map.hasFeatureAtPixel(evt.pixel)) {\r\n                    map.getTargetElement().style.cursor = \"pointer\"\r\n                } else {\r\n                    map.getTargetElement().style.cursor = \"default\"\r\n                }\r\n            });\r\n\r\n            let select = new Select({\r\n                layers: [wfsLayer],\r\n                style: new Style({\r\n                    image: new Circle({\r\n                        radius: 8,\r\n                        fill: new Fill({\r\n                            color: \"#f00\"\r\n                        })\r\n                    })\r\n                })\r\n            });\r\n\r\n            let edit = new Modify({\r\n                features: select.getFeatures()\r\n            });\r\n\r\n            let draw = new Draw({\r\n                source: new Vector({\r\n                    features: []\r\n                }),\r\n                type: 'Point',\r\n                freehand: false,//自由手绘,\r\n                stopClick: true\r\n            });\r\n\r\n            map.addInteraction(select);\r\n            map.addInteraction(edit);\r\n            map.addInteraction(draw);\r\n            edit.setActive(false);\r\n            draw.setActive(false);\r\n            select.setActive(false);\r\n\r\n            draw.on(\"drawend\", function (e) {\r\n                let feature = e.feature;\r\n                that.sendWFS(feature, \"insert\");\r\n            });\r\n            select.on(\"select\", function (e) {\r\n                let features = e.selected;\r\n                if (features.length > 0) {\r\n                    let feature = features[0];\r\n                    if (!edit.getActive()) {\r\n                        that.sendWFS(feature, \"delete\");\r\n                    }\r\n                }\r\n            });\r\n\r\n            edit.on(\"modifyend\", function (e) {\r\n                // 把修改完成的feature暂存起来\r\n                let features = e.features;\r\n                let feature = features.item(0);\r\n                that.sendWFS(feature, \"update\");\r\n            });\r\n            this.select = select\r\n            this.edit = edit\r\n            this.draw = draw\r\n        },\r\n        insertClick() {\r\n            this.select.setActive(false)\r\n            this.edit.setActive(false)\r\n            this.draw.setActive(true);\r\n        },\r\n        updateClick() {\r\n            this.draw.setActive(false)\r\n            this.edit.setActive(true);\r\n            this.select.setActive(true);\r\n        },\r\n        deleteClick() {\r\n            this.draw.setActive(false)\r\n            this.edit.setActive(false)\r\n            this.select.setActive(true);\r\n        },\r\n        endClick() {\r\n            this.draw.setActive(false)\r\n            this.select.setActive(false)\r\n            this.edit.setActive(false)\r\n        },\r\n        async sendWFS(feature, type) {\r\n            //发送WFS 请求 ，type 分别为insert update delect\r\n            // 1、构造Feature\r\n            let ft = feature.clone()\r\n            // 更新操作必须要有id\r\n            let id = feature.getId()\r\n            let properties = ft.getProperties()\r\n            let featObject;\r\n            let WFSTSerializer = new WFS();\r\n            let _this = this.geoserverData;\r\n            let options = {\r\n                featureNS: _this.uri,\r\n                featurePrefix: _this.wsName, //工作空间名称\r\n                featureType: _this.layer, //图层名称\r\n                srsName: 'EPSG:3857'\r\n            };\r\n            if (type === \"insert\") {\r\n                properties.address = \"测试要素添加\"\r\n                properties.name = \"添加\"\r\n                properties.porttype = \"wnm添加\"\r\n                properties.province = \"wnm添加\"\r\n                let coordinates = ft.getGeometry().getCoordinates()\r\n                properties.lng = coordinates[0]\r\n                properties.lat = coordinates[1]\r\n                ft.setProperties(properties)\r\n\r\n                let geom = ft.getGeometry()\r\n                geom.applyTransform((flatCoordinates, flatCoordinates2, stride) => {\r\n                    for (let j = 0; j < flatCoordinates.length; j += stride) {\r\n                        let y = flatCoordinates[j]\r\n                        let x = flatCoordinates[j + 1]\r\n                        flatCoordinates[j] = x\r\n                        flatCoordinates[j + 1] = y\r\n                    }\r\n                })\r\n                ft.setGeometryName('geom') // postgis字段为geom、shp字段名为the_geom\r\n                ft.setGeometry(geom)\r\n\r\n                featObject = WFSTSerializer.writeTransaction([ft], null, null, options);\r\n            } else if (type === \"update\") {\r\n                ft.setId(id)\r\n                properties.address = \"测试要素修改\"\r\n                properties.name = \"修改\"\r\n\r\n                let coordinates = ft.getGeometry().getCoordinates()\r\n                properties.lng = coordinates[0]\r\n                properties.lat = coordinates[1]\r\n                ft.setProperties(properties)\r\n\r\n                ft.getGeometry().applyTransform((flatCoordinates, flatCoordinates2, stride) => {\r\n                    for (let j = 0; j < flatCoordinates.length; j += stride) {\r\n                        let y = flatCoordinates[j]\r\n                        let x = flatCoordinates[j + 1]\r\n                        flatCoordinates[j] = x\r\n                        flatCoordinates[j + 1] = y\r\n                    }\r\n                })\r\n                ft.setGeometryName('geom')// postgis字段为geom、shp字段名为the_geom\r\n\r\n                featObject = WFSTSerializer.writeTransaction(null, [ft], null, options);\r\n            } else if (type === \"delete\") {\r\n                ft.setId(id)\r\n                featObject = WFSTSerializer.writeTransaction(null, null, [ft], options);\r\n            }\r\n            let serializer = new XMLSerializer();\r\n            let featString = serializer.serializeToString(featObject);\r\n            const { data: res } = await this.$http.post(this.geoserverData.wfsURL,\r\n                featString,\r\n                {\r\n                    headers: {\r\n                        //根据接扣文档需要加的请求头\r\n                        \"Content-Type\": \"application/xml\"\r\n                    }\r\n                })\r\n            if (res.indexOf(\"Exception\") !== -1) {\r\n                console.log(res);\r\n                alert(\"添加失败！\" + res)\r\n            }\r\n            else {\r\n                alert(\"添加成功！\")\r\n                window.location.reload();\r\n            }\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n\r\n</style>\r\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AllWFS.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AllWFS.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./AllWFS.vue?vue&type=template&id=ee428934&scoped=true&\"\nimport script from \"./AllWFS.vue?vue&type=script&lang=js&\"\nexport * from \"./AllWFS.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"ee428934\",\n  null\n  \n)\n\nexport default component.exports","'use strict';\nvar $ = require('../internals/export');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar IndexedObject = require('../internals/indexed-object');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar arrayMethodIsStrict = require('../internals/array-method-is-strict');\n\nvar nativeJoin = uncurryThis([].join);\n\nvar ES3_STRINGS = IndexedObject != Object;\nvar STRICT_METHOD = arrayMethodIsStrict('join', ',');\n\n// `Array.prototype.join` method\n// https://tc39.es/ecma262/#sec-array.prototype.join\n$({ target: 'Array', proto: true, forced: ES3_STRINGS || !STRICT_METHOD }, {\n  join: function join(separator) {\n    return nativeJoin(toIndexedObject(this), separator === undefined ? ',' : separator);\n  }\n});\n"],"sourceRoot":""}