{"version":3,"sources":["webpack:///./src/components/geoserver_rest/table/EditTable.vue","webpack:///src/components/geoserver_rest/table/EditTable.vue","webpack:///./src/components/geoserver_rest/table/EditTable.vue?4f37","webpack:///./src/components/geoserver_rest/table/EditTable.vue?45b4","webpack:///./node_modules/ol/control/scalelineunits.js","webpack:///./node_modules/ol/control/scaleline.js","webpack:///./node_modules/ol/format/textfeature.js","webpack:///./node_modules/ol/format/wkt.js","webpack:///./node_modules/ol/source/osm.js"],"names":["render","_vm","this","_c","_self","staticStyle","attrs","on","getQueryData","inputChange","model","value","queryInfo","query","callback","$$v","$set","expression","getFindData","slot","addFeatures","_v","removeCheck","datas","pageNum","pageSize","total","handleSizeChange","handleCurrentChange","_e","ref","staticClass","trigger","mode","autoClear","rowClassName","scopedSlots","_u","key","fn","_ref","row","$refs","xTable","isActiveByRow","$event","saveRowEvent","cancelRowEvent","removeEvent","editRowEvent","_l","fields","item","data","name","type","staticRenderFns","geoURL","process","tableName","geom","rowInfo","oldGeom","newRow","isFind","isInput","map","oldWKT","wktLayer","select","modify","draw","drawFeature","isDraw","created","$route","params","split","mounted","initMap","getTableData","methods","that","Map","target","layers","TileLayer","source","OSM","view","View","projection","center","zoom","e","pixel","getEventPixel","originalEvent","hit","hasFeatureAtPixel","getTargetElement","style","cursor","addControl","ScaleLine","Select","addInteraction","feature","selected","getProperties","info","wkt","$table","addWKT","setActiveRow","editFeatures","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$_this$$API$get","wrap","_context","prev","next","$API","sent","status","abrupt","length","stop","_this2","_callee2","_yield$_this2$$API$fi","_context2","findTableData","styleFunction","image","CircleStyle","radius","fill","Fill","color","stroke","Stroke","width","styles","Style","lineDash","getGeometry","getType","removeLayer","VectorSource","features","forEach","WKT","readFeature","setProperties","push","VectorLayer","addLayer","extent","getExtent","r","getView","getResolutionForExtent","getSize","setResolution","setCenter","Extent","getCenter","setZoom","Modify","getSource","array_","writeFeature","setActive","Draw","_callee3","_yield$$table$insertA","_context3","insertAt","removeInteraction","_x","apply","arguments","_this3","selectRecords","getCheckboxRecords","$confirm","confirmButtonText","cancelButtonText","then","_callee4","geoms","_yield$_this3$$API$de","_context4","delTableData","$message","success","removeCheckboxRow","error","_this4","clearActived","_callee5","_yield$that$$API$upda","_yield$that$$API$addT","_ref4","_context5","updateTableData","msg","addTableData","revertData","_this5","_callee6","_yield$_this5$$API$de","_context6","remove","watch","handler","val","oldVal","component","_ol_control_ScaleLineUnits_","DEGREES","IMPERIAL","NAUTICAL","METRIC","US","_ol_control_ScaleLine_","opt_options","options","className","undefined","innerElement_","document","createElement","element_","CLASS_UNSELECTABLE","appendChild","viewState_","minWidth_","minWidth","renderedVisible_","renderedWidth_","renderedHTML_","call","element","listen","getChangeEventType","Property_","UNITS","handleUnitsChanged_","setUnits","inherits","LEADING_DIGITS","prototype","getUnits","get","mapEvent","frameState","viewState","updateElement_","units","set","pointResolutionUnits","METERS","pointResolution","getPointResolution","resolution","getMetersPerUnit","nominalCount","suffix","metersPerDegree","METERS_PER_UNIT","assert","count","i","Math","floor","log","pow","round","isNaN","display","html","innerHTML","_ol_format_TextFeature_","getText_","TEXT","readFeatureFromText","adaptOptions","text","readFeatures","readFeaturesFromText","readGeometry","readGeometryFromText","readProjection","readProjectionFromText","defaultDataProjection","writeFeatureText","writeFeatures","writeFeaturesText","writeGeometry","geometry","writeGeometryText","_ol_format_WKT_","splitCollection_","splitCollection","EMPTY","Z","M","ZM","encodePointGeometry_","coordinates","getCoordinates","join","encodeMultiPointGeometry_","array","components","getPoints","ii","encodeGeometryCollectionGeometry_","getGeometries","encode_","encodeLineStringGeometry_","encodeMultiLineStringGeometry_","getLineStrings","encodePolygonGeometry_","rings","getLinearRings","encodeMultiPolygonGeometry_","getPolygons","encodeGeometryLayout_","layout","getLayout","dimInfo","XYZ","XYZM","XYM","geometryEncoder","GeometryEncoder_","enc","toUpperCase","parse_","lexer","Lexer","parser","Parser","parse","setGeometry","geometries","GEOMETRY_COLLECTION","getGeometriesArray","transformWithOptions","collection","TokenType_","LEFT_PAREN","RIGHT_PAREN","NUMBER","COMMA","EOF","index_","isAlpha_","c","isNumeric_","opt_decimal","decimal","isWhiteSpace_","nextChar_","charAt","nextToken","token","position","readNumber_","readText_","Error","index","scientificNotation","parseFloat","substring","lexer_","token_","layout_","XY","consume_","isTokenType","isMatch","match","parseGeometry_","parseGeometryLayout_","dimToken","geomType","parseGeometryCollectionText_","GeometryParser_","ctor","GeometryConstructor_","formatErrorMessage_","isEmptyGeometry_","parsePointText_","parsePoint_","parseLineStringText_","parsePointList_","parsePolygonText_","parseLineStringTextList_","parseMultiPointText_","parsePointTextList_","parseMultiLineStringText_","parseMultiPolygonText_","parsePolygonTextList_","dimensions","isEmpty","_ol_source_OSM_","attributions","ATTRIBUTION","crossOrigin","url","cacheSize","opaque","maxZoom","reprojectionErrorThreshold","tileLoadFunction","wrapX"],"mappings":"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","file":"js/chunk-49089243.bc192a19.js","sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[_c('div',{staticStyle:{\"max-height\":\"640px\"},attrs:{\"id\":\"map\"}}),_c('el-card',[_c('el-row',{attrs:{\"gutter\":20}},[_c('el-col',{attrs:{\"span\":8}},[_c('el-input',{attrs:{\"placeholder\":\"请输入内容\",\"clearable\":\"\"},on:{\"clear\":_vm.getQueryData,\"input\":_vm.inputChange},model:{value:(_vm.queryInfo.query),callback:function ($$v) {_vm.$set(_vm.queryInfo, \"query\", $$v)},expression:\"queryInfo.query\"}},[_c('el-button',{attrs:{\"slot\":\"append\",\"icon\":\"el-icon-search\"},on:{\"click\":_vm.getFindData},slot:\"append\"})],1)],1),_c('el-col',{attrs:{\"span\":4}},[_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.addFeatures}},[_vm._v(\"添加\")]),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.removeCheck}},[_vm._v(\"批量删除\")])],1)],1),(_vm.datas !== null)?_c('el-pagination',{attrs:{\"current-page\":_vm.queryInfo.pageNum,\"page-sizes\":[5, 10, 15, 30, 100],\"page-size\":_vm.queryInfo.pageSize,\"layout\":\"total, sizes, prev, pager, next, jumper\",\"total\":_vm.total},on:{\"size-change\":_vm.handleSizeChange,\"current-change\":_vm.handleCurrentChange}}):_vm._e(),_c('vxe-table',{ref:\"xTable\",staticClass:\"mytable-style\",attrs:{\"border\":\"\",\"stripe\":\"\",\"highlight-hover-row\":\"\",\"data\":_vm.datas,\"edit-config\":{trigger: 'manual', mode: 'row', autoClear: false},\"size\":\"mini\",\"row-class-name\":_vm.rowClassName,\"max-height\":\"350\"}},[_c('vxe-table-column',{attrs:{\"type\":\"checkbox\",\"width\":\"40\"}}),_c('vxe-table-column',{attrs:{\"title\":\"操作\",\"width\":\"140\"},scopedSlots:_vm._u([{key:\"default\",fn:function({ row }){return [(_vm.$refs.xTable.isActiveByRow(row))?[_c('el-tooltip',{attrs:{\"effect\":\"dark\",\"content\":\"保存\",\"placement\":\"bottom\"}},[_c('el-button',{attrs:{\"type\":\"success\",\"size\":\"mini\",\"circle\":\"\",\"icon\":\"el-icon-s-order\"},on:{\"click\":function($event){return _vm.saveRowEvent(row)}}})],1),_c('el-tooltip',{attrs:{\"effect\":\"dark\",\"content\":\"取消\",\"placement\":\"bottom\"}},[_c('el-button',{attrs:{\"type\":\"info\",\"size\":\"mini\",\"circle\":\"\",\"icon\":\"el-icon-close\"},on:{\"click\":function($event){return _vm.cancelRowEvent(row)}}})],1),_c('el-tooltip',{attrs:{\"effect\":\"dark\",\"content\":\"删除\",\"placement\":\"bottom\"}},[_c('el-button',{attrs:{\"type\":\"danger\",\"size\":\"mini\",\"circle\":\"\",\"icon\":\"el-icon-delete-solid\"},on:{\"click\":function($event){return _vm.removeEvent(row)}}})],1)]:[_c('el-tooltip',{attrs:{\"effect\":\"dark\",\"content\":\"编辑\",\"placement\":\"bottom\"}},[_c('el-button',{attrs:{\"circle\":\"\",\"size\":\"mini\",\"icon\":\"el-icon-setting\"},on:{\"click\":function($event){return _vm.editRowEvent(row)}}})],1)]]}}])}),_vm._l((_vm.queryInfo.fields),function(item){return (_vm.data[1] !== item)?_c('vxe-table-column',{attrs:{\"field\":item,\"title\":item,\"min-width\":\"80px\",\"height\":\"20px\",\"show-header-overflow\":\"\",\"show-overflow\":\"title\",\"show-footer-overflow\":\"\",\"edit-render\":{name: 'input', attrs: {type: 'text'}}}}):_vm._e()})],2),(_vm.datas === null)?_c('el-empty',{attrs:{\"description\":\"无数据\"}}):_vm._e()],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div>\r\n    <div id=\"map\" style=\"max-height: 640px;\"></div>\r\n    <el-card>\r\n      <!--输入框和添加按钮-->\r\n      <el-row :gutter=\"20\">\r\n        <el-col :span=\"8\">\r\n          <el-input placeholder=\"请输入内容\" v-model=\"queryInfo.query\" clearable @clear=\"getQueryData\" @input=\"inputChange\">\r\n            <el-button slot=\"append\" icon=\"el-icon-search\" @click=\"getFindData\"></el-button>\r\n          </el-input>\r\n        </el-col>\r\n        <el-col :span=\"4\">\r\n          <el-button type=\"primary\" @click=\"addFeatures\">添加</el-button>\r\n          <el-button type=\"primary\" @click=\"removeCheck\">批量删除</el-button>\r\n        </el-col>\r\n      </el-row>\r\n      <!--分页-->\r\n      <el-pagination v-if=\"datas !== null\" @size-change=\"handleSizeChange\" @current-change=\"handleCurrentChange\" :current-page=\"queryInfo.pageNum\"\r\n                     :page-sizes=\"[5, 10, 15, 30, 100]\" :page-size=\"queryInfo.pageSize\" layout=\"total, sizes, prev, pager, next, jumper\" :total=\"total\">\r\n      </el-pagination>\r\n      <!--列表-->\r\n      <vxe-table ref=\"xTable\" class=\"mytable-style\" border stripe highlight-hover-row\r\n                 :data=\"datas\" :edit-config=\"{trigger: 'manual', mode: 'row', autoClear: false}\"\r\n                 size=\"mini\" :row-class-name=\"rowClassName\" max-height=\"350\">\r\n        <vxe-table-column type=\"checkbox\" width=\"40\"></vxe-table-column>\r\n        <vxe-table-column title=\"操作\" width=\"140\">\r\n          <template #default=\"{ row }\">\r\n            <template v-if=\"$refs.xTable.isActiveByRow(row)\">\r\n              <el-tooltip effect=\"dark\" content=\"保存\" placement=\"bottom\">\r\n                <el-button type=\"success\" size=\"mini\" circle  icon=\"el-icon-s-order\" @click=\"saveRowEvent(row)\"></el-button>\r\n              </el-tooltip>\r\n              <el-tooltip effect=\"dark\" content=\"取消\" placement=\"bottom\">\r\n                <el-button type=\"info\" size=\"mini\" circle  icon=\"el-icon-close\" @click=\"cancelRowEvent(row)\"></el-button>\r\n              </el-tooltip>\r\n              <el-tooltip effect=\"dark\" content=\"删除\" placement=\"bottom\">\r\n                <el-button type=\"danger\" size=\"mini\" circle  icon=\"el-icon-delete-solid\" @click=\"removeEvent(row)\"></el-button>\r\n              </el-tooltip>\r\n            </template>\r\n            <template v-else>\r\n              <el-tooltip effect=\"dark\" content=\"编辑\" placement=\"bottom\">\r\n                <el-button circle size=\"mini\" icon=\"el-icon-setting\" @click=\"editRowEvent(row)\"></el-button>\r\n              </el-tooltip>\r\n            </template>\r\n          </template>\r\n        </vxe-table-column>\r\n        <vxe-table-column v-for=\"item in queryInfo.fields\" v-if=\"data[1] !== item\"\r\n                          :field=\"item\" :title=\"item\" min-width=\"80px\" height=\"20px\"\r\n                          show-header-overflow show-overflow=\"title\" show-footer-overflow\r\n                          :edit-render=\"{name: 'input', attrs: {type: 'text'}}\">\r\n        </vxe-table-column>\r\n      </vxe-table>\r\n      <el-empty v-if=\"datas === null\" description=\"无数据\"></el-empty>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport \"ol/ol.css\";\r\nimport Map from 'ol/map';\r\nimport View from 'ol/view';\r\nimport TileLayer from 'ol/layer/tile';\r\nimport VectorLayer from 'ol/layer/vector';\r\nimport OSM from \"ol/source/osm\";\r\nimport VectorSource from 'ol/source/vector';\r\nimport WKT from 'ol/format/wkt';\r\nimport WFS from 'ol/format/wfs';\r\nimport Draw from 'ol/interaction/draw';\r\nimport Select from 'ol/interaction/select';\r\nimport Modify from 'ol/interaction/modify';\r\nimport Style from 'ol/style/style';\r\nimport Stroke from 'ol/style/stroke';\r\nimport Fill from 'ol/style/fill';\r\nimport ScaleLine from 'ol/control/scaleline';\r\nimport CircleStyle from \"ol/style/circle\";\r\nimport Extent from 'ol/extent';\r\nexport default {\r\n  name: \"Table\",\r\n  data() {\r\n    return {\r\n      data: [],//[表名,geometry字段名,geometry类型],例[china_boundry,geom,LINE]\r\n      //存储表格数据\r\n      datas: [],\r\n      //表数据总条数\r\n      total: 0,\r\n      geoURL: process.env.VUE_APP_GEOSERVER,\r\n      //查询数据请求表单\r\n      queryInfo: {\r\n        //表名\r\n        tableName: '',\r\n        //geometry字段名\r\n        geom: '',\r\n        //查询内容\r\n        query: '',\r\n        //页码\r\n        pageNum: 1,\r\n        //每页数据量\r\n        pageSize: 10,\r\n        //表所有字段名称\r\n        fields: []\r\n      },\r\n      //修改数据行请求\r\n      rowInfo: {\r\n        //表名\r\n        tableName: '',\r\n        //geometry字段名称\r\n        geom: '',\r\n        //旧geometry字段值\r\n        oldGeom: \"\",\r\n        //新数据行\r\n        newRow: {},\r\n        //表格字段名称\r\n        fields: []\r\n      },\r\n      //是否处于查询状态\r\n      isFind: false,\r\n      //是否处于输入状态\r\n      isInput: false,\r\n      //地图对象\r\n      map: null,\r\n      //存储更新前wkt数据，取消时使用\r\n      oldWKT: '',\r\n      //wkt图层对象\r\n      wktLayer: null,\r\n      //select查询对象\r\n      select: null,\r\n      //modify编辑对象\r\n      modify: null,\r\n      //draw绘画对象\r\n      draw:null,\r\n      //绘制新要素对象\r\n      drawFeature: null,\r\n      //是否处于编辑状态\r\n      isDraw:false\r\n    }\r\n  },\r\n  created() {\r\n    //切割路由name参数 [表名,geometry字段名,geometry类型],例[china_boundry,geom,LINE]\r\n    this.data = this.$route.params.name.split(',');\r\n    //表名赋值\r\n    this.queryInfo.tableName = this.data[0];\r\n    //表geometry字段赋值\r\n    this.queryInfo.geom = this.data[1];\r\n  },\r\n  mounted() {\r\n    //初始化地图\r\n    this.initMap();\r\n    //请求获取指定表数据\r\n    this.getTableData();\r\n  },\r\n  methods: {\r\n    //初始化地图\r\n    initMap() {\r\n      let that = this;\r\n      //创建地图对象\r\n      const map = new Map({\r\n        target: \"map\", //绑定页面中DOM元素的id\r\n        layers: [\r\n          new TileLayer({\r\n            //数据源\r\n            source: new OSM(), //openlayers内置的数据源\r\n            name: \"OSM地图\",\r\n          }),\r\n        ],\r\n        view: new View({\r\n          projection: \"EPSG:3857\", //坐标系3857\r\n          //视图配置\r\n          center: [12233037.3, 4861921.87], //地图中心点坐标，经度、纬度\r\n          zoom: 5, //定义地图显示层级\r\n        }),\r\n      });\r\n      // 为map添加鼠标移动事件监听，当指向标注时改变鼠标光标状态\r\n      map.on('pointermove', function (e) {\r\n        let pixel = map.getEventPixel(e.originalEvent);\r\n        let hit = map.hasFeatureAtPixel(pixel);\r\n        map.getTargetElement().style.cursor = hit ? 'pointer' : '';\r\n      });\r\n      //添加比例尺控件\r\n      map.addControl(new ScaleLine());\r\n      //创建select对象\r\n      let select = new Select();\r\n      this.select = select;\r\n      map.addInteraction(select);\r\n      //select处于选择事件时\r\n      select.on(\"select\", function (e) {\r\n        let feature = e.selected;\r\n        //获取选中要素属性信息\r\n        let row = feature[0].getProperties().info;\r\n        //存储修改前geom数据\r\n        that.rowInfo.oldGeom = row[that.queryInfo.geom].value;\r\n        //表格字段赋值\r\n        that.rowInfo.fields = that.queryInfo.fields;\r\n        //表名赋值\r\n        that.rowInfo.tableName = that.queryInfo.tableName;\r\n        //geometry字段赋值\r\n        that.rowInfo.geom = that.queryInfo.geom;\r\n        //保存选中要素旧wkt数据\r\n        that.oldWKT = row.wkt;\r\n        //获取table元素\r\n        const $table = that.$refs.xTable;\r\n        //添加wkt图层\r\n        that.addWKT([row]);\r\n        //激活编辑数据行\r\n        $table.setActiveRow(row);\r\n        //激活要素编辑\r\n        that.editFeatures(row);\r\n      });\r\n      this.map = map;\r\n\r\n    },\r\n    //请求获取表数据\r\n    async getTableData() {\r\n      //非查询状态\r\n      this.isFind = false;\r\n      //请求指定表格数据\r\n      const {data: ref} = await this.$API.getTableData(this.queryInfo);\r\n      //如果请求状态码404，则返回\r\n      if (ref.status !== 200) return;\r\n      //表格数据赋值\r\n      this.datas = ref.data.data;\r\n      //表字段名称赋值\r\n      this.queryInfo.fields = ref.data.fields;\r\n      //如果表数据为空 数据总条数赋值0\r\n      if (this.datas === null || this.datas.length === 0) this.total = 0;\r\n      else this.total = ref.data.data[0].total;\r\n      //添加WKT图层到地图上\r\n      this.addWKT(this.datas);\r\n    },\r\n    //分页大小修改事件\r\n    handleSizeChange(e) {\r\n      //分页数据量更改 跳转到第一页\r\n      this.queryInfo.pageNum = 1;\r\n      this.queryInfo.pageSize = e;\r\n      //如果查询状态 请求查询接口\r\n      if (this.isFind) this.getFindData();\r\n      else this.getTableData();\r\n    },\r\n    //下一页分页修改事件\r\n    handleCurrentChange(e) {\r\n      this.queryInfo.pageNum = e;\r\n      if (this.isFind) this.getFindData();\r\n      else this.getTableData();\r\n    },\r\n    //查询输入框清除时更新数据\r\n    getQueryData() {\r\n      this.queryInfo.pageNum = 1;\r\n      this.getTableData();\r\n    },\r\n    //请求查询表数据\r\n    async getFindData() {\r\n      if(!this.isFind || this.isInput) this.queryInfo.pageNum = 1;\r\n      //输入状态\r\n      this.isInput = false;\r\n      //查询状态赋值为真\r\n      this.isFind = true;\r\n      //请求查询接口\r\n      const {data: ref} = await this.$API.findTableData( this.queryInfo);\r\n      if (ref.status !== 200) return;\r\n      this.datas = ref.data;\r\n      if (this.datas === null || this.datas.length === 0) this.total = 0;\r\n      else this.total = ref.data[0].total;\r\n      this.addWKT(this.datas);\r\n    },\r\n    //输入框事件\r\n    inputChange(){\r\n      this.isInput = true;\r\n    },\r\n    //创建样式\r\n    styleFunction(feature){\r\n      const image = new CircleStyle({\r\n        radius: 4,\r\n        fill: new Fill({\r\n          color: 'rgb(255,0,0)',\r\n        }),\r\n        stroke: new Stroke({color: 'rgb(0,7,255)', width: 1}),\r\n      });\r\n      const styles = {\r\n        'Point': new Style({\r\n          image: image,\r\n        }),\r\n        'LineString': new Style({\r\n          stroke: new Stroke({\r\n            color: 'rgb(255,89,0)',\r\n            width: 3,\r\n          }),\r\n        }),\r\n        'MultiLineString': new Style({\r\n          stroke: new Stroke({\r\n            color: 'rgb(255,89,0)',\r\n            width: 3,\r\n          }),\r\n        }),\r\n        'MultiPoint': new Style({\r\n          image: image,\r\n        }),\r\n        'MultiPolygon': new Style({\r\n          stroke: new Stroke({\r\n            color: 'yellow',\r\n            width: 1,\r\n          }),\r\n          fill: new Fill({\r\n            color: 'rgba(255,255,0,0.29)',\r\n          }),\r\n        }),\r\n        'Polygon': new Style({\r\n          stroke: new Stroke({\r\n            color: 'blue',\r\n            lineDash: [4],\r\n            width: 3,\r\n          }),\r\n          fill: new Fill({\r\n            color: 'rgba(0,0,255,0.47)',\r\n          }),\r\n        }),\r\n        'GeometryCollection': new Style({\r\n          stroke: new Stroke({\r\n            color: 'rgb(208,0,255)',\r\n            width: 2,\r\n          }),\r\n          fill: new Fill({\r\n            color: 'rgb(208,0,255)',\r\n          }),\r\n          image: new CircleStyle({\r\n            radius: 10,\r\n            fill: null,\r\n            stroke: new Stroke({\r\n              color: 'rgb(208,0,255)',\r\n            }),\r\n          }),\r\n        }),\r\n        'Circle': new Style({\r\n          stroke: new Stroke({\r\n            color: 'rgba(255,0,0,0.2)',\r\n            width: 2,\r\n          }),\r\n          fill: new Fill({\r\n            color: 'rgba(255,0,0,0.2)',\r\n          }),\r\n        }),\r\n      };\r\n      return styles[feature.getGeometry().getType()];\r\n    },\r\n    //添加wkt到地图\r\n    addWKT(data) {\r\n      const map = this.map;\r\n      //清除上一次加载的wkt图层\r\n      map.removeLayer(this.wktLayer);\r\n      if (data === null) return;\r\n      const source = new VectorSource();\r\n      let features = []\r\n      //循环data 加载要素到地图\r\n      data.forEach(item => {\r\n        //读取数据表中wkt创建为feature对象\r\n        let feature = new WKT().readFeature(item.wkt);\r\n        //feature赋值属性信息\r\n        feature.setProperties({info: item});\r\n        features.push(feature);\r\n      });\r\n      source.addFeatures(features);\r\n      this.wktLayer = new VectorLayer({\r\n        source: source,\r\n        style: this.styleFunction,\r\n      });\r\n      //添加wkt图层到地图\r\n      map.addLayer(this.wktLayer);\r\n      //通过extent缩放至范围\r\n      let extent = source.getExtent();\r\n      let r = map.getView().getResolutionForExtent(extent, map.getSize());\r\n      if (data.length > 1) {\r\n        //设置地图显示缩放等级\r\n        map.getView().setResolution(r);\r\n        //设置地图中心点\r\n        map.getView().setCenter(Extent.getCenter(extent));\r\n      } else {//如果只有一条数据\r\n        //设置地图中心点\r\n        map.getView().setCenter(Extent.getCenter(extent));\r\n        if (this.data[2] === 'Point') {//如果地理要素类型为点\r\n          //设置地图缩放等级为11\r\n          map.getView().setZoom(11);\r\n        } else {//如果地理要素类型不是点\r\n          //设置地图缩放等级\r\n          map.getView().setResolution(r);\r\n        }\r\n      }\r\n    },\r\n    //编辑地图要素\r\n    editFeatures(row) {\r\n      let map = this.map;\r\n      //创建Modify编辑对象\r\n      let modify = new Modify({source: this.wktLayer.getSource()});\r\n      map.addInteraction(modify);\r\n      //编辑结束后\r\n      modify.on(\"modifyend\", function (e) {\r\n        let features = e.features;\r\n        let feature = features.array_[0];\r\n        //获取要素的wkt数据\r\n        row.wkt = new WKT().writeFeature(feature);\r\n      });\r\n      this.modify = modify;\r\n    },\r\n    //绘制新要素\r\n    addFeatures() {\r\n      let that = this;\r\n      this.isDraw = true;\r\n      let map = this.map;\r\n      this.select.setActive(false);\r\n      //创建编辑对象Draw\r\n      let draw = new Draw({\r\n        source: this.wktLayer.getSource(),//绑定wkt图层源\r\n        type: this.data[2],//要素类型\r\n      });\r\n      map.addInteraction(draw);\r\n      const $table = this.$refs.xTable;\r\n      //编辑结束时\r\n      draw.on(\"drawend\", async function (e) {\r\n        //存储feature\r\n        that.drawFeature = e.feature;\r\n        const { row: newRow } = await $table.insertAt({wkt:new WKT().writeFeature(e.feature)}, 0)\r\n        await $table.setActiveRow(newRow);\r\n        that.editFeatures(newRow);\r\n        //移除编辑对象\r\n        map.removeInteraction(draw);\r\n      });\r\n    },\r\n    //删除选中数据\r\n    removeCheck() {\r\n      const $table = this.$refs.xTable;\r\n      const selectRecords = $table.getCheckboxRecords();\r\n      if (selectRecords.length === 0) {\r\n        this.$message.error(\"没有选中数据！\");\r\n        return;\r\n      }\r\n      //打开弹窗\r\n      this.$confirm('此操作将永久删除数据, 是否继续?', '提示', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }).then(async () => {\r\n        let geoms = [];\r\n        selectRecords.forEach(item => {\r\n          geoms.push(item[this.queryInfo.geom].value);\r\n        });\r\n        //当弹窗点击修改后 请求删除接口\r\n        const {data: ref} = await this.$API.delTableData({\r\n          tableName: this.queryInfo.tableName,\r\n          geom: this.queryInfo.geom,\r\n          oldGeom: geoms + \"\",\r\n          newRow: {},\r\n          fields: this.queryInfo.fields\r\n        });\r\n        if (ref.status === 404) return;\r\n        this.$message.success(\"删除成功！\");\r\n        await this.$refs.xTable.removeCheckboxRow();\r\n        this.handleCurrentChange(1);\r\n      });\r\n    },\r\n    //编辑表格某一行数据\r\n    editRowEvent(row) {\r\n      //存储修改前geom数据\r\n      this.rowInfo.oldGeom = row[this.queryInfo.geom].value;\r\n      //表格字段赋值\r\n      this.rowInfo.fields = this.queryInfo.fields;\r\n      //表名赋值\r\n      this.rowInfo.tableName = this.queryInfo.tableName;\r\n      //geometry字段赋值\r\n      this.rowInfo.geom = this.queryInfo.geom;\r\n      //修改前的wkt赋值，供取消修改时使用\r\n      this.oldWKT = row.wkt;\r\n      this.isDraw = false;\r\n      //获取tabley元素\r\n      const $table = this.$refs.xTable;\r\n      //激活编辑的数据行\r\n      $table.setActiveRow(row);\r\n      //将编辑数据行的地理数据在地图上显示\r\n      this.addWKT([row]);\r\n      //编辑feature\r\n      this.editFeatures(row);\r\n    },\r\n    //保存修改行数据\r\n    saveRowEvent(row) {\r\n      let that = this;\r\n      const $table = this.$refs.xTable;\r\n      //表格数据保存时\r\n      $table.clearActived().then(async () => {\r\n        //移除编辑对象modify\r\n        that.map.removeInteraction(that.modify);\r\n        //将geometry字段赋值为wkt\r\n        row[that.data[1]] = row.wkt;\r\n        //更新地图要素\r\n        that.addWKT(that.datas);\r\n        //修改后数据行赋值\r\n        that.rowInfo.newRow = row;\r\n        //是否处于绘制状态\r\n        if (!that.isDraw) {\r\n          //请求修改数据接口\r\n          const {data: ref} = await that.$API.updateTableData(that.rowInfo);\r\n          if (ref.status !== 200) return;\r\n          that.$message.success(ref.msg);\r\n        } else {\r\n          that.rowInfo.fields = that.queryInfo.fields\r\n          that.rowInfo.geom = that.queryInfo.geom\r\n          that.rowInfo.tableName = that.queryInfo.tableName\r\n          const {data: ref} = await that.$API.addTableData(that.rowInfo)\r\n          if (ref.status !== 200) return;\r\n          that.$message.success(ref.msg);\r\n        }\r\n        //如果查询状态 请求查询接口\r\n        if (this.isFind) await this.getFindData();\r\n        else await this.getTableData();\r\n      });\r\n    },\r\n    //取消修改行数据\r\n    cancelRowEvent(row) {\r\n      let that = this;\r\n      const $table = this.$refs.xTable;\r\n      //表格数据取消修改时\r\n      $table.clearActived().then(() => {\r\n        //将旧wkt地理数据还原\r\n        row.wkt = that.oldWKT;\r\n        // 还原行数据\r\n        $table.revertData(row);\r\n        //移除编辑modify对象\r\n        that.map.removeInteraction(that.modify);\r\n        //更新wkt图层数据\r\n        that.addWKT(that.datas);\r\n      });\r\n    },\r\n    //删除行数据\r\n    removeEvent(row) {\r\n      //打开弹窗\r\n      this.$confirm('此操作将永久删除该数据, 是否继续?', '提示', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }).then(async () => {\r\n        //当弹窗点击修改后 请求删除接口\r\n        const {data: ref} = await this.$API.delTableData(this.rowInfo);\r\n        if (ref.status === 404) return;\r\n        this.$message.success(\"删除成功！\");\r\n        this.$refs.xTable.remove(row);\r\n        this.handleCurrentChange(1);\r\n      });\r\n    },\r\n    //设置表格行样式\r\n    rowClassName() {\r\n      // 返回类名row-height\r\n      return 'row-height';\r\n    }\r\n  },\r\n  watch: {\r\n    //监听路由变化\r\n    $route: {\r\n      handler: function (val, oldVal) {\r\n        //更新[表名,geometry字段名,geometry类型],\r\n        this.data = val.params.name.split(',');\r\n        //更新表名\r\n        this.queryInfo.tableName = this.data[0];\r\n        //更新geometry字段名称\r\n        this.queryInfo.geom = this.data[1];\r\n        //更新分页页码为1\r\n        this.queryInfo.pageNum = 1;\r\n        //获取该表格数据\r\n        this.getTableData();\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n<style>\r\n</style>\r\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./EditTable.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./EditTable.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./EditTable.vue?vue&type=template&id=c3108f80&\"\nimport script from \"./EditTable.vue?vue&type=script&lang=js&\"\nexport * from \"./EditTable.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","/**\n * Units for the scale line. Supported values are `'degrees'`, `'imperial'`,\n * `'nautical'`, `'metric'`, `'us'`.\n * @enum {string}\n */\nvar _ol_control_ScaleLineUnits_ = {\n  DEGREES: 'degrees',\n  IMPERIAL: 'imperial',\n  NAUTICAL: 'nautical',\n  METRIC: 'metric',\n  US: 'us'\n};\n\nexport default _ol_control_ScaleLineUnits_;\n","import _ol_ from '../index.js';\nimport _ol_Object_ from '../object.js';\nimport _ol_asserts_ from '../asserts.js';\nimport _ol_control_Control_ from '../control/control.js';\nimport _ol_control_ScaleLineUnits_ from '../control/scalelineunits.js';\nimport _ol_css_ from '../css.js';\nimport _ol_events_ from '../events.js';\nimport _ol_proj_ from '../proj.js';\nimport _ol_proj_Units_ from '../proj/units.js';\n\n/**\n * @classdesc\n * A control displaying rough y-axis distances, calculated for the center of the\n * viewport. For conformal projections (e.g. EPSG:3857, the default view\n * projection in OpenLayers), the scale is valid for all directions.\n * No scale line will be shown when the y-axis distance of a pixel at the\n * viewport center cannot be calculated in the view projection.\n * By default the scale line will show in the bottom left portion of the map,\n * but this can be changed by using the css selector `.ol-scale-line`.\n *\n * @constructor\n * @extends {ol.control.Control}\n * @param {olx.control.ScaleLineOptions=} opt_options Scale line options.\n * @api\n */\nvar _ol_control_ScaleLine_ = function(opt_options) {\n\n  var options = opt_options ? opt_options : {};\n\n  var className = options.className !== undefined ? options.className : 'ol-scale-line';\n\n  /**\n   * @private\n   * @type {Element}\n   */\n  this.innerElement_ = document.createElement('DIV');\n  this.innerElement_.className = className + '-inner';\n\n  /**\n   * @private\n   * @type {Element}\n   */\n  this.element_ = document.createElement('DIV');\n  this.element_.className = className + ' ' + _ol_css_.CLASS_UNSELECTABLE;\n  this.element_.appendChild(this.innerElement_);\n\n  /**\n   * @private\n   * @type {?olx.ViewState}\n   */\n  this.viewState_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.minWidth_ = options.minWidth !== undefined ? options.minWidth : 64;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.renderedVisible_ = false;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.renderedWidth_ = undefined;\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.renderedHTML_ = '';\n\n  var render = options.render ? options.render : _ol_control_ScaleLine_.render;\n\n  _ol_control_Control_.call(this, {\n    element: this.element_,\n    render: render,\n    target: options.target\n  });\n\n  _ol_events_.listen(\n      this, _ol_Object_.getChangeEventType(_ol_control_ScaleLine_.Property_.UNITS),\n      this.handleUnitsChanged_, this);\n\n  this.setUnits(/** @type {ol.control.ScaleLineUnits} */ (options.units) ||\n      _ol_control_ScaleLineUnits_.METRIC);\n\n};\n\n_ol_.inherits(_ol_control_ScaleLine_, _ol_control_Control_);\n\n\n/**\n * @const\n * @type {Array.<number>}\n */\n_ol_control_ScaleLine_.LEADING_DIGITS = [1, 2, 5];\n\n\n/**\n * Return the units to use in the scale line.\n * @return {ol.control.ScaleLineUnits|undefined} The units to use in the scale\n *     line.\n * @observable\n * @api\n */\n_ol_control_ScaleLine_.prototype.getUnits = function() {\n  return (\n    /** @type {ol.control.ScaleLineUnits|undefined} */ this.get(_ol_control_ScaleLine_.Property_.UNITS)\n  );\n};\n\n\n/**\n * Update the scale line element.\n * @param {ol.MapEvent} mapEvent Map event.\n * @this {ol.control.ScaleLine}\n * @api\n */\n_ol_control_ScaleLine_.render = function(mapEvent) {\n  var frameState = mapEvent.frameState;\n  if (!frameState) {\n    this.viewState_ = null;\n  } else {\n    this.viewState_ = frameState.viewState;\n  }\n  this.updateElement_();\n};\n\n\n/**\n * @private\n */\n_ol_control_ScaleLine_.prototype.handleUnitsChanged_ = function() {\n  this.updateElement_();\n};\n\n\n/**\n * Set the units to use in the scale line.\n * @param {ol.control.ScaleLineUnits} units The units to use in the scale line.\n * @observable\n * @api\n */\n_ol_control_ScaleLine_.prototype.setUnits = function(units) {\n  this.set(_ol_control_ScaleLine_.Property_.UNITS, units);\n};\n\n\n/**\n * @private\n */\n_ol_control_ScaleLine_.prototype.updateElement_ = function() {\n  var viewState = this.viewState_;\n\n  if (!viewState) {\n    if (this.renderedVisible_) {\n      this.element_.style.display = 'none';\n      this.renderedVisible_ = false;\n    }\n    return;\n  }\n\n  var center = viewState.center;\n  var projection = viewState.projection;\n  var units = this.getUnits();\n  var pointResolutionUnits = units == _ol_control_ScaleLineUnits_.DEGREES ?\n    _ol_proj_Units_.DEGREES :\n    _ol_proj_Units_.METERS;\n  var pointResolution =\n      _ol_proj_.getPointResolution(projection, viewState.resolution, center, pointResolutionUnits);\n  if (units != _ol_control_ScaleLineUnits_.DEGREES) {\n    pointResolution *= projection.getMetersPerUnit();\n  }\n\n  var nominalCount = this.minWidth_ * pointResolution;\n  var suffix = '';\n  if (units == _ol_control_ScaleLineUnits_.DEGREES) {\n    var metersPerDegree = _ol_proj_.METERS_PER_UNIT[_ol_proj_Units_.DEGREES];\n    if (projection.getUnits() == _ol_proj_Units_.DEGREES) {\n      nominalCount *= metersPerDegree;\n    } else {\n      pointResolution /= metersPerDegree;\n    }\n    if (nominalCount < metersPerDegree / 60) {\n      suffix = '\\u2033'; // seconds\n      pointResolution *= 3600;\n    } else if (nominalCount < metersPerDegree) {\n      suffix = '\\u2032'; // minutes\n      pointResolution *= 60;\n    } else {\n      suffix = '\\u00b0'; // degrees\n    }\n  } else if (units == _ol_control_ScaleLineUnits_.IMPERIAL) {\n    if (nominalCount < 0.9144) {\n      suffix = 'in';\n      pointResolution /= 0.0254;\n    } else if (nominalCount < 1609.344) {\n      suffix = 'ft';\n      pointResolution /= 0.3048;\n    } else {\n      suffix = 'mi';\n      pointResolution /= 1609.344;\n    }\n  } else if (units == _ol_control_ScaleLineUnits_.NAUTICAL) {\n    pointResolution /= 1852;\n    suffix = 'nm';\n  } else if (units == _ol_control_ScaleLineUnits_.METRIC) {\n    if (nominalCount < 0.001) {\n      suffix = 'μm';\n      pointResolution *= 1000000;\n    } else if (nominalCount < 1) {\n      suffix = 'mm';\n      pointResolution *= 1000;\n    } else if (nominalCount < 1000) {\n      suffix = 'm';\n    } else {\n      suffix = 'km';\n      pointResolution /= 1000;\n    }\n  } else if (units == _ol_control_ScaleLineUnits_.US) {\n    if (nominalCount < 0.9144) {\n      suffix = 'in';\n      pointResolution *= 39.37;\n    } else if (nominalCount < 1609.344) {\n      suffix = 'ft';\n      pointResolution /= 0.30480061;\n    } else {\n      suffix = 'mi';\n      pointResolution /= 1609.3472;\n    }\n  } else {\n    _ol_asserts_.assert(false, 33); // Invalid units\n  }\n\n  var i = 3 * Math.floor(\n      Math.log(this.minWidth_ * pointResolution) / Math.log(10));\n  var count, width;\n  while (true) {\n    count = _ol_control_ScaleLine_.LEADING_DIGITS[((i % 3) + 3) % 3] *\n        Math.pow(10, Math.floor(i / 3));\n    width = Math.round(count / pointResolution);\n    if (isNaN(width)) {\n      this.element_.style.display = 'none';\n      this.renderedVisible_ = false;\n      return;\n    } else if (width >= this.minWidth_) {\n      break;\n    }\n    ++i;\n  }\n\n  var html = count + ' ' + suffix;\n  if (this.renderedHTML_ != html) {\n    this.innerElement_.innerHTML = html;\n    this.renderedHTML_ = html;\n  }\n\n  if (this.renderedWidth_ != width) {\n    this.innerElement_.style.width = width + 'px';\n    this.renderedWidth_ = width;\n  }\n\n  if (!this.renderedVisible_) {\n    this.element_.style.display = '';\n    this.renderedVisible_ = true;\n  }\n\n};\n\n\n/**\n * @enum {string}\n * @private\n */\n_ol_control_ScaleLine_.Property_ = {\n  UNITS: 'units'\n};\nexport default _ol_control_ScaleLine_;\n","import _ol_ from '../index.js';\nimport _ol_format_Feature_ from '../format/feature.js';\nimport _ol_format_FormatType_ from '../format/formattype.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for text feature formats.\n *\n * @constructor\n * @abstract\n * @extends {ol.format.Feature}\n */\nvar _ol_format_TextFeature_ = function() {\n  _ol_format_Feature_.call(this);\n};\n\n_ol_.inherits(_ol_format_TextFeature_, _ol_format_Feature_);\n\n\n/**\n * @param {Document|Node|Object|string} source Source.\n * @private\n * @return {string} Text.\n */\n_ol_format_TextFeature_.prototype.getText_ = function(source) {\n  if (typeof source === 'string') {\n    return source;\n  } else {\n    return '';\n  }\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_format_TextFeature_.prototype.getType = function() {\n  return _ol_format_FormatType_.TEXT;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_format_TextFeature_.prototype.readFeature = function(source, opt_options) {\n  return this.readFeatureFromText(\n      this.getText_(source), this.adaptOptions(opt_options));\n};\n\n\n/**\n * @abstract\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @protected\n * @return {ol.Feature} Feature.\n */\n_ol_format_TextFeature_.prototype.readFeatureFromText = function(text, opt_options) {};\n\n\n/**\n * @inheritDoc\n */\n_ol_format_TextFeature_.prototype.readFeatures = function(source, opt_options) {\n  return this.readFeaturesFromText(\n      this.getText_(source), this.adaptOptions(opt_options));\n};\n\n\n/**\n * @abstract\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @protected\n * @return {Array.<ol.Feature>} Features.\n */\n_ol_format_TextFeature_.prototype.readFeaturesFromText = function(text, opt_options) {};\n\n\n/**\n * @inheritDoc\n */\n_ol_format_TextFeature_.prototype.readGeometry = function(source, opt_options) {\n  return this.readGeometryFromText(\n      this.getText_(source), this.adaptOptions(opt_options));\n};\n\n\n/**\n * @abstract\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @protected\n * @return {ol.geom.Geometry} Geometry.\n */\n_ol_format_TextFeature_.prototype.readGeometryFromText = function(text, opt_options) {};\n\n\n/**\n * @inheritDoc\n */\n_ol_format_TextFeature_.prototype.readProjection = function(source) {\n  return this.readProjectionFromText(this.getText_(source));\n};\n\n\n/**\n * @param {string} text Text.\n * @protected\n * @return {ol.proj.Projection} Projection.\n */\n_ol_format_TextFeature_.prototype.readProjectionFromText = function(text) {\n  return this.defaultDataProjection;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_format_TextFeature_.prototype.writeFeature = function(feature, opt_options) {\n  return this.writeFeatureText(feature, this.adaptOptions(opt_options));\n};\n\n\n/**\n * @abstract\n * @param {ol.Feature} feature Features.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @protected\n * @return {string} Text.\n */\n_ol_format_TextFeature_.prototype.writeFeatureText = function(feature, opt_options) {};\n\n\n/**\n * @inheritDoc\n */\n_ol_format_TextFeature_.prototype.writeFeatures = function(\n    features, opt_options) {\n  return this.writeFeaturesText(features, this.adaptOptions(opt_options));\n};\n\n\n/**\n * @abstract\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @protected\n * @return {string} Text.\n */\n_ol_format_TextFeature_.prototype.writeFeaturesText = function(features, opt_options) {};\n\n\n/**\n * @inheritDoc\n */\n_ol_format_TextFeature_.prototype.writeGeometry = function(\n    geometry, opt_options) {\n  return this.writeGeometryText(geometry, this.adaptOptions(opt_options));\n};\n\n\n/**\n * @abstract\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @protected\n * @return {string} Text.\n */\n_ol_format_TextFeature_.prototype.writeGeometryText = function(geometry, opt_options) {};\nexport default _ol_format_TextFeature_;\n","import _ol_ from '../index.js';\nimport _ol_Feature_ from '../feature.js';\nimport _ol_format_Feature_ from '../format/feature.js';\nimport _ol_format_TextFeature_ from '../format/textfeature.js';\nimport _ol_geom_GeometryCollection_ from '../geom/geometrycollection.js';\nimport _ol_geom_GeometryType_ from '../geom/geometrytype.js';\nimport _ol_geom_GeometryLayout_ from '../geom/geometrylayout.js';\nimport _ol_geom_LineString_ from '../geom/linestring.js';\nimport _ol_geom_MultiLineString_ from '../geom/multilinestring.js';\nimport _ol_geom_MultiPoint_ from '../geom/multipoint.js';\nimport _ol_geom_MultiPolygon_ from '../geom/multipolygon.js';\nimport _ol_geom_Point_ from '../geom/point.js';\nimport _ol_geom_Polygon_ from '../geom/polygon.js';\nimport _ol_geom_SimpleGeometry_ from '../geom/simplegeometry.js';\n\n/**\n * @classdesc\n * Geometry format for reading and writing data in the `WellKnownText` (WKT)\n * format.\n *\n * @constructor\n * @extends {ol.format.TextFeature}\n * @param {olx.format.WKTOptions=} opt_options Options.\n * @api\n */\nvar _ol_format_WKT_ = function(opt_options) {\n\n  var options = opt_options ? opt_options : {};\n\n  _ol_format_TextFeature_.call(this);\n\n  /**\n   * Split GeometryCollection into multiple features.\n   * @type {boolean}\n   * @private\n   */\n  this.splitCollection_ = options.splitCollection !== undefined ?\n    options.splitCollection : false;\n\n};\n\n_ol_.inherits(_ol_format_WKT_, _ol_format_TextFeature_);\n\n\n/**\n * @const\n * @type {string}\n */\n_ol_format_WKT_.EMPTY = 'EMPTY';\n\n\n/**\n * @const\n * @type {string}\n */\n_ol_format_WKT_.Z = 'Z';\n\n\n/**\n * @const\n * @type {string}\n */\n_ol_format_WKT_.M = 'M';\n\n\n/**\n * @const\n * @type {string}\n */\n_ol_format_WKT_.ZM = 'ZM';\n\n\n/**\n * @param {ol.geom.Point} geom Point geometry.\n * @return {string} Coordinates part of Point as WKT.\n * @private\n */\n_ol_format_WKT_.encodePointGeometry_ = function(geom) {\n  var coordinates = geom.getCoordinates();\n  if (coordinates.length === 0) {\n    return '';\n  }\n  return coordinates.join(' ');\n};\n\n\n/**\n * @param {ol.geom.MultiPoint} geom MultiPoint geometry.\n * @return {string} Coordinates part of MultiPoint as WKT.\n * @private\n */\n_ol_format_WKT_.encodeMultiPointGeometry_ = function(geom) {\n  var array = [];\n  var components = geom.getPoints();\n  for (var i = 0, ii = components.length; i < ii; ++i) {\n    array.push('(' + _ol_format_WKT_.encodePointGeometry_(components[i]) + ')');\n  }\n  return array.join(',');\n};\n\n\n/**\n * @param {ol.geom.GeometryCollection} geom GeometryCollection geometry.\n * @return {string} Coordinates part of GeometryCollection as WKT.\n * @private\n */\n_ol_format_WKT_.encodeGeometryCollectionGeometry_ = function(geom) {\n  var array = [];\n  var geoms = geom.getGeometries();\n  for (var i = 0, ii = geoms.length; i < ii; ++i) {\n    array.push(_ol_format_WKT_.encode_(geoms[i]));\n  }\n  return array.join(',');\n};\n\n\n/**\n * @param {ol.geom.LineString|ol.geom.LinearRing} geom LineString geometry.\n * @return {string} Coordinates part of LineString as WKT.\n * @private\n */\n_ol_format_WKT_.encodeLineStringGeometry_ = function(geom) {\n  var coordinates = geom.getCoordinates();\n  var array = [];\n  for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n    array.push(coordinates[i].join(' '));\n  }\n  return array.join(',');\n};\n\n\n/**\n * @param {ol.geom.MultiLineString} geom MultiLineString geometry.\n * @return {string} Coordinates part of MultiLineString as WKT.\n * @private\n */\n_ol_format_WKT_.encodeMultiLineStringGeometry_ = function(geom) {\n  var array = [];\n  var components = geom.getLineStrings();\n  for (var i = 0, ii = components.length; i < ii; ++i) {\n    array.push('(' + _ol_format_WKT_.encodeLineStringGeometry_(\n        components[i]) + ')');\n  }\n  return array.join(',');\n};\n\n\n/**\n * @param {ol.geom.Polygon} geom Polygon geometry.\n * @return {string} Coordinates part of Polygon as WKT.\n * @private\n */\n_ol_format_WKT_.encodePolygonGeometry_ = function(geom) {\n  var array = [];\n  var rings = geom.getLinearRings();\n  for (var i = 0, ii = rings.length; i < ii; ++i) {\n    array.push('(' + _ol_format_WKT_.encodeLineStringGeometry_(\n        rings[i]) + ')');\n  }\n  return array.join(',');\n};\n\n\n/**\n * @param {ol.geom.MultiPolygon} geom MultiPolygon geometry.\n * @return {string} Coordinates part of MultiPolygon as WKT.\n * @private\n */\n_ol_format_WKT_.encodeMultiPolygonGeometry_ = function(geom) {\n  var array = [];\n  var components = geom.getPolygons();\n  for (var i = 0, ii = components.length; i < ii; ++i) {\n    array.push('(' + _ol_format_WKT_.encodePolygonGeometry_(\n        components[i]) + ')');\n  }\n  return array.join(',');\n};\n\n/**\n * @param {ol.geom.SimpleGeometry} geom SimpleGeometry geometry.\n * @return {string} Potential dimensional information for WKT type.\n * @private\n */\n_ol_format_WKT_.encodeGeometryLayout_ = function(geom) {\n  var layout = geom.getLayout();\n  var dimInfo = '';\n  if (layout === _ol_geom_GeometryLayout_.XYZ || layout === _ol_geom_GeometryLayout_.XYZM) {\n    dimInfo += _ol_format_WKT_.Z;\n  }\n  if (layout === _ol_geom_GeometryLayout_.XYM || layout === _ol_geom_GeometryLayout_.XYZM) {\n    dimInfo += _ol_format_WKT_.M;\n  }\n  return dimInfo;\n};\n\n\n/**\n * Encode a geometry as WKT.\n * @param {ol.geom.Geometry} geom The geometry to encode.\n * @return {string} WKT string for the geometry.\n * @private\n */\n_ol_format_WKT_.encode_ = function(geom) {\n  var type = geom.getType();\n  var geometryEncoder = _ol_format_WKT_.GeometryEncoder_[type];\n  var enc = geometryEncoder(geom);\n  type = type.toUpperCase();\n  if (geom instanceof _ol_geom_SimpleGeometry_) {\n    var dimInfo = _ol_format_WKT_.encodeGeometryLayout_(geom);\n    if (dimInfo.length > 0) {\n      type += ' ' + dimInfo;\n    }\n  }\n  if (enc.length === 0) {\n    return type + ' ' + _ol_format_WKT_.EMPTY;\n  }\n  return type + '(' + enc + ')';\n};\n\n\n/**\n * @const\n * @type {Object.<string, function(ol.geom.Geometry): string>}\n * @private\n */\n_ol_format_WKT_.GeometryEncoder_ = {\n  'Point': _ol_format_WKT_.encodePointGeometry_,\n  'LineString': _ol_format_WKT_.encodeLineStringGeometry_,\n  'Polygon': _ol_format_WKT_.encodePolygonGeometry_,\n  'MultiPoint': _ol_format_WKT_.encodeMultiPointGeometry_,\n  'MultiLineString': _ol_format_WKT_.encodeMultiLineStringGeometry_,\n  'MultiPolygon': _ol_format_WKT_.encodeMultiPolygonGeometry_,\n  'GeometryCollection': _ol_format_WKT_.encodeGeometryCollectionGeometry_\n};\n\n\n/**\n * Parse a WKT string.\n * @param {string} wkt WKT string.\n * @return {ol.geom.Geometry|undefined}\n *     The geometry created.\n * @private\n */\n_ol_format_WKT_.prototype.parse_ = function(wkt) {\n  var lexer = new _ol_format_WKT_.Lexer(wkt);\n  var parser = new _ol_format_WKT_.Parser(lexer);\n  return parser.parse();\n};\n\n\n/**\n * Read a feature from a WKT source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.Feature} Feature.\n * @api\n */\n_ol_format_WKT_.prototype.readFeature;\n\n\n/**\n * @inheritDoc\n */\n_ol_format_WKT_.prototype.readFeatureFromText = function(text, opt_options) {\n  var geom = this.readGeometryFromText(text, opt_options);\n  if (geom) {\n    var feature = new _ol_Feature_();\n    feature.setGeometry(geom);\n    return feature;\n  }\n  return null;\n};\n\n\n/**\n * Read all features from a WKT source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @api\n */\n_ol_format_WKT_.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\n_ol_format_WKT_.prototype.readFeaturesFromText = function(text, opt_options) {\n  var geometries = [];\n  var geometry = this.readGeometryFromText(text, opt_options);\n  if (this.splitCollection_ &&\n      geometry.getType() == _ol_geom_GeometryType_.GEOMETRY_COLLECTION) {\n    geometries = (/** @type {ol.geom.GeometryCollection} */ (geometry))\n        .getGeometriesArray();\n  } else {\n    geometries = [geometry];\n  }\n  var feature, features = [];\n  for (var i = 0, ii = geometries.length; i < ii; ++i) {\n    feature = new _ol_Feature_();\n    feature.setGeometry(geometries[i]);\n    features.push(feature);\n  }\n  return features;\n};\n\n\n/**\n * Read a single geometry from a WKT source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.geom.Geometry} Geometry.\n * @api\n */\n_ol_format_WKT_.prototype.readGeometry;\n\n\n/**\n * @inheritDoc\n */\n_ol_format_WKT_.prototype.readGeometryFromText = function(text, opt_options) {\n  var geometry = this.parse_(text);\n  if (geometry) {\n    return (\n      /** @type {ol.geom.Geometry} */ _ol_format_Feature_.transformWithOptions(geometry, false, opt_options)\n    );\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * Encode a feature as a WKT string.\n *\n * @function\n * @param {ol.Feature} feature Feature.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {string} WKT string.\n * @api\n */\n_ol_format_WKT_.prototype.writeFeature;\n\n\n/**\n * @inheritDoc\n */\n_ol_format_WKT_.prototype.writeFeatureText = function(feature, opt_options) {\n  var geometry = feature.getGeometry();\n  if (geometry) {\n    return this.writeGeometryText(geometry, opt_options);\n  }\n  return '';\n};\n\n\n/**\n * Encode an array of features as a WKT string.\n *\n * @function\n * @param {Array.<ol.Feature>} features Features.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {string} WKT string.\n * @api\n */\n_ol_format_WKT_.prototype.writeFeatures;\n\n\n/**\n * @inheritDoc\n */\n_ol_format_WKT_.prototype.writeFeaturesText = function(features, opt_options) {\n  if (features.length == 1) {\n    return this.writeFeatureText(features[0], opt_options);\n  }\n  var geometries = [];\n  for (var i = 0, ii = features.length; i < ii; ++i) {\n    geometries.push(features[i].getGeometry());\n  }\n  var collection = new _ol_geom_GeometryCollection_(geometries);\n  return this.writeGeometryText(collection, opt_options);\n};\n\n\n/**\n * Write a single geometry as a WKT string.\n *\n * @function\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.WriteOptions=} opt_options Write options.\n * @return {string} WKT string.\n * @api\n */\n_ol_format_WKT_.prototype.writeGeometry;\n\n\n/**\n * @inheritDoc\n */\n_ol_format_WKT_.prototype.writeGeometryText = function(geometry, opt_options) {\n  return _ol_format_WKT_.encode_(/** @type {ol.geom.Geometry} */ (\n    _ol_format_Feature_.transformWithOptions(geometry, true, opt_options)));\n};\n\n\n/**\n * @const\n * @enum {number}\n * @private\n */\n_ol_format_WKT_.TokenType_ = {\n  TEXT: 1,\n  LEFT_PAREN: 2,\n  RIGHT_PAREN: 3,\n  NUMBER: 4,\n  COMMA: 5,\n  EOF: 6\n};\n\n\n/**\n * Class to tokenize a WKT string.\n * @param {string} wkt WKT string.\n * @constructor\n * @protected\n */\n_ol_format_WKT_.Lexer = function(wkt) {\n\n  /**\n   * @type {string}\n   */\n  this.wkt = wkt;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.index_ = -1;\n};\n\n\n/**\n * @param {string} c Character.\n * @return {boolean} Whether the character is alphabetic.\n * @private\n */\n_ol_format_WKT_.Lexer.prototype.isAlpha_ = function(c) {\n  return c >= 'a' && c <= 'z' || c >= 'A' && c <= 'Z';\n};\n\n\n/**\n * @param {string} c Character.\n * @param {boolean=} opt_decimal Whether the string number\n *     contains a dot, i.e. is a decimal number.\n * @return {boolean} Whether the character is numeric.\n * @private\n */\n_ol_format_WKT_.Lexer.prototype.isNumeric_ = function(c, opt_decimal) {\n  var decimal = opt_decimal !== undefined ? opt_decimal : false;\n  return c >= '0' && c <= '9' || c == '.' && !decimal;\n};\n\n\n/**\n * @param {string} c Character.\n * @return {boolean} Whether the character is whitespace.\n * @private\n */\n_ol_format_WKT_.Lexer.prototype.isWhiteSpace_ = function(c) {\n  return c == ' ' || c == '\\t' || c == '\\r' || c == '\\n';\n};\n\n\n/**\n * @return {string} Next string character.\n * @private\n */\n_ol_format_WKT_.Lexer.prototype.nextChar_ = function() {\n  return this.wkt.charAt(++this.index_);\n};\n\n\n/**\n * Fetch and return the next token.\n * @return {!ol.WKTToken} Next string token.\n */\n_ol_format_WKT_.Lexer.prototype.nextToken = function() {\n  var c = this.nextChar_();\n  var token = {position: this.index_, value: c};\n\n  if (c == '(') {\n    token.type = _ol_format_WKT_.TokenType_.LEFT_PAREN;\n  } else if (c == ',') {\n    token.type = _ol_format_WKT_.TokenType_.COMMA;\n  } else if (c == ')') {\n    token.type = _ol_format_WKT_.TokenType_.RIGHT_PAREN;\n  } else if (this.isNumeric_(c) || c == '-') {\n    token.type = _ol_format_WKT_.TokenType_.NUMBER;\n    token.value = this.readNumber_();\n  } else if (this.isAlpha_(c)) {\n    token.type = _ol_format_WKT_.TokenType_.TEXT;\n    token.value = this.readText_();\n  } else if (this.isWhiteSpace_(c)) {\n    return this.nextToken();\n  } else if (c === '') {\n    token.type = _ol_format_WKT_.TokenType_.EOF;\n  } else {\n    throw new Error('Unexpected character: ' + c);\n  }\n\n  return token;\n};\n\n\n/**\n * @return {number} Numeric token value.\n * @private\n */\n_ol_format_WKT_.Lexer.prototype.readNumber_ = function() {\n  var c, index = this.index_;\n  var decimal = false;\n  var scientificNotation = false;\n  do {\n    if (c == '.') {\n      decimal = true;\n    } else if (c == 'e' || c == 'E') {\n      scientificNotation = true;\n    }\n    c = this.nextChar_();\n  } while (\n    this.isNumeric_(c, decimal) ||\n      // if we haven't detected a scientific number before, 'e' or 'E'\n      // hint that we should continue to read\n      !scientificNotation && (c == 'e' || c == 'E') ||\n      // once we know that we have a scientific number, both '-' and '+'\n      // are allowed\n      scientificNotation && (c == '-' || c == '+')\n  );\n  return parseFloat(this.wkt.substring(index, this.index_--));\n};\n\n\n/**\n * @return {string} String token value.\n * @private\n */\n_ol_format_WKT_.Lexer.prototype.readText_ = function() {\n  var c, index = this.index_;\n  do {\n    c = this.nextChar_();\n  } while (this.isAlpha_(c));\n  return this.wkt.substring(index, this.index_--).toUpperCase();\n};\n\n\n/**\n * Class to parse the tokens from the WKT string.\n * @param {ol.format.WKT.Lexer} lexer The lexer.\n * @constructor\n * @protected\n */\n_ol_format_WKT_.Parser = function(lexer) {\n\n  /**\n   * @type {ol.format.WKT.Lexer}\n   * @private\n   */\n  this.lexer_ = lexer;\n\n  /**\n   * @type {ol.WKTToken}\n   * @private\n   */\n  this.token_;\n\n  /**\n   * @type {ol.geom.GeometryLayout}\n   * @private\n   */\n  this.layout_ = _ol_geom_GeometryLayout_.XY;\n};\n\n\n/**\n * Fetch the next token form the lexer and replace the active token.\n * @private\n */\n_ol_format_WKT_.Parser.prototype.consume_ = function() {\n  this.token_ = this.lexer_.nextToken();\n};\n\n/**\n * Tests if the given type matches the type of the current token.\n * @param {ol.format.WKT.TokenType_} type Token type.\n * @return {boolean} Whether the token matches the given type.\n */\n_ol_format_WKT_.Parser.prototype.isTokenType = function(type) {\n  var isMatch = this.token_.type == type;\n  return isMatch;\n};\n\n\n/**\n * If the given type matches the current token, consume it.\n * @param {ol.format.WKT.TokenType_} type Token type.\n * @return {boolean} Whether the token matches the given type.\n */\n_ol_format_WKT_.Parser.prototype.match = function(type) {\n  var isMatch = this.isTokenType(type);\n  if (isMatch) {\n    this.consume_();\n  }\n  return isMatch;\n};\n\n\n/**\n * Try to parse the tokens provided by the lexer.\n * @return {ol.geom.Geometry} The geometry.\n */\n_ol_format_WKT_.Parser.prototype.parse = function() {\n  this.consume_();\n  var geometry = this.parseGeometry_();\n  return geometry;\n};\n\n\n/**\n * Try to parse the dimensional info.\n * @return {ol.geom.GeometryLayout} The layout.\n * @private\n */\n_ol_format_WKT_.Parser.prototype.parseGeometryLayout_ = function() {\n  var layout = _ol_geom_GeometryLayout_.XY;\n  var dimToken = this.token_;\n  if (this.isTokenType(_ol_format_WKT_.TokenType_.TEXT)) {\n    var dimInfo = dimToken.value;\n    if (dimInfo === _ol_format_WKT_.Z) {\n      layout = _ol_geom_GeometryLayout_.XYZ;\n    } else if (dimInfo === _ol_format_WKT_.M) {\n      layout = _ol_geom_GeometryLayout_.XYM;\n    } else if (dimInfo === _ol_format_WKT_.ZM) {\n      layout = _ol_geom_GeometryLayout_.XYZM;\n    }\n    if (layout !== _ol_geom_GeometryLayout_.XY) {\n      this.consume_();\n    }\n  }\n  return layout;\n};\n\n\n/**\n * @return {!ol.geom.Geometry} The geometry.\n * @private\n */\n_ol_format_WKT_.Parser.prototype.parseGeometry_ = function() {\n  var token = this.token_;\n  if (this.match(_ol_format_WKT_.TokenType_.TEXT)) {\n    var geomType = token.value;\n    this.layout_ = this.parseGeometryLayout_();\n    if (geomType == _ol_geom_GeometryType_.GEOMETRY_COLLECTION.toUpperCase()) {\n      var geometries = this.parseGeometryCollectionText_();\n      return new _ol_geom_GeometryCollection_(geometries);\n    } else {\n      var parser = _ol_format_WKT_.Parser.GeometryParser_[geomType];\n      var ctor = _ol_format_WKT_.Parser.GeometryConstructor_[geomType];\n      if (!parser || !ctor) {\n        throw new Error('Invalid geometry type: ' + geomType);\n      }\n      var coordinates = parser.call(this);\n      return new ctor(coordinates, this.layout_);\n    }\n  }\n  throw new Error(this.formatErrorMessage_());\n};\n\n\n/**\n * @return {!Array.<ol.geom.Geometry>} A collection of geometries.\n * @private\n */\n_ol_format_WKT_.Parser.prototype.parseGeometryCollectionText_ = function() {\n  if (this.match(_ol_format_WKT_.TokenType_.LEFT_PAREN)) {\n    var geometries = [];\n    do {\n      geometries.push(this.parseGeometry_());\n    } while (this.match(_ol_format_WKT_.TokenType_.COMMA));\n    if (this.match(_ol_format_WKT_.TokenType_.RIGHT_PAREN)) {\n      return geometries;\n    }\n  } else if (this.isEmptyGeometry_()) {\n    return [];\n  }\n  throw new Error(this.formatErrorMessage_());\n};\n\n\n/**\n * @return {Array.<number>} All values in a point.\n * @private\n */\n_ol_format_WKT_.Parser.prototype.parsePointText_ = function() {\n  if (this.match(_ol_format_WKT_.TokenType_.LEFT_PAREN)) {\n    var coordinates = this.parsePoint_();\n    if (this.match(_ol_format_WKT_.TokenType_.RIGHT_PAREN)) {\n      return coordinates;\n    }\n  } else if (this.isEmptyGeometry_()) {\n    return null;\n  }\n  throw new Error(this.formatErrorMessage_());\n};\n\n\n/**\n * @return {!Array.<!Array.<number>>} All points in a linestring.\n * @private\n */\n_ol_format_WKT_.Parser.prototype.parseLineStringText_ = function() {\n  if (this.match(_ol_format_WKT_.TokenType_.LEFT_PAREN)) {\n    var coordinates = this.parsePointList_();\n    if (this.match(_ol_format_WKT_.TokenType_.RIGHT_PAREN)) {\n      return coordinates;\n    }\n  } else if (this.isEmptyGeometry_()) {\n    return [];\n  }\n  throw new Error(this.formatErrorMessage_());\n};\n\n\n/**\n * @return {!Array.<!Array.<number>>} All points in a polygon.\n * @private\n */\n_ol_format_WKT_.Parser.prototype.parsePolygonText_ = function() {\n  if (this.match(_ol_format_WKT_.TokenType_.LEFT_PAREN)) {\n    var coordinates = this.parseLineStringTextList_();\n    if (this.match(_ol_format_WKT_.TokenType_.RIGHT_PAREN)) {\n      return coordinates;\n    }\n  } else if (this.isEmptyGeometry_()) {\n    return [];\n  }\n  throw new Error(this.formatErrorMessage_());\n};\n\n\n/**\n * @return {!Array.<!Array.<number>>} All points in a multipoint.\n * @private\n */\n_ol_format_WKT_.Parser.prototype.parseMultiPointText_ = function() {\n  if (this.match(_ol_format_WKT_.TokenType_.LEFT_PAREN)) {\n    var coordinates;\n    if (this.token_.type == _ol_format_WKT_.TokenType_.LEFT_PAREN) {\n      coordinates = this.parsePointTextList_();\n    } else {\n      coordinates = this.parsePointList_();\n    }\n    if (this.match(_ol_format_WKT_.TokenType_.RIGHT_PAREN)) {\n      return coordinates;\n    }\n  } else if (this.isEmptyGeometry_()) {\n    return [];\n  }\n  throw new Error(this.formatErrorMessage_());\n};\n\n\n/**\n * @return {!Array.<!Array.<number>>} All linestring points\n *                                        in a multilinestring.\n * @private\n */\n_ol_format_WKT_.Parser.prototype.parseMultiLineStringText_ = function() {\n  if (this.match(_ol_format_WKT_.TokenType_.LEFT_PAREN)) {\n    var coordinates = this.parseLineStringTextList_();\n    if (this.match(_ol_format_WKT_.TokenType_.RIGHT_PAREN)) {\n      return coordinates;\n    }\n  } else if (this.isEmptyGeometry_()) {\n    return [];\n  }\n  throw new Error(this.formatErrorMessage_());\n};\n\n\n/**\n * @return {!Array.<!Array.<number>>} All polygon points in a multipolygon.\n * @private\n */\n_ol_format_WKT_.Parser.prototype.parseMultiPolygonText_ = function() {\n  if (this.match(_ol_format_WKT_.TokenType_.LEFT_PAREN)) {\n    var coordinates = this.parsePolygonTextList_();\n    if (this.match(_ol_format_WKT_.TokenType_.RIGHT_PAREN)) {\n      return coordinates;\n    }\n  } else if (this.isEmptyGeometry_()) {\n    return [];\n  }\n  throw new Error(this.formatErrorMessage_());\n};\n\n\n/**\n * @return {!Array.<number>} A point.\n * @private\n */\n_ol_format_WKT_.Parser.prototype.parsePoint_ = function() {\n  var coordinates = [];\n  var dimensions = this.layout_.length;\n  for (var i = 0; i < dimensions; ++i) {\n    var token = this.token_;\n    if (this.match(_ol_format_WKT_.TokenType_.NUMBER)) {\n      coordinates.push(token.value);\n    } else {\n      break;\n    }\n  }\n  if (coordinates.length == dimensions) {\n    return coordinates;\n  }\n  throw new Error(this.formatErrorMessage_());\n};\n\n\n/**\n * @return {!Array.<!Array.<number>>} An array of points.\n * @private\n */\n_ol_format_WKT_.Parser.prototype.parsePointList_ = function() {\n  var coordinates = [this.parsePoint_()];\n  while (this.match(_ol_format_WKT_.TokenType_.COMMA)) {\n    coordinates.push(this.parsePoint_());\n  }\n  return coordinates;\n};\n\n\n/**\n * @return {!Array.<!Array.<number>>} An array of points.\n * @private\n */\n_ol_format_WKT_.Parser.prototype.parsePointTextList_ = function() {\n  var coordinates = [this.parsePointText_()];\n  while (this.match(_ol_format_WKT_.TokenType_.COMMA)) {\n    coordinates.push(this.parsePointText_());\n  }\n  return coordinates;\n};\n\n\n/**\n * @return {!Array.<!Array.<number>>} An array of points.\n * @private\n */\n_ol_format_WKT_.Parser.prototype.parseLineStringTextList_ = function() {\n  var coordinates = [this.parseLineStringText_()];\n  while (this.match(_ol_format_WKT_.TokenType_.COMMA)) {\n    coordinates.push(this.parseLineStringText_());\n  }\n  return coordinates;\n};\n\n\n/**\n * @return {!Array.<!Array.<number>>} An array of points.\n * @private\n */\n_ol_format_WKT_.Parser.prototype.parsePolygonTextList_ = function() {\n  var coordinates = [this.parsePolygonText_()];\n  while (this.match(_ol_format_WKT_.TokenType_.COMMA)) {\n    coordinates.push(this.parsePolygonText_());\n  }\n  return coordinates;\n};\n\n\n/**\n * @return {boolean} Whether the token implies an empty geometry.\n * @private\n */\n_ol_format_WKT_.Parser.prototype.isEmptyGeometry_ = function() {\n  var isEmpty = this.isTokenType(_ol_format_WKT_.TokenType_.TEXT) &&\n      this.token_.value == _ol_format_WKT_.EMPTY;\n  if (isEmpty) {\n    this.consume_();\n  }\n  return isEmpty;\n};\n\n\n/**\n * Create an error message for an unexpected token error.\n * @return {string} Error message.\n * @private\n */\n_ol_format_WKT_.Parser.prototype.formatErrorMessage_ = function() {\n  return 'Unexpected `' + this.token_.value + '` at position ' +\n      this.token_.position + ' in `' + this.lexer_.wkt + '`';\n};\n\n\n/**\n * @enum {function (new:ol.geom.Geometry, Array, ol.geom.GeometryLayout)}\n * @private\n */\n_ol_format_WKT_.Parser.GeometryConstructor_ = {\n  'POINT': _ol_geom_Point_,\n  'LINESTRING': _ol_geom_LineString_,\n  'POLYGON': _ol_geom_Polygon_,\n  'MULTIPOINT': _ol_geom_MultiPoint_,\n  'MULTILINESTRING': _ol_geom_MultiLineString_,\n  'MULTIPOLYGON': _ol_geom_MultiPolygon_\n};\n\n\n/**\n * @enum {(function(): Array)}\n * @private\n */\n_ol_format_WKT_.Parser.GeometryParser_ = {\n  'POINT': _ol_format_WKT_.Parser.prototype.parsePointText_,\n  'LINESTRING': _ol_format_WKT_.Parser.prototype.parseLineStringText_,\n  'POLYGON': _ol_format_WKT_.Parser.prototype.parsePolygonText_,\n  'MULTIPOINT': _ol_format_WKT_.Parser.prototype.parseMultiPointText_,\n  'MULTILINESTRING': _ol_format_WKT_.Parser.prototype.parseMultiLineStringText_,\n  'MULTIPOLYGON': _ol_format_WKT_.Parser.prototype.parseMultiPolygonText_\n};\nexport default _ol_format_WKT_;\n","import _ol_ from '../index.js';\nimport _ol_source_XYZ_ from '../source/xyz.js';\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n *\n * @constructor\n * @extends {ol.source.XYZ}\n * @param {olx.source.OSMOptions=} opt_options Open Street Map options.\n * @api\n */\nvar _ol_source_OSM_ = function(opt_options) {\n\n  var options = opt_options || {};\n\n  var attributions;\n  if (options.attributions !== undefined) {\n    attributions = options.attributions;\n  } else {\n    attributions = [_ol_source_OSM_.ATTRIBUTION];\n  }\n\n  var crossOrigin = options.crossOrigin !== undefined ?\n    options.crossOrigin : 'anonymous';\n\n  var url = options.url !== undefined ?\n    options.url : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n  _ol_source_XYZ_.call(this, {\n    attributions: attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: crossOrigin,\n    opaque: options.opaque !== undefined ? options.opaque : true,\n    maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileLoadFunction: options.tileLoadFunction,\n    url: url,\n    wrapX: options.wrapX\n  });\n\n};\n\n_ol_.inherits(_ol_source_OSM_, _ol_source_XYZ_);\n\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\n_ol_source_OSM_.ATTRIBUTION = '&copy; ' +\n      '<a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> ' +\n      'contributors.';\nexport default _ol_source_OSM_;\n"],"sourceRoot":""}