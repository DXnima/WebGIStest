{"version":3,"sources":["webpack:///./node_modules/ol/layer/image.js","webpack:///./node_modules/ol/source/wmsservertype.js","webpack:///./node_modules/ol/image.js","webpack:///./node_modules/ol/reproj/image.js","webpack:///./node_modules/ol/source/image.js","webpack:///./node_modules/ol/source/imagewms.js","webpack:///./src/components/geoserver/WMS.vue","webpack:///src/components/geoserver/WMS.vue","webpack:///./src/components/geoserver/WMS.vue?ca51","webpack:///./src/components/geoserver/WMS.vue?a3f6","webpack:///./node_modules/ol/uri.js"],"names":["_ol_layer_Image_","opt_options","options","call","this","type","IMAGE","inherits","prototype","getSource","_ol_source_WMSServerType_","CARMENTA_SERVER","GEOSERVER","MAPSERVER","QGIS","_ol_Image_","extent","resolution","pixelRatio","src","crossOrigin","imageLoadFunction","IDLE","src_","image_","Image","imageListenerKeys_","state","imageLoadFunction_","getImage","handleImageError_","ERROR","unlistenImage_","changed","handleImageLoad_","undefined","getHeight","height","LOADED","load","LOADING","listenOnce","LOAD","setImage","image","forEach","unlistenByKey","_ol_reproj_Image_","sourceProj","targetProj","targetExtent","targetResolution","getImageFunction","targetProj_","maxSourceExtent_","getExtent","maxTargetExtent","limitedTargetExtent","getIntersection","targetCenter","getCenter","sourceResolution","calculateSourceResolution","errorThresholdInPixels","DEFAULT_RASTER_REPROJECTION_ERROR_THRESHOLD","triangulation_","targetResolution_","targetExtent_","sourceExtent","calculateSourceExtent","sourceImage_","sourcePixelRatio_","getPixelRatio","canvas_","sourceListenerKey_","disposeInternal","unlistenSource_","getProjection","reproject_","sourceState","getState","width","getWidth","render","getResolution","listen","CHANGE","e","_ol_source_Image_","attributions","logo","projection","resolutions_","resolutions","reprojectedImage_","reprojectedRevision_","getResolutions","findNearestResolution","idx","linearFindNearest","sourceProjection","ENABLE_RASTER_REPROJECTION","equivalent","getRevision","equals","dispose","getImageInternal","bind","handleImageChange","event","dispatchEvent","Event","EventType_","IMAGELOADSTART","IMAGELOADEND","IMAGELOADERROR","defaultImageLoadFunction","_ol_source_ImageWMS_","crossOrigin_","url_","url","params_","params","v13_","updateV13_","serverType_","hidpi_","hidpi","imageSize_","renderedRevision_","ratio_","ratio","GETFEATUREINFO_IMAGE_SIZE_","getGetFeatureInfoUrl","coordinate","projectionObj","get","sourceProjectionObj","transform","getForViewAndSize","baseParams","DEFAULT_WMS_VERSION","assign","x","Math","floor","y","getRequestUrl_","getParams","imageResolution","center","viewWidth","ceil","viewHeight","viewExtent","requestWidth","requestHeight","requestExtent","containsExtent","round","getImageLoadFunction","size","assert","getCode","dpi","bbox","axisOrientation","getAxisOrientation","substr","join","appendParams","getUrl","setImageLoadFunction","setUrl","updateParams","version","compareVersions","_vm","_c","_self","attrs","path","_v","staticRenderFns","data","created","mounted","methods","initMap","zoom","source","LAYERS","controls","attribution","target","layers","wms","view","component","_ol_uri_","uri","keyParams","Object","keys","k","push","encodeURIComponent","qs","replace","indexOf"],"mappings":"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","file":"js/chunk-29cf3694.5c6c4b1c.js","sourcesContent":["import _ol_ from '../index.js';\nimport _ol_LayerType_ from '../layertype.js';\nimport _ol_layer_Layer_ from '../layer/layer.js';\n\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link ol.Object}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @constructor\n * @extends {ol.layer.Layer}\n * @fires ol.render.Event\n * @param {olx.layer.ImageOptions=} opt_options Layer options.\n * @api\n */\nvar _ol_layer_Image_ = function(opt_options) {\n  var options = opt_options ? opt_options : {};\n  _ol_layer_Layer_.call(this,  /** @type {olx.layer.LayerOptions} */ (options));\n\n  /**\n   * The layer type.\n   * @protected\n   * @type {ol.LayerType}\n   */\n  this.type = _ol_LayerType_.IMAGE;\n\n};\n\n_ol_.inherits(_ol_layer_Image_, _ol_layer_Layer_);\n\n\n/**\n * Return the associated {@link ol.source.Image source} of the image layer.\n * @function\n * @return {ol.source.Image} Source.\n * @api\n */\n_ol_layer_Image_.prototype.getSource;\nexport default _ol_layer_Image_;\n","/**\n * Available server types: `'carmentaserver'`, `'geoserver'`, `'mapserver'`,\n *     `'qgis'`. These are servers that have vendor parameters beyond the WMS\n *     specification that OpenLayers can make use of.\n * @enum {string}\n */\nvar _ol_source_WMSServerType_ = {\n  CARMENTA_SERVER: 'carmentaserver',\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGIS: 'qgis'\n};\n\nexport default _ol_source_WMSServerType_;\n","import _ol_ from './index.js';\nimport _ol_ImageBase_ from './imagebase.js';\nimport _ol_ImageState_ from './imagestate.js';\nimport _ol_events_ from './events.js';\nimport _ol_events_EventType_ from './events/eventtype.js';\nimport _ol_extent_ from './extent.js';\n\n/**\n * @constructor\n * @extends {ol.ImageBase}\n * @param {ol.Extent} extent Extent.\n * @param {number|undefined} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {string} src Image source URI.\n * @param {?string} crossOrigin Cross origin.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n */\nvar _ol_Image_ = function(extent, resolution, pixelRatio, src, crossOrigin, imageLoadFunction) {\n\n  _ol_ImageBase_.call(this, extent, resolution, pixelRatio, _ol_ImageState_.IDLE);\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.src_ = src;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement|Image|HTMLVideoElement}\n   */\n  this.image_ = new Image();\n  if (crossOrigin !== null) {\n    this.image_.crossOrigin = crossOrigin;\n  }\n\n  /**\n   * @private\n   * @type {Array.<ol.EventsKey>}\n   */\n  this.imageListenerKeys_ = null;\n\n  /**\n   * @protected\n   * @type {ol.ImageState}\n   */\n  this.state = _ol_ImageState_.IDLE;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = imageLoadFunction;\n\n};\n\n_ol_.inherits(_ol_Image_, _ol_ImageBase_);\n\n\n/**\n * @inheritDoc\n * @api\n */\n_ol_Image_.prototype.getImage = function() {\n  return this.image_;\n};\n\n\n/**\n * Tracks loading or read errors.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageError_ = function() {\n  this.state = _ol_ImageState_.ERROR;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Tracks successful image load.\n *\n * @private\n */\n_ol_Image_.prototype.handleImageLoad_ = function() {\n  if (this.resolution === undefined) {\n    this.resolution = _ol_extent_.getHeight(this.extent) / this.image_.height;\n  }\n  this.state = _ol_ImageState_.LOADED;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Load the image or retry if loading previously failed.\n * Loading is taken care of by the tile queue, and calling this method is\n * only needed for preloading or for reloading in case of an error.\n * @override\n * @api\n */\n_ol_Image_.prototype.load = function() {\n  if (this.state == _ol_ImageState_.IDLE || this.state == _ol_ImageState_.ERROR) {\n    this.state = _ol_ImageState_.LOADING;\n    this.changed();\n    this.imageListenerKeys_ = [\n      _ol_events_.listenOnce(this.image_, _ol_events_EventType_.ERROR,\n          this.handleImageError_, this),\n      _ol_events_.listenOnce(this.image_, _ol_events_EventType_.LOAD,\n          this.handleImageLoad_, this)\n    ];\n    this.imageLoadFunction_(this, this.src_);\n  }\n};\n\n\n/**\n * @param {HTMLCanvasElement|Image|HTMLVideoElement} image Image.\n */\n_ol_Image_.prototype.setImage = function(image) {\n  this.image_ = image;\n};\n\n\n/**\n * Discards event handlers which listen for load completion or errors.\n *\n * @private\n */\n_ol_Image_.prototype.unlistenImage_ = function() {\n  this.imageListenerKeys_.forEach(_ol_events_.unlistenByKey);\n  this.imageListenerKeys_ = null;\n};\nexport default _ol_Image_;\n","import _ol_ from '../index.js';\nimport _ol_ImageBase_ from '../imagebase.js';\nimport _ol_ImageState_ from '../imagestate.js';\nimport _ol_events_ from '../events.js';\nimport _ol_events_EventType_ from '../events/eventtype.js';\nimport _ol_extent_ from '../extent.js';\nimport _ol_reproj_ from '../reproj.js';\nimport _ol_reproj_Triangulation_ from '../reproj/triangulation.js';\n\n/**\n * @classdesc\n * Class encapsulating single reprojected image.\n * See {@link ol.source.Image}.\n *\n * @constructor\n * @extends {ol.ImageBase}\n * @param {ol.proj.Projection} sourceProj Source projection (of the data).\n * @param {ol.proj.Projection} targetProj Target projection.\n * @param {ol.Extent} targetExtent Target extent.\n * @param {number} targetResolution Target resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.ReprojImageFunctionType} getImageFunction\n *     Function returning source images (extent, resolution, pixelRatio).\n */\nvar _ol_reproj_Image_ = function(sourceProj, targetProj,\n    targetExtent, targetResolution, pixelRatio, getImageFunction) {\n\n  /**\n   * @private\n   * @type {ol.proj.Projection}\n   */\n  this.targetProj_ = targetProj;\n\n  /**\n   * @private\n   * @type {ol.Extent}\n   */\n  this.maxSourceExtent_ = sourceProj.getExtent();\n  var maxTargetExtent = targetProj.getExtent();\n\n  var limitedTargetExtent = maxTargetExtent ?\n    _ol_extent_.getIntersection(targetExtent, maxTargetExtent) : targetExtent;\n\n  var targetCenter = _ol_extent_.getCenter(limitedTargetExtent);\n  var sourceResolution = _ol_reproj_.calculateSourceResolution(\n      sourceProj, targetProj, targetCenter, targetResolution);\n\n  var errorThresholdInPixels = _ol_.DEFAULT_RASTER_REPROJECTION_ERROR_THRESHOLD;\n\n  /**\n   * @private\n   * @type {!ol.reproj.Triangulation}\n   */\n  this.triangulation_ = new _ol_reproj_Triangulation_(\n      sourceProj, targetProj, limitedTargetExtent, this.maxSourceExtent_,\n      sourceResolution * errorThresholdInPixels);\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.targetResolution_ = targetResolution;\n\n  /**\n   * @private\n   * @type {ol.Extent}\n   */\n  this.targetExtent_ = targetExtent;\n\n  var sourceExtent = this.triangulation_.calculateSourceExtent();\n\n  /**\n   * @private\n   * @type {ol.ImageBase}\n   */\n  this.sourceImage_ =\n      getImageFunction(sourceExtent, sourceResolution, pixelRatio);\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.sourcePixelRatio_ =\n      this.sourceImage_ ? this.sourceImage_.getPixelRatio() : 1;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement}\n   */\n  this.canvas_ = null;\n\n  /**\n   * @private\n   * @type {?ol.EventsKey}\n   */\n  this.sourceListenerKey_ = null;\n\n\n  var state = _ol_ImageState_.LOADED;\n\n  if (this.sourceImage_) {\n    state = _ol_ImageState_.IDLE;\n  }\n\n  _ol_ImageBase_.call(this, targetExtent, targetResolution, this.sourcePixelRatio_, state);\n};\n\n_ol_.inherits(_ol_reproj_Image_, _ol_ImageBase_);\n\n\n/**\n * @inheritDoc\n */\n_ol_reproj_Image_.prototype.disposeInternal = function() {\n  if (this.state == _ol_ImageState_.LOADING) {\n    this.unlistenSource_();\n  }\n  _ol_ImageBase_.prototype.disposeInternal.call(this);\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_reproj_Image_.prototype.getImage = function() {\n  return this.canvas_;\n};\n\n\n/**\n * @return {ol.proj.Projection} Projection.\n */\n_ol_reproj_Image_.prototype.getProjection = function() {\n  return this.targetProj_;\n};\n\n\n/**\n * @private\n */\n_ol_reproj_Image_.prototype.reproject_ = function() {\n  var sourceState = this.sourceImage_.getState();\n  if (sourceState == _ol_ImageState_.LOADED) {\n    var width = _ol_extent_.getWidth(this.targetExtent_) / this.targetResolution_;\n    var height =\n        _ol_extent_.getHeight(this.targetExtent_) / this.targetResolution_;\n\n    this.canvas_ = _ol_reproj_.render(width, height, this.sourcePixelRatio_,\n        this.sourceImage_.getResolution(), this.maxSourceExtent_,\n        this.targetResolution_, this.targetExtent_, this.triangulation_, [{\n          extent: this.sourceImage_.getExtent(),\n          image: this.sourceImage_.getImage()\n        }], 0);\n  }\n  this.state = sourceState;\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_reproj_Image_.prototype.load = function() {\n  if (this.state == _ol_ImageState_.IDLE) {\n    this.state = _ol_ImageState_.LOADING;\n    this.changed();\n\n    var sourceState = this.sourceImage_.getState();\n    if (sourceState == _ol_ImageState_.LOADED ||\n        sourceState == _ol_ImageState_.ERROR) {\n      this.reproject_();\n    } else {\n      this.sourceListenerKey_ = _ol_events_.listen(this.sourceImage_,\n          _ol_events_EventType_.CHANGE, function(e) {\n            var sourceState = this.sourceImage_.getState();\n            if (sourceState == _ol_ImageState_.LOADED ||\n                sourceState == _ol_ImageState_.ERROR) {\n              this.unlistenSource_();\n              this.reproject_();\n            }\n          }, this);\n      this.sourceImage_.load();\n    }\n  }\n};\n\n\n/**\n * @private\n */\n_ol_reproj_Image_.prototype.unlistenSource_ = function() {\n  _ol_events_.unlistenByKey(/** @type {!ol.EventsKey} */ (this.sourceListenerKey_));\n  this.sourceListenerKey_ = null;\n};\nexport default _ol_reproj_Image_;\n","import _ol_ from '../index.js';\nimport _ol_ImageState_ from '../imagestate.js';\nimport _ol_array_ from '../array.js';\nimport _ol_events_Event_ from '../events/event.js';\nimport _ol_extent_ from '../extent.js';\nimport _ol_proj_ from '../proj.js';\nimport _ol_reproj_Image_ from '../reproj/image.js';\nimport _ol_source_Source_ from '../source/source.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing a single image.\n *\n * @constructor\n * @abstract\n * @extends {ol.source.Source}\n * @param {ol.SourceImageOptions} options Single image source options.\n * @api\n */\nvar _ol_source_Image_ = function(options) {\n  _ol_source_Source_.call(this, {\n    attributions: options.attributions,\n    extent: options.extent,\n    logo: options.logo,\n    projection: options.projection,\n    state: options.state\n  });\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.resolutions_ = options.resolutions !== undefined ?\n    options.resolutions : null;\n\n\n  /**\n   * @private\n   * @type {ol.reproj.Image}\n   */\n  this.reprojectedImage_ = null;\n\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.reprojectedRevision_ = 0;\n};\n\n_ol_.inherits(_ol_source_Image_, _ol_source_Source_);\n\n\n/**\n * @return {Array.<number>} Resolutions.\n * @override\n */\n_ol_source_Image_.prototype.getResolutions = function() {\n  return this.resolutions_;\n};\n\n\n/**\n * @protected\n * @param {number} resolution Resolution.\n * @return {number} Resolution.\n */\n_ol_source_Image_.prototype.findNearestResolution = function(resolution) {\n  if (this.resolutions_) {\n    var idx = _ol_array_.linearFindNearest(this.resolutions_, resolution, 0);\n    resolution = this.resolutions_[idx];\n  }\n  return resolution;\n};\n\n\n/**\n * @param {ol.Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @return {ol.ImageBase} Single image.\n */\n_ol_source_Image_.prototype.getImage = function(extent, resolution, pixelRatio, projection) {\n  var sourceProjection = this.getProjection();\n  if (!_ol_.ENABLE_RASTER_REPROJECTION ||\n      !sourceProjection ||\n      !projection ||\n      _ol_proj_.equivalent(sourceProjection, projection)) {\n    if (sourceProjection) {\n      projection = sourceProjection;\n    }\n    return this.getImageInternal(extent, resolution, pixelRatio, projection);\n  } else {\n    if (this.reprojectedImage_) {\n      if (this.reprojectedRevision_ == this.getRevision() &&\n          _ol_proj_.equivalent(\n              this.reprojectedImage_.getProjection(), projection) &&\n          this.reprojectedImage_.getResolution() == resolution &&\n          _ol_extent_.equals(this.reprojectedImage_.getExtent(), extent)) {\n        return this.reprojectedImage_;\n      }\n      this.reprojectedImage_.dispose();\n      this.reprojectedImage_ = null;\n    }\n\n    this.reprojectedImage_ = new _ol_reproj_Image_(\n        sourceProjection, projection, extent, resolution, pixelRatio,\n        function(extent, resolution, pixelRatio) {\n          return this.getImageInternal(extent, resolution,\n              pixelRatio, sourceProjection);\n        }.bind(this));\n    this.reprojectedRevision_ = this.getRevision();\n\n    return this.reprojectedImage_;\n  }\n};\n\n\n/**\n * @abstract\n * @param {ol.Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @return {ol.ImageBase} Single image.\n * @protected\n */\n_ol_source_Image_.prototype.getImageInternal = function(extent, resolution, pixelRatio, projection) {};\n\n\n/**\n * Handle image change events.\n * @param {ol.events.Event} event Event.\n * @protected\n */\n_ol_source_Image_.prototype.handleImageChange = function(event) {\n  var image = /** @type {ol.Image} */ (event.target);\n  switch (image.getState()) {\n    case _ol_ImageState_.LOADING:\n      this.dispatchEvent(\n          new _ol_source_Image_.Event(_ol_source_Image_.EventType_.IMAGELOADSTART,\n              image));\n      break;\n    case _ol_ImageState_.LOADED:\n      this.dispatchEvent(\n          new _ol_source_Image_.Event(_ol_source_Image_.EventType_.IMAGELOADEND,\n              image));\n      break;\n    case _ol_ImageState_.ERROR:\n      this.dispatchEvent(\n          new _ol_source_Image_.Event(_ol_source_Image_.EventType_.IMAGELOADERROR,\n              image));\n      break;\n    default:\n      // pass\n  }\n};\n\n\n/**\n * Default image load function for image sources that use ol.Image image\n * instances.\n * @param {ol.Image} image Image.\n * @param {string} src Source.\n */\n_ol_source_Image_.defaultImageLoadFunction = function(image, src) {\n  image.getImage().src = src;\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link ol.source.Image} instances are instances of this\n * type.\n *\n * @constructor\n * @extends {ol.events.Event}\n * @implements {oli.source.ImageEvent}\n * @param {string} type Type.\n * @param {ol.Image} image The image.\n */\n_ol_source_Image_.Event = function(type, image) {\n\n  _ol_events_Event_.call(this, type);\n\n  /**\n   * The image related to the event.\n   * @type {ol.Image}\n   * @api\n   */\n  this.image = image;\n\n};\n_ol_.inherits(_ol_source_Image_.Event, _ol_events_Event_);\n\n\n/**\n * @enum {string}\n * @private\n */\n_ol_source_Image_.EventType_ = {\n\n  /**\n   * Triggered when an image starts loading.\n   * @event ol.source.Image.Event#imageloadstart\n   * @api\n   */\n  IMAGELOADSTART: 'imageloadstart',\n\n  /**\n   * Triggered when an image finishes loading.\n   * @event ol.source.Image.Event#imageloadend\n   * @api\n   */\n  IMAGELOADEND: 'imageloadend',\n\n  /**\n   * Triggered if image loading results in an error.\n   * @event ol.source.Image.Event#imageloaderror\n   * @api\n   */\n  IMAGELOADERROR: 'imageloaderror'\n\n};\nexport default _ol_source_Image_;\n","// FIXME cannot be shared between maps with different projections\n\nimport _ol_ from '../index.js';\nimport _ol_Image_ from '../image.js';\nimport _ol_asserts_ from '../asserts.js';\nimport _ol_events_ from '../events.js';\nimport _ol_events_EventType_ from '../events/eventtype.js';\nimport _ol_extent_ from '../extent.js';\nimport _ol_obj_ from '../obj.js';\nimport _ol_proj_ from '../proj.js';\nimport _ol_reproj_ from '../reproj.js';\nimport _ol_source_Image_ from '../source/image.js';\nimport _ol_source_WMSServerType_ from '../source/wmsservertype.js';\nimport _ol_string_ from '../string.js';\nimport _ol_uri_ from '../uri.js';\n\n/**\n * @classdesc\n * Source for WMS servers providing single, untiled images.\n *\n * @constructor\n * @fires ol.source.Image.Event\n * @extends {ol.source.Image}\n * @param {olx.source.ImageWMSOptions=} opt_options Options.\n * @api\n */\nvar _ol_source_ImageWMS_ = function(opt_options) {\n\n  var options = opt_options || {};\n\n  _ol_source_Image_.call(this, {\n    attributions: options.attributions,\n    logo: options.logo,\n    projection: options.projection,\n    resolutions: options.resolutions\n  });\n\n  /**\n   * @private\n   * @type {?string}\n   */\n  this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.url_ = options.url;\n\n  /**\n   * @private\n   * @type {ol.ImageLoadFunctionType}\n   */\n  this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\n    options.imageLoadFunction : _ol_source_Image_.defaultImageLoadFunction;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = options.params || {};\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n  this.updateV13_();\n\n  /**\n   * @private\n   * @type {ol.source.WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {ol.source.WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {ol.Image}\n   */\n  this.image_ = null;\n\n  /**\n   * @private\n   * @type {ol.Size}\n   */\n  this.imageSize_ = [0, 0];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.renderedRevision_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n\n};\n\n_ol_.inherits(_ol_source_ImageWMS_, _ol_source_Image_);\n\n\n/**\n * @const\n * @type {ol.Size}\n * @private\n */\n_ol_source_ImageWMS_.GETFEATUREINFO_IMAGE_SIZE_ = [101, 101];\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {ol.ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\n_ol_source_ImageWMS_.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  if (this.url_ === undefined) {\n    return undefined;\n  }\n  var projectionObj = _ol_proj_.get(projection);\n  var sourceProjectionObj = this.getProjection();\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    resolution = _ol_reproj_.calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, resolution);\n    coordinate = _ol_proj_.transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  var extent = _ol_extent_.getForViewAndSize(\n      coordinate, resolution, 0,\n      _ol_source_ImageWMS_.GETFEATUREINFO_IMAGE_SIZE_);\n\n  var baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': _ol_.DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  _ol_obj_.assign(baseParams, this.params_, params);\n\n  var x = Math.floor((coordinate[0] - extent[0]) / resolution);\n  var y = Math.floor((extent[3] - coordinate[1]) / resolution);\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(\n      extent, _ol_source_ImageWMS_.GETFEATUREINFO_IMAGE_SIZE_,\n      1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\n_ol_source_ImageWMS_.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @inheritDoc\n */\n_ol_source_ImageWMS_.prototype.getImageInternal = function(extent, resolution, pixelRatio, projection) {\n\n  if (this.url_ === undefined) {\n    return null;\n  }\n\n  resolution = this.findNearestResolution(resolution);\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  var imageResolution = resolution / pixelRatio;\n\n  var center = _ol_extent_.getCenter(extent);\n  var viewWidth = Math.ceil(_ol_extent_.getWidth(extent) / imageResolution);\n  var viewHeight = Math.ceil(_ol_extent_.getHeight(extent) / imageResolution);\n  var viewExtent = _ol_extent_.getForViewAndSize(center, imageResolution, 0,\n      [viewWidth, viewHeight]);\n  var requestWidth = Math.ceil(this.ratio_ * _ol_extent_.getWidth(extent) / imageResolution);\n  var requestHeight = Math.ceil(this.ratio_ * _ol_extent_.getHeight(extent) / imageResolution);\n  var requestExtent = _ol_extent_.getForViewAndSize(center, imageResolution, 0,\n      [requestWidth, requestHeight]);\n\n  var image = this.image_;\n  if (image &&\n      this.renderedRevision_ == this.getRevision() &&\n      image.getResolution() == resolution &&\n      image.getPixelRatio() == pixelRatio &&\n      _ol_extent_.containsExtent(image.getExtent(), viewExtent)) {\n    return image;\n  }\n\n  var params = {\n    'SERVICE': 'WMS',\n    'VERSION': _ol_.DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  _ol_obj_.assign(params, this.params_);\n\n  this.imageSize_[0] = Math.round(_ol_extent_.getWidth(requestExtent) / imageResolution);\n  this.imageSize_[1] = Math.round(_ol_extent_.getHeight(requestExtent) / imageResolution);\n\n  var url = this.getRequestUrl_(requestExtent, this.imageSize_, pixelRatio,\n      projection, params);\n\n  this.image_ = new _ol_Image_(requestExtent, resolution, pixelRatio,\n      url, this.crossOrigin_, this.imageLoadFunction_);\n\n  this.renderedRevision_ = this.getRevision();\n\n  _ol_events_.listen(this.image_, _ol_events_EventType_.CHANGE,\n      this.handleImageChange, this);\n\n  return this.image_;\n\n};\n\n\n/**\n * Return the image load function of the source.\n * @return {ol.ImageLoadFunctionType} The image load function.\n * @api\n */\n_ol_source_ImageWMS_.prototype.getImageLoadFunction = function() {\n  return this.imageLoadFunction_;\n};\n\n\n/**\n * @param {ol.Extent} extent Extent.\n * @param {ol.Size} size Size.\n * @param {number} pixelRatio Pixel ratio.\n * @param {ol.proj.Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string} Request URL.\n * @private\n */\n_ol_source_ImageWMS_.prototype.getRequestUrl_ = function(extent, size, pixelRatio, projection, params) {\n\n  _ol_asserts_.assert(this.url_ !== undefined, 9); // `url` must be configured or set using `#setUrl()`\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case _ol_source_WMSServerType_.GEOSERVER:\n        var dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case _ol_source_WMSServerType_.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case _ol_source_WMSServerType_.CARMENTA_SERVER:\n      case _ol_source_WMSServerType_.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        _ol_asserts_.assert(false, 8); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  params['WIDTH'] = size[0];\n  params['HEIGHT'] = size[1];\n\n  var axisOrientation = projection.getAxisOrientation();\n  var bbox;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    bbox = [extent[1], extent[0], extent[3], extent[2]];\n  } else {\n    bbox = extent;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  return _ol_uri_.appendParams(/** @type {string} */ (this.url_), params);\n};\n\n\n/**\n * Return the URL used for this WMS source.\n * @return {string|undefined} URL.\n * @api\n */\n_ol_source_ImageWMS_.prototype.getUrl = function() {\n  return this.url_;\n};\n\n\n/**\n * Set the image load function of the source.\n * @param {ol.ImageLoadFunctionType} imageLoadFunction Image load function.\n * @api\n */\n_ol_source_ImageWMS_.prototype.setImageLoadFunction = function(\n    imageLoadFunction) {\n  this.image_ = null;\n  this.imageLoadFunction_ = imageLoadFunction;\n  this.changed();\n};\n\n\n/**\n * Set the URL to use for requests.\n * @param {string|undefined} url URL.\n * @api\n */\n_ol_source_ImageWMS_.prototype.setUrl = function(url) {\n  if (url != this.url_) {\n    this.url_ = url;\n    this.image_ = null;\n    this.changed();\n  }\n};\n\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\n_ol_source_ImageWMS_.prototype.updateParams = function(params) {\n  _ol_obj_.assign(this.params_, params);\n  this.updateV13_();\n  this.image_ = null;\n  this.changed();\n};\n\n\n/**\n * @private\n */\n_ol_source_ImageWMS_.prototype.updateV13_ = function() {\n  var version = this.params_['VERSION'] || _ol_.DEFAULT_WMS_VERSION;\n  this.v13_ = _ol_string_.compareVersions(version, '1.3') >= 0;\n};\nexport default _ol_source_ImageWMS_;\n","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[_c('el-breadcrumb',{attrs:{\"separator-class\":\"el-icon-arrow-right\"}},[_c('el-breadcrumb-item',{attrs:{\"to\":{ path: '/home' }}},[_vm._v(\"首页\")]),_c('el-breadcrumb-item',[_vm._v(\"GeoServer\")]),_c('el-breadcrumb-item',[_vm._v(\"加载WMS\")])],1),_c('el-card',[_c('div',{attrs:{\"id\":\"map\"}})])],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div>\r\n        <!--面包屑导航区域-->\r\n        <el-breadcrumb separator-class=\"el-icon-arrow-right\">\r\n            <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\r\n            <el-breadcrumb-item>GeoServer</el-breadcrumb-item>\r\n            <el-breadcrumb-item>加载WMS</el-breadcrumb-item>\r\n        </el-breadcrumb>\r\n        <!--卡片区域-->\r\n        <el-card>\r\n            <div id=\"map\"></div>\r\n        </el-card>\r\n    </div>\r\n</template>\r\n<script>\r\nimport Map from 'ol/map';\r\nimport View from 'ol/view';\r\nimport ImageLayer from 'ol/layer/image';\r\nimport ImageWMS from 'ol/source/imagewms';\r\nimport control from 'ol/control';\r\nexport default {\r\n    data() {\r\n        return {}\r\n    },\r\n    created() {\r\n    },\r\n    mounted() {\r\n        this.initMap()\r\n    },\r\n    methods: {\r\n        initMap() {\r\n            let view = new View({\r\n                zoom: 4,\r\n                center: [267, 38],\r\n                projection: \"EPSG:4326\"\r\n            });\r\n            let wms = new ImageLayer({\r\n                source: new ImageWMS({\r\n                    ratio: 1,\r\n                    url: process.env.VUE_APP_GEOSERVER + 'geoserver/wms',\r\n                    params: {\r\n                        'FORMAT': 'image/png',\r\n                        'VERSION': '1.1.1',\r\n                        LAYERS: 'topp:states'\r\n                    }\r\n                })\r\n            });\r\n            let map = new Map({\r\n                controls: control.defaults({\r\n                    attribution: false\r\n                }).extend([]),\r\n                target: \"map\",\r\n                layers: [\r\n                    wms\r\n                ],\r\n                view: view\r\n            });\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n\r\n</style>\r\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./WMS.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./WMS.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./WMS.vue?vue&type=template&id=e254a388&scoped=true&\"\nimport script from \"./WMS.vue?vue&type=script&lang=js&\"\nexport * from \"./WMS.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"e254a388\",\n  null\n  \n)\n\nexport default component.exports","var _ol_uri_ = {};\n\n\n/**\n * Appends query parameters to a URI.\n *\n * @param {string} uri The original URI, which may already have query data.\n * @param {!Object} params An object where keys are URI-encoded parameter keys,\n *     and the values are arbitrary types or arrays.\n * @return {string} The new URI.\n */\n_ol_uri_.appendParams = function(uri, params) {\n  var keyParams = [];\n  // Skip any null or undefined parameter values\n  Object.keys(params).forEach(function(k) {\n    if (params[k] !== null && params[k] !== undefined) {\n      keyParams.push(k + '=' + encodeURIComponent(params[k]));\n    }\n  });\n  var qs = keyParams.join('&');\n  // remove any trailing ? or &\n  uri = uri.replace(/[?&]$/, '');\n  // append ? or & depending on whether uri has existing parameters\n  uri = uri.indexOf('?') === -1 ? uri + '?' : uri + '&';\n  return uri + qs;\n};\nexport default _ol_uri_;\n"],"sourceRoot":""}